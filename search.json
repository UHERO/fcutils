[{"path":"https://uhero.github.io/fcutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 fcutils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://uhero.github.io/fcutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Fuleky. Author, maintainer.","code":""},{"path":"https://uhero.github.io/fcutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fuleky, Peter (2023). Utility Functions Time Series Forecasting, volume TBD number TBD. doi:TBD.","code":"@Manual{,   title = {Utility Functions for Time Series and Forecasting},   author = {{Fuleky} and {Peter}},   journal = {TBD},   year = {2023},   volume = {TBD},   number = {TBD},   pages = {TBD},   doi = {TBD}, }"},{"path":"https://uhero.github.io/fcutils/index.html","id":"fcutils","dir":"","previous_headings":"","what":"Time Series and Forecast Utilities","title":"Time Series and Forecast Utilities","text":"goal fcutils facilitate time series data wrangling. package contains utility functions time series generation, frequency conversion, growth rate calculation, plotting, .","code":""},{"path":"https://uhero.github.io/fcutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time Series and Forecast Utilities","text":"can install development version fcutils GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"UHERO/fcutils\")"},{"path":"https://uhero.github.io/fcutils/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Time Series and Forecast Utilities","text":"Illustration package features.","code":"# load the fcutils package library(fcutils)  # get public data from UDAMAN get_series(c(\"VADCNS@HI.Q\", \"EAFNS@HI.Q\", \"YLAF@HI.Q\", \"PRM@HI.Q\"), raw  = TRUE, public = TRUE) |>    # calculate year-to-date growth rate   ytd_gr() |>   # filter for the period 2017Q1 to 2023Q4   span(2017.1, 2023.4) |>   # convert to monthly frequency   disagg(conv_type = \"mean\", target_freq = \"month\") |>   # plot the series, with the last one on the secondary axis   plot_2ax()"},{"path":"https://uhero.github.io/fcutils/reference/AtoQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","title":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","text":"Linear interpolation based AREMOS command reference page 292 (superseded disagg())","code":""},{"path":"https://uhero.github.io/fcutils/reference/AtoQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","text":"","code":"AtoQ(ser_in, aggr = \"mean\")"},{"path":"https://uhero.github.io/fcutils/reference/AtoQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","text":"ser_in xts series interpolated (freq = ) aggr interpolation method: aggregate via mean (default) sum","code":""},{"path":"https://uhero.github.io/fcutils/reference/AtoQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","text":"interpolated xts series (freq = q)","code":""},{"path":"https://uhero.github.io/fcutils/reference/AtoQ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear interpolation based on AREMOS command reference page 292 (superseded by disagg()) — AtoQ","text":"","code":"quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   tsbox::ts_pick(\"E_NF_HI\") |>   QtoA() |> # this matches with below   AtoQ() |>   QtoA() |> # this matches with above   tsbox::ts_plot() #> Loading required namespace: xts #> Joining with `by = join_by(time)`"},{"path":"https://uhero.github.io/fcutils/reference/QtoA.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","title":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","text":"Aggregate quarterly annual frequency (superseded tsbox::ts_frequency())","code":""},{"path":"https://uhero.github.io/fcutils/reference/QtoA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","text":"","code":"QtoA(ser_in, aggr = \"mean\")"},{"path":"https://uhero.github.io/fcutils/reference/QtoA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","text":"ser_in xts series converted (freq = q) aggr aggregate via mean (default) sum","code":""},{"path":"https://uhero.github.io/fcutils/reference/QtoA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","text":"converted xts series (freq = )","code":""},{"path":"https://uhero.github.io/fcutils/reference/QtoA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate from quarterly to annual frequency (superseded by tsbox::ts_frequency()) — QtoA","text":"","code":"quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   tsbox::ts_pick(\"E_NF_HI\") |>   QtoA() |> # this matches with below   AtoQ() |>   QtoA() |> # this matches with above   tsbox::ts_plot() #> Joining with `by = join_by(time)`"},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xts addfactor — addf","title":"Create xts addfactor — addf","text":"Create xts addfactor","code":""},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xts addfactor — addf","text":"","code":"addf(   start = bnk_start,   end = bnk_end,   from = 0,   to = 0,   ser_name = \"value\",   per = \"year\" )"},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xts addfactor — addf","text":"start start date linear interpolation (character: \"yyyy-mm-dd\", \"yyyyqq\", \"yyyy\") end end date linear interpolation (character: \"yyyy-mm-dd\", \"yyyyqq\", \"yyyy\") first value linear interpolation (numeric) last value linear interpolation (numeric) ser_name name xts series (string) per periodicity series (character: \"year\" - default) date format start quarterly, automatically set \"quarter\"","code":""},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create xts addfactor — addf","text":"single xts series spanning bnk_start-bnk_end","code":""},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create xts addfactor — addf","text":"wrapper around make_xts additional functionality. start end dates specify span non-zero add-factor value. remaining period start end filled zeros.","code":""},{"path":"https://uhero.github.io/fcutils/reference/addf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create xts addfactor — addf","text":"","code":"addf() #>            value #> 1970-01-01     0 #> 1971-01-01     0 #> 1972-01-01     0 #> 1973-01-01     0 #> 1974-01-01     0 #> 1975-01-01     0 #> 1976-01-01     0 #> 1977-01-01     0 #> 1978-01-01     0 #> 1979-01-01     0 #>        ...       #> 2091-01-01     0 #> 2092-01-01     0 #> 2093-01-01     0 #> 2094-01-01     0 #> 2095-01-01     0 #> 2096-01-01     0 #> 2097-01-01     0 #> 2098-01-01     0 #> 2099-01-01     0 #> 2100-01-01     0 addf(201002, 201504, 1, 2) #>            value #> 1970-01-01     0 #> 1970-04-01     0 #> 1970-07-01     0 #> 1970-10-01     0 #> 1971-01-01     0 #> 1971-04-01     0 #> 1971-07-01     0 #> 1971-10-01     0 #> 1972-01-01     0 #> 1972-04-01     0 #>        ...       #> 2098-07-01     0 #> 2098-10-01     0 #> 2099-01-01     0 #> 2099-04-01     0 #> 2099-07-01     0 #> 2099-10-01     0 #> 2100-01-01     0 #> 2100-04-01     0 #> 2100-07-01     0 #> 2100-10-01     0 addf(20100101, 20601201, 1, 2, per = \"month\") #>            value #> 1970-01-01     0 #> 1970-02-01     0 #> 1970-03-01     0 #> 1970-04-01     0 #> 1970-05-01     0 #> 1970-06-01     0 #> 1970-07-01     0 #> 1970-08-01     0 #> 1970-09-01     0 #> 1970-10-01     0 #>        ...       #> 2100-03-01     0 #> 2100-04-01     0 #> 2100-05-01     0 #> 2100-06-01     0 #> 2100-07-01     0 #> 2100-08-01     0 #> 2100-09-01     0 #> 2100-10-01     0 #> 2100-11-01     0 #> 2100-12-01     0 addf(20100101, from = 1, to = 2, per = \"quarter\") #>               value #> 1970-01-01 0.000000 #> 1970-04-01 0.000000 #> 1970-07-01 0.000000 #> 1970-10-01 0.000000 #> 1971-01-01 0.000000 #> 1971-04-01 0.000000 #> 1971-07-01 0.000000 #> 1971-10-01 0.000000 #> 1972-01-01 0.000000 #> 1972-04-01 0.000000 #>        ...          #> 2098-07-01 1.975207 #> 2098-10-01 1.977961 #> 2099-01-01 1.980716 #> 2099-04-01 1.983471 #> 2099-07-01 1.986226 #> 2099-10-01 1.988981 #> 2100-01-01 1.991736 #> 2100-04-01 1.994490 #> 2100-07-01 1.997245 #> 2100-10-01 2.000000 addf(2010.2, 2015.4, 1, 2, \"ECT_HI\") #>            ECT_HI #> 1970-01-01      0 #> 1970-04-01      0 #> 1970-07-01      0 #> 1970-10-01      0 #> 1971-01-01      0 #> 1971-04-01      0 #> 1971-07-01      0 #> 1971-10-01      0 #> 1972-01-01      0 #> 1972-04-01      0 #>        ...        #> 2098-07-01      0 #> 2098-10-01      0 #> 2099-01-01      0 #> 2099-04-01      0 #> 2099-07-01      0 #> 2099-10-01      0 #> 2100-01-01      0 #> 2100-04-01      0 #> 2100-07-01      0 #> 2100-10-01      0"},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":null,"dir":"Reference","previous_headings":"","what":"end of data range in the data bank — bnk_end","title":"end of data range in the data bank — bnk_end","text":"end data range data bank","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"end of data range in the data bank — bnk_end","text":"","code":"bnk_end"},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"end of data range in the data bank — bnk_end","text":"scalar yyyy-mm-dd date","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"end of data range in the data bank — bnk_end","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"end of data range in the data bank — bnk_end","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_end.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"end of data range in the data bank — bnk_end","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":null,"dir":"Reference","previous_headings":"","what":"start of data range in the data bank — bnk_start","title":"start of data range in the data bank — bnk_start","text":"start data range data bank","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"start of data range in the data bank — bnk_start","text":"","code":"bnk_start"},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"start of data range in the data bank — bnk_start","text":"scalar yyyy-mm-dd date","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"start of data range in the data bank — bnk_start","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"start of data range in the data bank — bnk_start","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/bnk_start.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"start of data range in the data bank — bnk_start","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/cagr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate compund annual growth — cagr","title":"Calculate compund annual growth — cagr","text":"Calculate compund annual growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/cagr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate compund annual growth — cagr","text":"","code":"cagr(x)"},{"path":"https://uhero.github.io/fcutils/reference/cagr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate compund annual growth — cagr","text":"x ts-boxable object growth calculated first last period","code":""},{"path":"https://uhero.github.io/fcutils/reference/cagr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate compund annual growth — cagr","text":"tibble single row containing compound annual growth first last period x (percent)","code":""},{"path":"https://uhero.github.io/fcutils/reference/cagr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate compund annual growth — cagr","text":"","code":"quarterly_data_example |>   cagr() #> # A tibble: 1 × 31 #>   years_elapsed E_NF_HI ECT_HI EMN_HI EWT_HI   ERT_HI E_TRADE_HI E_TU_HI #>           <dbl>   <dbl>  <dbl>  <dbl>  <dbl>    <dbl>      <dbl>   <dbl> #> 1          25.2   0.689   1.88 -0.819  0.349 -0.00852     0.0655   0.792 #> # ℹ 23 more variables: ETWTANS_HI <dbl>, ETWNS_HI <dbl>, EUT_HI <dbl>, #> #   EIF_HI <dbl>, EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, #> #   E_PBS_HI <dbl>, E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, #> #   EHC_HI <dbl>, EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, #> #   EGV_HI <dbl>, EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, #> #   EGVLC_HI <dbl> quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   cagr() #> # A tibble: 1 × 31 #>   years_elapsed E_NF_HI ECT_HI EMN_HI EWT_HI   ERT_HI E_TRADE_HI E_TU_HI #>           <dbl>   <dbl>  <dbl>  <dbl>  <dbl>    <dbl>      <dbl>   <dbl> #> 1          25.2   0.689   1.88 -0.819  0.349 -0.00852     0.0655   0.792 #> # ℹ 23 more variables: ETWTANS_HI <dbl>, ETWNS_HI <dbl>, EUT_HI <dbl>, #> #   EIF_HI <dbl>, EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, #> #   E_PBS_HI <dbl>, E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, #> #   EHC_HI <dbl>, EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, #> #   EGV_HI <dbl>, EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, #> #   EGVLC_HI <dbl> quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   tsbox::ts_span(\"2000-01-01\", \"2020-01-01\") |>   tsbox::ts_pick(\"E_NF_HI\") |>   cagr() #> # A tibble: 1 × 2 #>   years_elapsed E_NF_HI #>           <dbl>   <dbl> #> 1            20   0.974"},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ","title":"Convert ","text":"Convert \"ts-boxable\" objects long format (extension tsbox::ts_long())","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ","text":"","code":"conv_long(x, ser_info = FALSE)"},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ","text":"x \"ts-boxable\" object converted ser_info additional details returned (TRUE) long format x (default: FALSE)","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ","text":"returns ts-boxable object long format id, time value columns. ser_info = TRUE, also returns following attributes: was_wide TRUE x wide data frame, FALSE otherwise, ser_names names series x.","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ","text":"function performs similar operation tsbox::ts_long(). converts wide data frames ts-boxable objects long format (wide data frames ts-boxable). important difference compared tsbox::ts_long() conv_long() ensures objects containing single time series get id column.","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ","text":"","code":"quarterly_data_example |>   conv_long() #> # A tibble: 3,060 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 1998-01-01  531. #>  2 E_NF_HI 1998-04-01  531. #>  3 E_NF_HI 1998-07-01  533. #>  4 E_NF_HI 1998-10-01  531. #>  5 E_NF_HI 1999-01-01  530. #>  6 E_NF_HI 1999-04-01  533. #>  7 E_NF_HI 1999-07-01  537. #>  8 E_NF_HI 1999-10-01  541. #>  9 E_NF_HI 2000-01-01  544. #> 10 E_NF_HI 2000-04-01  551. #> # ℹ 3,050 more rows quarterly_data_example |>   conv_long() |>   tsbox::ts_tslist() |>   conv_long() #> # A tibble: 3,060 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 1998-01-01  531. #>  2 E_NF_HI 1998-04-01  531. #>  3 E_NF_HI 1998-07-01  533. #>  4 E_NF_HI 1998-10-01  531. #>  5 E_NF_HI 1999-01-01  530. #>  6 E_NF_HI 1999-04-01  533. #>  7 E_NF_HI 1999-07-01  537. #>  8 E_NF_HI 1999-10-01  541. #>  9 E_NF_HI 2000-01-01  544. #> 10 E_NF_HI 2000-04-01  551. #> # ℹ 3,050 more rows quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   conv_long(ser_info = TRUE) #> # A tibble: 3,060 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 1998-01-01  531. #>  2 E_NF_HI 1998-04-01  531. #>  3 E_NF_HI 1998-07-01  533. #>  4 E_NF_HI 1998-10-01  531. #>  5 E_NF_HI 1999-01-01  530. #>  6 E_NF_HI 1999-04-01  533. #>  7 E_NF_HI 1999-07-01  537. #>  8 E_NF_HI 1999-10-01  541. #>  9 E_NF_HI 2000-01-01  544. #> 10 E_NF_HI 2000-04-01  551. #> # ℹ 3,050 more rows quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_NF_HI\") |>   tsbox::ts_xts() |>   conv_long() #> # A tibble: 102 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 1998-01-01  531. #>  2 E_NF_HI 1998-04-01  531. #>  3 E_NF_HI 1998-07-01  533. #>  4 E_NF_HI 1998-10-01  531. #>  5 E_NF_HI 1999-01-01  530. #>  6 E_NF_HI 1999-04-01  533. #>  7 E_NF_HI 1999-07-01  537. #>  8 E_NF_HI 1999-10-01  541. #>  9 E_NF_HI 2000-01-01  544. #> 10 E_NF_HI 2000-04-01  551. #> # ℹ 92 more rows quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   tsbox::ts_pick(\"E_NF_HI\") |>   conv_long() #> # A tibble: 102 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 1998-01-01  531. #>  2 E_NF_HI 1998-04-01  531. #>  3 E_NF_HI 1998-07-01  533. #>  4 E_NF_HI 1998-10-01  531. #>  5 E_NF_HI 1999-01-01  530. #>  6 E_NF_HI 1999-04-01  533. #>  7 E_NF_HI 1999-07-01  537. #>  8 E_NF_HI 1999-10-01  541. #>  9 E_NF_HI 2000-01-01  544. #> 10 E_NF_HI 2000-04-01  551. #> # ℹ 92 more rows"},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ","title":"Convert ","text":"Convert \"ts-boxable\" objects wide format (extension tsbox::ts_wide())","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ","text":"","code":"conv_wide(x)"},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ","text":"x \"ts-boxable\" object converted","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ","text":"returns ts-boxable object long format id, time value columns.","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ","text":"function performs similar operation tsbox::ts_wide(). converts ts-boxable objects wide format. important difference compared tsbox::ts_wide() conv_wide() require x long tbl.","code":""},{"path":"https://uhero.github.io/fcutils/reference/conv_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ","text":"","code":"quarterly_data_example |>   conv_long() |>   tsbox::ts_tslist() |>   conv_wide() #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    531.   23.3   15.9   15.9   65.2       81.0    27.9       10   #>  2 1998-04-01    531.   23.0   15.8   15.9   64.6       80.6    27.9       10   #>  3 1998-07-01    533.   23     15.8   15.9   64.2       80.1    27.6       10.1 #>  4 1998-10-01    531.   23.0   15.8   16     64.2       80.2    27.3       10   #>  5 1999-01-01    530.   22.8   15.8   15.8   64.1       79.8    27.0        9.7 #>  6 1999-04-01    533.   22.9   15.9   15.8   64.8       80.6    27.4       10   #>  7 1999-07-01    537.   22.9   16.1   15.8   65.1       81.0    27.6       10.2 #>  8 1999-10-01    541.   23.3   16.3   16.0   65.9       82.0    27.9       10.3 #>  9 2000-01-01    544.   24.3   16.3   16.2   66.0       82.3    28.0       10.4 #> 10 2000-04-01    551.   25     16.4   16.2   66.0       82.3    28.1       10.6 #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() |>   conv_wide() #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    531.   23.3   15.9   15.9   65.2       81.0    27.9       10   #>  2 1998-04-01    531.   23.0   15.8   15.9   64.6       80.6    27.9       10   #>  3 1998-07-01    533.   23     15.8   15.9   64.2       80.1    27.6       10.1 #>  4 1998-10-01    531.   23.0   15.8   16     64.2       80.2    27.3       10   #>  5 1999-01-01    530.   22.8   15.8   15.8   64.1       79.8    27.0        9.7 #>  6 1999-04-01    533.   22.9   15.9   15.8   64.8       80.6    27.4       10   #>  7 1999-07-01    537.   22.9   16.1   15.8   65.1       81.0    27.6       10.2 #>  8 1999-10-01    541.   23.3   16.3   16.0   65.9       82.0    27.9       10.3 #>  9 2000-01-01    544.   24.3   16.3   16.2   66.0       82.3    28.0       10.4 #> 10 2000-04-01    551.   25     16.4   16.2   66.0       82.3    28.1       10.6 #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_NF_HI\") |>   tsbox::ts_xts() |>   conv_wide() #> # A tibble: 102 × 2 #>    time       E_NF_HI #>    <date>       <dbl> #>  1 1998-01-01    531. #>  2 1998-04-01    531. #>  3 1998-07-01    533. #>  4 1998-10-01    531. #>  5 1999-01-01    530. #>  6 1999-04-01    533. #>  7 1999-07-01    537. #>  8 1999-10-01    541. #>  9 2000-01-01    544. #> 10 2000-04-01    551. #> # ℹ 92 more rows"},{"path":"https://uhero.github.io/fcutils/reference/copy_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","title":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","text":"Copy data frame clipboard (works MacOS)","code":""},{"path":"https://uhero.github.io/fcutils/reference/copy_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","text":"","code":"copy_tbl(x, dec = 2)"},{"path":"https://uhero.github.io/fcutils/reference/copy_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","text":"x tibble (data frame) copied dec number decimals round numeric columns (default: 2)","code":""},{"path":"https://uhero.github.io/fcutils/reference/copy_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","text":"copy_tbl() returns input x invisibly","code":""},{"path":"https://uhero.github.io/fcutils/reference/copy_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy a data frame to clipboard (only works on MacOS) — copy_tbl","text":"","code":"if (FALSE) { # interactive() monthly_data_example |> copy_tbl() monthly_data_example |> copy_tbl(1) }"},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":null,"dir":"Reference","previous_headings":"","what":"daily data for examples — daily_data_example","title":"daily data for examples — daily_data_example","text":"daily data examples","code":""},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"daily data for examples — daily_data_example","text":"","code":"daily_data_example"},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"daily data for examples — daily_data_example","text":"tibble daily data","code":""},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"daily data for examples — daily_data_example","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"daily data for examples — daily_data_example","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/daily_data_example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daily data for examples — daily_data_example","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate univariate or multivariate time series from low to high frequency — disagg","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"Interpolate univariate multivariate time series low high frequency","code":""},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"","code":"disagg(x, conv_type = \"mean\", target_freq = \"quarter\", pattern = NULL)"},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"x tx-boxable object low frequency (e.g. annual quarterly) conv_type match quarterly value via \"first\", \"last\", \"sum\", \"mean\" target_freq target frequency \"quarter\" \"month\" pattern single high-frequency pattern interpolation follow","code":""},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"interpolated object type input","code":""},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"time-span high-frequency pattern match larger time-span low frequency series. NA values allowed.","code":""},{"path":"https://uhero.github.io/fcutils/reference/disagg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate univariate or multivariate time series from low to high frequency — disagg","text":"","code":"quarterly_data_example |>   disagg(conv_type = \"mean\", target_freq = \"month\") #> # A tibble: 306 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    530.   23.3   15.9   15.9   65.3       81.1    27.9      10.0  #>  2 1998-02-01    530.   23.3   15.9   15.9   65.2       81.1    27.9      10.0  #>  3 1998-03-01    531.   23.2   15.9   15.9   65.0       80.9    27.9       9.99 #>  4 1998-04-01    531.   23.1   15.8   15.9   64.8       80.7    27.9       9.98 #>  5 1998-05-01    531.   23.0   15.7   15.9   64.6       80.6    27.9       9.99 #>  6 1998-06-01    532.   22.9   15.7   15.9   64.4       80.4    27.8      10.0  #>  7 1998-07-01    532.   23.0   15.8   15.9   64.3       80.2    27.7      10.1  #>  8 1998-08-01    533.   23.0   15.8   15.9   64.2       80.1    27.6      10.1  #>  9 1998-09-01    533.   23.0   15.8   15.9   64.2       80.1    27.5      10.1  #> 10 1998-10-01    532.   23.1   15.8   16.0   64.2       80.3    27.4      10.1  #> # ℹ 296 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   disagg(conv_type = \"mean\", target_freq = \"month\") |>   tsbox::ts_long() |>   tsbox::ts_frequency(to = \"quarter\", aggregate = \"mean\") |>   tsbox::ts_wide() # this matches original data #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    531.   23.3   15.9   15.9   65.2       81.0    27.9      10.0  #>  2 1998-04-01    531.   23.0   15.8   15.9   64.6       80.6    27.9      10.0  #>  3 1998-07-01    533.   23.0   15.8   15.9   64.2       80.1    27.6      10.1  #>  4 1998-10-01    531.   23.1   15.8   16.0   64.2       80.2    27.3      10.0  #>  5 1999-01-01    530.   22.8   15.8   15.8   64.1       79.8    27.0       9.70 #>  6 1999-04-01    533.   22.9   15.9   15.8   64.8       80.6    27.4      10.0  #>  7 1999-07-01    537.   22.9   16.1   15.8   65.1       81.0    27.6      10.2  #>  8 1999-10-01    541.   23.3   16.3   16.0   65.9       82.0    27.9      10.3  #>  9 2000-01-01    544.   24.3   16.3   16.2   66.0       82.3    28.0      10.4  #> 10 2000-04-01    551.   25.0   16.4   16.2   66.0       82.3    28.1      10.6  #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> # works with a single series too quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_NF_HI\") |>   disagg(conv_type = \"mean\", target_freq = \"month\") |>   tsbox::ts_plot()  # using a high-frequency pattern quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_span(\"2005-01-01\", \"2020-01-01\") |>   disagg(     conv_type = \"mean\", target_freq = \"month\", pattern = monthly_data_example |>       tsbox::ts_long() |>       tsbox::ts_pick(\"VISNS_HI\")   ) #> # A tibble: 5,490 × 3 #>    id      time       value #>    <chr>   <date>     <dbl> #>  1 E_NF_HI 2005-01-01  594. #>  2 E_NF_HI 2005-02-01  594. #>  3 E_NF_HI 2005-03-01  597. #>  4 E_NF_HI 2005-04-01  599. #>  5 E_NF_HI 2005-05-01  601. #>  6 E_NF_HI 2005-06-01  604. #>  7 E_NF_HI 2005-07-01  606. #>  8 E_NF_HI 2005-08-01  607. #>  9 E_NF_HI 2005-09-01  607. #> 10 E_NF_HI 2005-10-01  607. #> # ℹ 5,480 more rows # multiple low-frequency series, same number of high-frequency patterns purrr::map2(   quarterly_data_example |>     tsbox::ts_long() |>     tsbox::ts_pick(\"E_NF_HI\", \"ECT_HI\") |>     tsbox::ts_span(\"2005-01-01\", \"2020-01-01\") |>     tsbox::ts_tslist(),   monthly_data_example |>     tsbox::ts_long() |>     tsbox::ts_tslist(),   ~ disagg(.x, conv_type = \"mean\", target_freq = \"month\", pattern = .y) ) #> $E_NF_HI #>           Jan      Feb      Mar      Apr      May      Jun      Jul      Aug #> 2005 593.5738 594.4013 596.6349 598.5087 600.9826 603.5687 605.9319 606.9707 #> 2006 610.2488 611.7480 613.7932 615.2925 616.7793 618.8683 620.6741 621.4428 #> 2007 623.4465 624.2581 625.3154 624.9927 625.1417 625.8556 626.4415 626.8794 #> 2008 627.7850 627.9027 627.9523 626.5658 625.4017 623.8725 621.9083 619.5028 #> 2009 603.9465 600.9747 598.5889 596.4144 594.2369 592.4587 590.9630 589.1515 #> 2010 585.5052 585.9942 586.8906 587.0583 587.2063 587.4554 587.5331 587.7397 #> 2011 592.3448 592.2925 592.3527 591.7669 591.8813 593.0118 594.7446 596.0781 #> 2012 597.3096 597.4648 599.9756 603.4705 606.3016 608.7080 610.1740 611.4964 #> 2013 613.4293 613.5943 615.4564 617.4352 619.1189 620.6259 621.2486 621.9748 #> 2014 625.0215 624.7376 625.6009 626.1336 626.9342 628.2322 629.3842 629.9857 #> 2015 633.5051 634.1827 635.5722 635.6964 636.8377 638.4359 640.1714 641.2438 #> 2016 643.1674 642.6942 643.4384 643.7354 645.1859 647.6087 650.3633 651.4802 #> 2017 652.4007 653.1938 654.6655 655.1586 655.3890 655.5624 655.1007 654.4935 #> 2018 656.9356 656.8948 657.6496 657.2117 657.2849 657.8234 658.0329 657.9307 #> 2019 658.6742 657.4281 657.4177 656.3622 656.3630 657.5548 659.0891 659.6671 #> 2020 661.5288 661.6504 659.6409                                              #>           Sep      Oct      Nov      Dec #> 2005 606.8674 607.0725 607.3688 608.9287 #> 2006 621.1831 621.1600 621.4646 622.7753 #> 2007 626.2391 626.5553 626.8539 627.7109 #> 2008 616.0989 613.5885 610.4772 607.6144 #> 2009 586.9755 585.6734 584.8428 585.2338 #> 2010 588.2172 590.2064 591.3167 592.4368 #> 2011 596.9973 598.6100 598.9476 599.0824 #> 2012 612.1396 613.8338 614.5191 614.7871 #> 2013 622.3866 624.2312 625.0314 625.7374 #> 2014 630.1201 631.0176 631.6236 633.1188 #> 2015 641.9447 643.3814 643.7983 644.4003 #> 2016 651.1566 650.5726 650.2999 651.5574 #> 2017 654.2659 655.5130 656.2840 657.3730 #> 2018 658.0664 659.6086 660.1244 660.3870 #> 2019 659.2638 659.9357 660.3863 661.5980 #> 2020                                     #>  #> $ECT_HI #>           Jan      Feb      Mar      Apr      May      Jun      Jul      Aug #> 2005 32.07848 32.25652 32.74500 33.27132 33.80708 34.26160 34.55856 34.77317 #> 2006 35.76257 35.90999 36.14744 36.27870 36.50599 36.86532 37.25461 37.60711 #> 2007 38.98010 39.02962 39.29028 39.47952 39.69333 39.92715 40.10530 40.21079 #> 2008 40.46946 40.29747 40.10307 39.60855 39.27580 38.98565 38.72726 38.35418 #> 2009 35.34360 34.58832 33.95808 33.30886 32.73609 32.23505 31.81491 31.35012 #> 2010 30.40565 30.37988 30.32447 30.00358 29.77615 29.59027 29.36000 29.25239 #> 2011 29.42938 29.28739 29.39323 29.56006 29.74443 29.91551 30.00137 29.98386 #> 2012 29.99512 29.99538 30.06951 29.97542 30.02093 30.12366 30.24137 30.39056 #> 2013 31.53005 31.66100 31.93896 32.07899 32.19701 32.23401 32.09729 32.02115 #> 2014 32.50283 32.50769 32.63948 32.62248 32.76874 33.00878 33.28123 33.48115 #> 2015 33.95972 33.99017 34.38011 34.80216 35.30036 35.73749 36.06430 36.46832 #> 2016 39.27063 39.40486 39.52451 39.35133 39.36444 39.45423 39.54653 39.39206 #> 2017 38.03293 37.84974 37.84733 37.69117 37.59469 37.51414 37.36042 37.14337 #> 2018 36.94066 37.00984 37.25950 37.34862 37.52463 37.68675 37.79298 37.78618 #> 2019 37.70942 37.53035 37.62023 37.55973 37.60214 37.63813 37.60210 37.52640 #> 2020 37.65576 37.52032 37.20392                                              #>           Sep      Oct      Nov      Dec #> 2005 34.88828 35.15174 35.33938 35.61889 #> 2006 37.93829 38.47807 38.80098 39.03094 #> 2007 40.22391 40.38854 40.45281 40.53866 #> 2008 37.81856 37.38594 36.77444 36.14962 #> 2009 30.85497 30.52272 30.29341 30.32387 #> 2010 29.28760 29.65548 29.74161 29.73291 #> 2011 29.89477 29.87531 29.84527 29.94941 #> 2012 30.53807 30.92900 31.19075 31.45025 #> 2013 31.97156 32.19309 32.30765 32.48926 #> 2014 33.64762 33.98057 34.08603 34.17340 #> 2015 36.99738 37.84750 38.45060 39.02190 #> 2016 39.05141 38.69207 38.34810 38.21983 #> 2017 36.91621 36.86689 36.80714 36.93597 #> 2018 37.79084 37.95634 37.95976 37.96390 #> 2019 37.46150 37.68942 37.73487 37.85571 #> 2020                                     #>"},{"path":"https://uhero.github.io/fcutils/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse gets output and extract underlying data (GETS model development) — extract_data","title":"Parse gets output and extract underlying data (GETS model development) — extract_data","text":"Parse gets output extract underlying data (GETS model development)","code":""},{"path":"https://uhero.github.io/fcutils/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse gets output and extract underlying data (GETS model development) — extract_data","text":"","code":"extract_data(model_in, y_name)"},{"path":"https://uhero.github.io/fcutils/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse gets output and extract underlying data (GETS model development) — extract_data","text":"model_in model estimated arx, isat, getsm y_name actual name y variable","code":""},{"path":"https://uhero.github.io/fcutils/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse gets output and extract underlying data (GETS model development) — extract_data","text":"xts containing model variables","code":""},{"path":"https://uhero.github.io/fcutils/reference/extract_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse gets output and extract underlying data (GETS model development) — extract_data","text":"","code":"if (FALSE) { # interactive() # save the data associated with a gets model }"},{"path":"https://uhero.github.io/fcutils/reference/fcutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fcutils: Time Series and Forecast Utilities — fcutils-package","title":"fcutils: Time Series and Forecast Utilities — fcutils-package","text":"Utility functions retrieve data UDAMAN, wrangle, transform plot time series data.","code":""},{"path":[]},{"path":"https://uhero.github.io/fcutils/reference/fcutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fcutils: Time Series and Forecast Utilities — fcutils-package","text":"Maintainer: Peter Fuleky fuleky@hawaii.edu (ORCID)","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the date of the last observation (NAs are dropped) — find_end","title":"Find the date of the last observation (NAs are dropped) — find_end","text":"Find date last observation (NAs dropped)","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the date of the last observation (NAs are dropped) — find_end","text":"","code":"find_end(x, last_day = FALSE)"},{"path":"https://uhero.github.io/fcutils/reference/find_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the date of the last observation (NAs are dropped) — find_end","text":"x ts-boxable object last_day last day period returned (default: FALSE)","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the date of the last observation (NAs are dropped) — find_end","text":"date associated last observation","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_end.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the date of the last observation (NAs are dropped) — find_end","text":"","code":"quarterly_data_example |>   dplyr::mutate(E_NF_HI = dplyr::if_else(time > \"2022-01-01\", NA_real_, E_NF_HI)) |>   find_end() #>  [1] \"2022-01-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" #>  [6] \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" #> [11] \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" #> [16] \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" #> [21] \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" #> [26] \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" \"2023-04-01\" quarterly_data_example |>   dplyr::mutate(E_NF_HI = dplyr::if_else(time > \"2022-01-01\", NA_real_, E_NF_HI)) |>   find_end(TRUE) #>  [1] \"2022-03-31\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" #>  [6] \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" #> [11] \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" #> [16] \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" #> [21] \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" #> [26] \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\" \"2023-06-30\""},{"path":"https://uhero.github.io/fcutils/reference/find_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the date of the first observation (NAs are dropped) — find_start","title":"Find the date of the first observation (NAs are dropped) — find_start","text":"Find date first observation (NAs dropped)","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the date of the first observation (NAs are dropped) — find_start","text":"","code":"find_start(x)"},{"path":"https://uhero.github.io/fcutils/reference/find_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the date of the first observation (NAs are dropped) — find_start","text":"x ts-boxable object","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the date of the first observation (NAs are dropped) — find_start","text":"dates associated first observation","code":""},{"path":"https://uhero.github.io/fcutils/reference/find_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the date of the first observation (NAs are dropped) — find_start","text":"","code":"quarterly_data_example |>   dplyr::mutate(E_NF_HI = dplyr::if_else(time < \"2000-01-01\", NA_real_, E_NF_HI)) |>   find_start() #>  [1] \"2000-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" #>  [6] \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" #> [11] \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" #> [16] \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" #> [21] \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" #> [26] \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\" \"1998-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/gen_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a table with time series — gen_table","title":"Generate a table with time series — gen_table","text":"Generate table time series","code":""},{"path":"https://uhero.github.io/fcutils/reference/gen_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a table with time series — gen_table","text":"","code":"gen_table(   x,   tbl_start = as.character(Sys.Date() - lubridate::years(10)),   tbl_end = as.character(Sys.Date() + lubridate::years(2)),   percent = \"pc\",   time_across = TRUE,   tbl_height = 800,   save_loc = NULL )"},{"path":"https://uhero.github.io/fcutils/reference/gen_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a table with time series — gen_table","text":"x ts-boxable object tbl_start start period table tbl_end end period table percent type percent added (\"none\", \"pc\" (default), \"pcy\", \"pca\") time_across time column headers variable names first column (default TRUE) tbl_height height table px (default 800) save_loc file path saving table incl. extension (\"html\" \"csv\") (default NULL)","code":""},{"path":"https://uhero.github.io/fcutils/reference/gen_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a table with time series — gen_table","text":"table formatted output","code":""},{"path":"https://uhero.github.io/fcutils/reference/gen_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a table with time series — gen_table","text":"","code":"quarterly_data_example %>%   tsbox::ts_long() %>%   tsbox::ts_tslist() %>%   gen_table() #> # A tibble: 60 × 33 #>    id           `2015-07-01` `2015-10-01` `2016-01-01` `2016-04-01` `2016-07-01` #>    <chr>               <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1 EAD_HI              40.4         40.3         39.4         39.2         39.3  #>  2 EAD_HI (%)          -0.32        -0.1         -2.31        -0.58         0.26 #>  3 EAFAC_HI            40.0         40.4         40.9         41.1         41.1  #>  4 EAFAC_HI (%)         0.1          1            1.24         0.64        -0.07 #>  5 EAFFD_HI            66.3         67.1         67.2         68.0         68.9  #>  6 EAFFD_HI (%)         1.61         1.25         0.19         1.09         1.38 #>  7 EAF_HI             106.         107.         108.         109.         110    #>  8 EAF_HI (%)           1.04         1.16         0.59         0.92         0.83 #>  9 ECT_HI              36.5         38.4         39.4         39.4         39.3  #> 10 ECT_HI (%)           3.49         5.29         2.5         -0.03        -0.15 #> # ℹ 50 more rows #> # ℹ 27 more variables: `2016-10-01` <dbl>, `2017-01-01` <dbl>, #> #   `2017-04-01` <dbl>, `2017-07-01` <dbl>, `2017-10-01` <dbl>, #> #   `2018-01-01` <dbl>, `2018-04-01` <dbl>, `2018-07-01` <dbl>, #> #   `2018-10-01` <dbl>, `2019-01-01` <dbl>, `2019-04-01` <dbl>, #> #   `2019-07-01` <dbl>, `2019-10-01` <dbl>, `2020-01-01` <dbl>, #> #   `2020-04-01` <dbl>, `2020-07-01` <dbl>, `2020-10-01` <dbl>, … gen_table(quarterly_data_example) #> # A tibble: 60 × 33 #>    id           `2015-07-01` `2015-10-01` `2016-01-01` `2016-04-01` `2016-07-01` #>    <chr>               <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1 EAD_HI              40.4         40.3         39.4         39.2         39.3  #>  2 EAD_HI (%)          -0.32        -0.1         -2.31        -0.58         0.26 #>  3 EAFAC_HI            40.0         40.4         40.9         41.1         41.1  #>  4 EAFAC_HI (%)         0.1          1            1.24         0.64        -0.07 #>  5 EAFFD_HI            66.3         67.1         67.2         68.0         68.9  #>  6 EAFFD_HI (%)         1.61         1.25         0.19         1.09         1.38 #>  7 EAF_HI             106.         107.         108.         109.         110    #>  8 EAF_HI (%)           1.04         1.16         0.59         0.92         0.83 #>  9 ECT_HI              36.5         38.4         39.4         39.4         39.3  #> 10 ECT_HI (%)           3.49         5.29         2.5         -0.03        -0.15 #> # ℹ 50 more rows #> # ℹ 27 more variables: `2016-10-01` <dbl>, `2017-01-01` <dbl>, #> #   `2017-04-01` <dbl>, `2017-07-01` <dbl>, `2017-10-01` <dbl>, #> #   `2018-01-01` <dbl>, `2018-04-01` <dbl>, `2018-07-01` <dbl>, #> #   `2018-10-01` <dbl>, `2019-01-01` <dbl>, `2019-04-01` <dbl>, #> #   `2019-07-01` <dbl>, `2019-10-01` <dbl>, `2020-01-01` <dbl>, #> #   `2020-04-01` <dbl>, `2020-07-01` <dbl>, `2020-10-01` <dbl>, … gen_table(quarterly_data_example, percent = \"none\") #> # A tibble: 30 × 33 #>    id           `2015-07-01` `2015-10-01` `2016-01-01` `2016-04-01` `2016-07-01` #>    <chr>               <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1 EAD_HI               40.4         40.3         39.4         39.2         39.3 #>  2 EAFAC_HI             40.0         40.4         40.9         41.1         41.1 #>  3 EAFFD_HI             66.3         67.1         67.2         68.0         68.9 #>  4 EAF_HI              106.         107.         108.         109.         110   #>  5 ECT_HI               36.5         38.4         39.4         39.4         39.3 #>  6 EED_HI               15.1         15.3         14.6         14.6         14.9 #>  7 EFI_HI               16.3         16.3         16.3         16.2         16.3 #>  8 EGVFD_HI             33.1         33.0         32.9         33.1         33.3 #>  9 EGVLC_HI             18.9         18.8         19.0         19           19.0 #> 10 EGVSTEDNS_HI         45.4         51.9         50.9         51.6         43.9 #> # ℹ 20 more rows #> # ℹ 27 more variables: `2016-10-01` <dbl>, `2017-01-01` <dbl>, #> #   `2017-04-01` <dbl>, `2017-07-01` <dbl>, `2017-10-01` <dbl>, #> #   `2018-01-01` <dbl>, `2018-04-01` <dbl>, `2018-07-01` <dbl>, #> #   `2018-10-01` <dbl>, `2019-01-01` <dbl>, `2019-04-01` <dbl>, #> #   `2019-07-01` <dbl>, `2019-10-01` <dbl>, `2020-01-01` <dbl>, #> #   `2020-04-01` <dbl>, `2020-07-01` <dbl>, `2020-10-01` <dbl>, … gen_table(quarterly_data_example, percent = \"pcy\", time_across = FALSE) #> # A tibble: 32 × 61 #>    time       EAD_HI `EAD_HI (YoY%)` EAFAC_HI `EAFAC_HI (YoY%)` EAFFD_HI #>    <date>      <dbl>           <dbl>    <dbl>             <dbl>    <dbl> #>  1 2015-07-01   40.4           -0.81     40.0              0.28     66.3 #>  2 2015-10-01   40.3           -1.08     40.4              0.92     67.1 #>  3 2016-01-01   39.4           -3.27     40.9              2        67.2 #>  4 2016-04-01   39.2           -3.28     41.1              3.01     68.0 #>  5 2016-07-01   39.3           -2.72     41.1              2.83     68.9 #>  6 2016-10-01   39.0           -3.37     41.5              2.72     69.4 #>  7 2017-01-01   39             -1.02     41.8              2.37     70.7 #>  8 2017-04-01   39.0           -0.36     42.5              3.33     71.2 #>  9 2017-07-01   39.2           -0.25     42.5              3.36     71.7 #> 10 2017-10-01   38.9           -0.26     43.0              3.59     71.6 #> # ℹ 22 more rows #> # ℹ 55 more variables: `EAFFD_HI (YoY%)` <dbl>, EAF_HI <dbl>, #> #   `EAF_HI (YoY%)` <dbl>, ECT_HI <dbl>, `ECT_HI (YoY%)` <dbl>, EED_HI <dbl>, #> #   `EED_HI (YoY%)` <dbl>, EFI_HI <dbl>, `EFI_HI (YoY%)` <dbl>, EGVFD_HI <dbl>, #> #   `EGVFD_HI (YoY%)` <dbl>, EGVLC_HI <dbl>, `EGVLC_HI (YoY%)` <dbl>, #> #   EGVSTEDNS_HI <dbl>, `EGVSTEDNS_HI (YoY%)` <dbl>, EGVST_HI <dbl>, #> #   `EGVST_HI (YoY%)` <dbl>, EGV_HI <dbl>, `EGV_HI (YoY%)` <dbl>, … if (FALSE) { # interactive() gen_table(quarterly_data_example,   percent = \"pcy\",   time_across = FALSE, save_loc = \"~/Downloads/temp.csv\" ) gen_table(quarterly_data_example,   percent = \"pcy\", time_across = TRUE,   save_loc = \"~/Downloads/temp.html\" ) }"},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a set of series from udaman using series names — get_series","title":"Download a set of series from udaman using series names — get_series","text":"Download set series udaman using series names","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a set of series from udaman using series names — get_series","text":"","code":"get_series(   ser_id_vec,   format = \"wide\",   raw = TRUE,   rename = \"compact\",   freq = NULL,   descr = FALSE,   public = FALSE )"},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a set of series from udaman using series names — get_series","text":"ser_id_vec vector series names (character) format \"wide\" (default) \"long\" \"xts\" raw TRUE (default) FALSE (TRUE downloads raw data, FALSE downloads scaled rounded data) rename \"compact\" (default), \"full\", \"\". \"compact\": @ replaced _ frequency; \"full\": @ replaced . _; \"\": renaming, keep UDAMAN names freq frequency missing series names (want modify freq existing names) specify frequency (character), e.g. \"M\". descr TRUE add udaman series name series description parentheses (default: FALSE) public TRUE use public API interface - require VPN (default: FALSE)","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a set of series from udaman using series names — get_series","text":"time data series combined object specified format option","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download a set of series from udaman using series names — get_series","text":"function requires permission access UDAMAN. Store udaman token .Renviron file using following format: udaman_token = \"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\" using fcutils::set_udaman_token(\"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\") store udaman token among credentials (e.g. keychain) using keyring: keyring::key_set_with_value(service = \"udaman_token\", password = \"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\")","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a set of series from udaman using series names — get_series","text":"","code":"if (FALSE) { # interactive() get_series(c(\"VISNS@HI.M\", \"VAPNS@HI.M\"), raw = TRUE) get_series(c(\"VEXP_RB@HI.M\")) get_series(c(\"VISNS@HI.M\", \"VAPNS@HI.M\"), public = TRUE) get_series(c(\"VISNS@HI.M\", \"VISUSNS@HI.M\"), freq = \"Q\") get_series(c(\"VISNS@HI.M\", \"VAPNS@HI.M\"), format = \"xts\") get_series(c(\"VISNS@HI.M\"), format = \"xts\") get_series(c(\"VISNS@HI.M\"), format = \"xts\", descr = TRUE) get_series(c(\"E_NF_HI\", \"ECT_HI\", \"E_TU_HAW\"), freq = \"M\") get_series(c(\"E_NF__HI_M\", \"ECT__HI_M\", \"VAP__HI_W\")) get_series(c(\"E_NF_AT_HI_M\", \"ECT_AT_HI_M\", \"VAP_AT_HI_W\")) get_series(c(\"E_NF_HI5\", \"ECT__HIALL\", \"E_TU@CNTY\"), freq = \"M\") get_series(c(\"E_NF_HI5 , ECT__HIALL  E_TU@CNTY\", \"VAP_HAW ; ECT_HON\"), freq = \"M\") }"},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download series listed in an export table from udaman — get_series_exp","title":"Download series listed in an export table from udaman — get_series_exp","text":"Download series listed export table udaman","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download series listed in an export table from udaman — get_series_exp","text":"","code":"get_series_exp(   exp_id,   format = \"wide\",   raw = TRUE,   rename = \"compact\",   descr = FALSE,   public = FALSE,   save_loc = NULL )"},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download series listed in an export table from udaman — get_series_exp","text":"exp_id export id (character numeric) format \"wide\" (default) \"long\" \"xts\" raw TRUE (default) FALSE (TRUE downloads raw data, FALSE downloads scaled rounded data) rename \"compact\" (default), \"full\", \"\". \"compact\": @ replaced _ frequency; \"full\": @ replaced . _; \"\": renaming, keep UDAMAN names descr TRUE add udaman series name series description parentheses (default: FALSE) public TRUE use public API interface - require VPN (default: FALSE) save_loc file path saving data incl. extension (\"html\" \"csv\") (default NULL)","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download series listed in an export table from udaman — get_series_exp","text":"time data series combined tibble","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download series listed in an export table from udaman — get_series_exp","text":"function requires permission access UDAMAN. Store udaman token .Renviron file using following format: udaman_token = \"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\" using fcutils::set_udaman_token(\"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\") store udaman token among credentials (e.g. keychain) using keyring: keyring::key_set_with_value(service = \"udaman_token\", password = \"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\")","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_series_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download series listed in an export table from udaman — get_series_exp","text":"","code":"if (FALSE) { # interactive() get_series_exp(exp_id = 74) get_series_exp(74, format = \"xts\") }"},{"path":"https://uhero.github.io/fcutils/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a series name from variable components and retrieve the series — get_var","title":"Construct a series name from variable components and retrieve the series — get_var","text":"Construct series name variable components retrieve series","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a series name from variable components and retrieve the series — get_var","text":"","code":"get_var(ser_in, env = parent.frame())"},{"path":"https://uhero.github.io/fcutils/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a series name from variable components and retrieve the series — get_var","text":"ser_in variable name (character string substituted expressions) env environment expression evaluated","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a series name from variable components and retrieve the series — get_var","text":"variable","code":""},{"path":"https://uhero.github.io/fcutils/reference/get_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a series name from variable components and retrieve the series — get_var","text":"","code":"if (FALSE) { # interactive() ser_i <- \"_NF\" cnty_i <- \"HI\" quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_xts() %$% get_var(\"E{ser_i}_{cnty_i}\") }"},{"path":"https://uhero.github.io/fcutils/reference/grapes-plus-equals-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"In place addition — %+=%","title":"In place addition — %+=%","text":"Warning: Typing x %+=% y/2 returns x <- (x + y)/2. Adding parentheses, .e. x %+=% (y/2) solves problem.","code":""},{"path":"https://uhero.github.io/fcutils/reference/grapes-plus-equals-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In place addition — %+=%","text":"","code":"e1 %+=% e2"},{"path":"https://uhero.github.io/fcutils/reference/grapes-plus-equals-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In place addition — %+=%","text":"e1 first addend (returned sum) e2 second addend","code":""},{"path":"https://uhero.github.io/fcutils/reference/grapes-plus-equals-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In place addition — %+=%","text":"sum two addends replacing values first addend","code":""},{"path":"https://uhero.github.io/fcutils/reference/grapes-plus-equals-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In place addition — %+=%","text":"","code":"if (FALSE) { # interactive() add_QMOD.xts$VISUS_HI[pq(2022.3, 2023.4)] <- add_QMOD.xts$VISUS_HI[pq(2022.3, 2023.4)] +   c(0.01, -0.04, rep(-0.025, 4)) add_QMOD.xts$VISUS_HI[pq(2022.3, 2023.4)] %+=% c(0.01, -0.04, rep(-0.025, 4)) # easier on the eye }"},{"path":"https://uhero.github.io/fcutils/reference/index-topic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indexed series (wrapper around tsbox::ts_index()) — index","title":"Get indexed series (wrapper around tsbox::ts_index()) — index","text":"Get indexed series (wrapper around tsbox::ts_index())","code":""},{"path":"https://uhero.github.io/fcutils/reference/index-topic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indexed series (wrapper around tsbox::ts_index()) — index","text":"","code":"index(x, base_per = as.character(Sys.Date()), base_value = 100)"},{"path":"https://uhero.github.io/fcutils/reference/index-topic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indexed series (wrapper around tsbox::ts_index()) — index","text":"x ts-boxable object indexed base_per base date index set base_value (see examples). two dates provided, mean range set equal base_value. base_value numeric value index base_per (e.g. 1 100)","code":""},{"path":"https://uhero.github.io/fcutils/reference/index-topic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indexed series (wrapper around tsbox::ts_index()) — index","text":"indexed object type input","code":""},{"path":"https://uhero.github.io/fcutils/reference/index-topic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indexed series (wrapper around tsbox::ts_index()) — index","text":"","code":"quarterly_data_example |>   index(2010.1) #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    90.5   76.6   118.   88.5   98.5       96.3    106.       143. #>  2 1998-04-01    90.6   75.7   118.   88.8   97.7       95.8    106.       143. #>  3 1998-07-01    90.9   75.7   118.   88.7   97.1       95.3    105.       144. #>  4 1998-10-01    90.7   75.9   118.   89.2   97.0       95.4    104.       143. #>  5 1999-01-01    90.3   75.0   118.   88.0   96.8       94.9    103.       139. #>  6 1999-04-01    91.0   75.3   119.   88.3   97.9       95.9    104.       143. #>  7 1999-07-01    91.7   75.5   120.   88.3   98.4       96.3    105.       146. #>  8 1999-10-01    92.3   76.8   121.   89.4   99.6       97.5    106.       147. #>  9 2000-01-01    92.9   79.9   121.   90.5   99.8       97.8    106.       149. #> 10 2000-04-01    94.0   82.3   123.   90.5   99.8       97.8    107.       151. #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   index(c(2010.1, 2010.4)) #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01    90.2   78.1   120.   88.5   98.3       96.2    104.       141. #>  2 1998-04-01    90.3   77.2   119.   88.9   97.5       95.6    104.       141. #>  3 1998-07-01    90.6   77.2   119.   88.7   96.8       95.1    103.       142. #>  4 1998-10-01    90.4   77.4   119.   89.3   96.8       95.2    102.       141. #>  5 1999-01-01    90.0   76.5   119.   88.0   96.6       94.8    101.       137. #>  6 1999-04-01    90.7   76.7   120.   88.3   97.7       95.7    103.       141. #>  7 1999-07-01    91.4   77.0   122.   88.3   98.2       96.1    103.       144. #>  8 1999-10-01    92.0   78.2   123.   89.4   99.4       97.3    105.       145. #>  9 2000-01-01    92.6   81.4   123.   90.5   99.6       97.6    105.       146. #> 10 2000-04-01    93.7   83.9   124.   90.5   99.6       97.7    105.       149. #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   index(c(\"2010-01-01\", \"2010-12-31\"), 1) #> # A tibble: 102 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 1998-01-01   0.902  0.781   1.20  0.885  0.983      0.962    1.04       1.41 #>  2 1998-04-01   0.903  0.772   1.19  0.889  0.975      0.956    1.04       1.41 #>  3 1998-07-01   0.906  0.772   1.19  0.887  0.968      0.951    1.03       1.42 #>  4 1998-10-01   0.904  0.774   1.19  0.893  0.968      0.952    1.02       1.41 #>  5 1999-01-01   0.900  0.765   1.19  0.880  0.966      0.948    1.01       1.37 #>  6 1999-04-01   0.907  0.767   1.20  0.883  0.977      0.957    1.03       1.41 #>  7 1999-07-01   0.914  0.770   1.22  0.883  0.982      0.961    1.03       1.44 #>  8 1999-10-01   0.920  0.782   1.23  0.894  0.994      0.973    1.05       1.45 #>  9 2000-01-01   0.926  0.814   1.23  0.905  0.996      0.976    1.05       1.46 #> 10 2000-04-01   0.937  0.839   1.24  0.905  0.996      0.977    1.05       1.49 #> # ℹ 92 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl>"},{"path":"https://uhero.github.io/fcutils/reference/is_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a data frame is in wide format — is_wide","title":"Check if a data frame is in wide format — is_wide","text":"Check data frame wide format","code":""},{"path":"https://uhero.github.io/fcutils/reference/is_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a data frame is in wide format — is_wide","text":"","code":"is_wide(x)"},{"path":"https://uhero.github.io/fcutils/reference/is_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a data frame is in wide format — is_wide","text":"x tibble data frame","code":""},{"path":"https://uhero.github.io/fcutils/reference/is_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a data frame is in wide format — is_wide","text":"returns TRUE wide format data frame (time value columns), FALSE otherwise","code":""},{"path":"https://uhero.github.io/fcutils/reference/is_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a data frame is in wide format — is_wide","text":"","code":"monthly_data_example |> is_wide() #> [1] TRUE monthly_data_example |>   tsbox::ts_long() |>   is_wide() #> [1] FALSE dat_in <- monthly_data_example |>   tsbox::ts_long() |>   tsbox::ts_tslist() wide_df <- is_wide(dat_in) x_mod <- if (wide_df) tsbox::ts_long(dat_in) else tsbox::ts_tbl(dat_in) ans <- if (wide_df) tsbox::ts_wide(x_mod) else tsbox::copy_class(x_mod, dat_in)"},{"path":"https://uhero.github.io/fcutils/reference/ma.html","id":null,"dir":"Reference","previous_headings":"","what":"Backward looking moving average — ma","title":"Backward looking moving average — ma","text":"Backward looking moving average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backward looking moving average — ma","text":"","code":"ma(x, order)"},{"path":"https://uhero.github.io/fcutils/reference/ma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backward looking moving average — ma","text":"x ts-boxable object order numeric order (window length) moving average, includes contemporaneous observation","code":""},{"path":"https://uhero.github.io/fcutils/reference/ma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backward looking moving average — ma","text":"object type input containing moving average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backward looking moving average — ma","text":"","code":"quarterly_data_example |>   ma(4) |>   head() #> # A tibble: 6 × 31 #>   time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 1998-01-01     NA    NA     NA     NA     NA         NA      NA        NA    #> 2 1998-04-01     NA    NA     NA     NA     NA         NA      NA        NA    #> 3 1998-07-01     NA    NA     NA     NA     NA         NA      NA        NA    #> 4 1998-10-01    531.   23.1   15.8   15.9   64.6       80.5    27.7      10.0  #> 5 1999-01-01    531.   23.0   15.8   15.9   64.3       80.2    27.5       9.95 #> 6 1999-04-01    532.   22.9   15.8   15.9   64.3       80.2    27.3       9.95 #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl>"},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xts and fill with values — make_xts","title":"Create xts and fill with values — make_xts","text":"Create xts fill values","code":""},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xts and fill with values — make_xts","text":"","code":"make_xts(start = bnk_start, end = NULL, per = \"year\", val = NA_real_)"},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xts and fill with values — make_xts","text":"start date series start (character: \"yyyy-mm-dd\", \"yyyyqq\", \"yyyy\") end date series end (character: \"yyyy-mm-dd\", \"yyyyqq\", \"yyyy\") per periodicity series (character: \"year\" - default) date format start quarterly, automatically set \"quarter\" val values fill (numeric scalar, vector, tibble)","code":""},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create xts and fill with values — make_xts","text":"xts series","code":""},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create xts and fill with values — make_xts","text":"end missing, val vector one element, end date automatically determined length val vector. end missing val scalar, end date set bnk_end. end missing remaining arguments named. val tibble, end date automatically determined number rows tibble.","code":""},{"path":"https://uhero.github.io/fcutils/reference/make_xts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create xts and fill with values — make_xts","text":"","code":"make_xts() #>            value #> 1970-01-01    NA #> 1971-01-01    NA #> 1972-01-01    NA #> 1973-01-01    NA #> 1974-01-01    NA #> 1975-01-01    NA #> 1976-01-01    NA #> 1977-01-01    NA #> 1978-01-01    NA #> 1979-01-01    NA #>        ...       #> 2091-01-01    NA #> 2092-01-01    NA #> 2093-01-01    NA #> 2094-01-01    NA #> 2095-01-01    NA #> 2096-01-01    NA #> 2097-01-01    NA #> 2098-01-01    NA #> 2099-01-01    NA #> 2100-01-01    NA make_xts(val = 0, per = \"m\") #>            value #> 1970-01-01     0 #> 1970-02-01     0 #> 1970-03-01     0 #> 1970-04-01     0 #> 1970-05-01     0 #> 1970-06-01     0 #> 1970-07-01     0 #> 1970-08-01     0 #> 1970-09-01     0 #> 1970-10-01     0 #>        ...       #> 2100-03-01     0 #> 2100-04-01     0 #> 2100-05-01     0 #> 2100-06-01     0 #> 2100-07-01     0 #> 2100-08-01     0 #> 2100-09-01     0 #> 2100-10-01     0 #> 2100-11-01     0 #> 2100-12-01     0 make_xts(start = 20100101, per = \"quarter\", val = 0) #>            value #> 2010-01-01     0 #> 2010-04-01     0 #> 2010-07-01     0 #> 2010-10-01     0 #> 2011-01-01     0 #> 2011-04-01     0 #> 2011-07-01     0 #> 2011-10-01     0 #> 2012-01-01     0 #> 2012-04-01     0 #>        ...       #> 2098-07-01     0 #> 2098-10-01     0 #> 2099-01-01     0 #> 2099-04-01     0 #> 2099-07-01     0 #> 2099-10-01     0 #> 2100-01-01     0 #> 2100-04-01     0 #> 2100-07-01     0 #> 2100-10-01     0 make_xts(start = 2010.1, per = \"q\", val = 1:10) #>            value #> 2010-01-01     1 #> 2010-04-01     2 #> 2010-07-01     3 #> 2010-10-01     4 #> 2011-01-01     5 #> 2011-04-01     6 #> 2011-07-01     7 #> 2011-10-01     8 #> 2012-01-01     9 #> 2012-04-01    10 make_xts(2010.1, val = 1:10) # automatically set per = \"quarter\" #>            value #> 2010-01-01     1 #> 2010-04-01     2 #> 2010-07-01     3 #> 2010-10-01     4 #> 2011-01-01     5 #> 2011-04-01     6 #> 2011-07-01     7 #> 2011-10-01     8 #> 2012-01-01     9 #> 2012-04-01    10 make_xts(start = \"2010-01-01\", per = \"m\", val = 0) #>            value #> 2010-01-01     0 #> 2010-02-01     0 #> 2010-03-01     0 #> 2010-04-01     0 #> 2010-05-01     0 #> 2010-06-01     0 #> 2010-07-01     0 #> 2010-08-01     0 #> 2010-09-01     0 #> 2010-10-01     0 #>        ...       #> 2100-03-01     0 #> 2100-04-01     0 #> 2100-05-01     0 #> 2100-06-01     0 #> 2100-07-01     0 #> 2100-08-01     0 #> 2100-09-01     0 #> 2100-10-01     0 #> 2100-11-01     0 #> 2100-12-01     0 make_xts(start = 201001, per = \"q\",          val = tibble::tibble(E_NF_HON = c(1:10), ECT_HI = c(11:20))) #>            E_NF_HON ECT_HI #> 2010-01-01        1     11 #> 2010-04-01        2     12 #> 2010-07-01        3     13 #> 2010-10-01        4     14 #> 2011-01-01        5     15 #> 2011-04-01        6     16 #> 2011-07-01        7     17 #> 2011-10-01        8     18 #> 2012-01-01        9     19 #> 2012-04-01       10     20"},{"path":"https://uhero.github.io/fcutils/reference/model_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","title":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","text":"Parse lm() output convert bimets equation (GETS model development)","code":""},{"path":"https://uhero.github.io/fcutils/reference/model_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","text":"","code":"model_equation(model, ...)"},{"path":"https://uhero.github.io/fcutils/reference/model_equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","text":"model model estimated lm() (lm object) ... arguments format coefficients e.g. digits = 3","code":""},{"path":"https://uhero.github.io/fcutils/reference/model_equation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","text":"character vector containing estimated equation (1) bimets components (2:4)","code":""},{"path":"https://uhero.github.io/fcutils/reference/model_equation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse lm() output and convert into bimets equation (GETS model development) — model_equation","text":"","code":"if (FALSE) { # interactive() # this function combines coefficient estimates and variable names into an equation # in vector element 1 and into bimets components in vector elements 2-4. # https://stats.stackexchange.com/questions/63600/ # how-to-translate-the-results-from-lm-to-an-equation data(\"UKDriverDeaths\", package = \"datasets\") uk <- log10(UKDriverDeaths) dfm <- dynlm::dynlm(uk ~ L(uk, 1:3) + L(log(uk), c(5:6, 12))) model_equation(dfm) # (1) \"uk = - 0.12255631 + 0.42870091 * L(uk, 1:3)1 + 0.06306114 * L(uk, 1:3)2 - 0.09778518 * # L(uk, 1:3)3 + 0.37480999 * L(log(uk), c(5:6, 12))5 - 0.22709846 * L(log(uk), c(5:6, 12))6 + # 1.62340449 * L(log(uk), c(5:6, 12))12\" # (2) \"BEHAVIORAL> uk\" # (3) \"EQ> uk = b0 + b1 * TSLAG(uk, 1) + b2 * TSLAG(uk, 2) + b3 * TSLAG(uk, 3) + b4 * # TSLAG(LOG(uk), 5) + b5 * TSLAG(LOG(uk), 6) + b6 * TSLAG(LOG(uk), 12)\" # (4) \"COEFF> b0 b1 b2 b3 b4 b5 b6\" ## regression on multiple lags in a single L() call dfm <- dynlm::dynlm(d(log(uk)) ~ L(uk, c(1, 11, 12)), start = c(1975, 1), end = c(1982, 12)) model_equation(dfm) # (1) \"d(log(uk)) = 0.1018542 - 0.2379287 * L(uk, c(1, 11, 12))1 + 0.0368355 * # L(uk, c(1, 11, 12))11 + 0.1689896 * L(uk, c(1, 11, 12))12\" # (2) \"BEHAVIORAL> TSDELTA_LOG_uk\" # (3) \"EQ> TSDELTA(LOG(uk)) = b0 + b1 * TSLAG(uk, 1) + b2 * TSLAG(uk, 11) + b3 * TSLAG(uk, 12)\" # (4) \"COEFF> b0 b1 b2 b3\" }"},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":null,"dir":"Reference","previous_headings":"","what":"monthly data for examples — monthly_data_example","title":"monthly data for examples — monthly_data_example","text":"monthly data examples","code":""},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"monthly data for examples — monthly_data_example","text":"","code":"monthly_data_example"},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"monthly data for examples — monthly_data_example","text":"tibble monthly data","code":""},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"monthly data for examples — monthly_data_example","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"monthly data for examples — monthly_data_example","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/monthly_data_example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"monthly data for examples — monthly_data_example","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_cum.html","id":null,"dir":"Reference","previous_headings":"","what":"Month to date sum or average — mtd_cum","title":"Month to date sum or average — mtd_cum","text":"Month date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_cum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Month to date sum or average — mtd_cum","text":"","code":"mtd_cum(x, avg = TRUE)"},{"path":"https://uhero.github.io/fcutils/reference/mtd_cum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month to date sum or average — mtd_cum","text":"x ts-boxable object avg TRUE (default), return month date average, FALSE, return month date sum","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_cum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Month to date sum or average — mtd_cum","text":"object type input containing year date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_cum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Month to date sum or average — mtd_cum","text":"","code":"daily_data_example |>   mtd_cum() #> # A tibble: 571 × 3 #>    time       VISPNS_HI VAPNS_HI #>    <date>         <dbl>    <dbl> #>  1 2020-09-01      783      2.52 #>  2 2020-09-02      726.     2.32 #>  3 2020-09-03      749      2.27 #>  4 2020-09-04      760.     2.06 #>  5 2020-09-05      752.     1.98 #>  6 2020-09-06      712      1.89 #>  7 2020-09-07      718.     1.89 #>  8 2020-09-08      713.     1.84 #>  9 2020-09-09      698.     1.82 #> 10 2020-09-10      706.     1.82 #> # ℹ 561 more rows test <- daily_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"VAPNS_HI\") |>   mtd_cum() tsbox::`%ts/%`(test, tsbox::ts_lag(test, \"6 months\")) |> tail() #> # A tibble: 6 × 3 #>   id       time       value #>   <chr>    <date>     <dbl> #> 1 VAPNS_HI 2022-03-20  1.35 #> 2 VAPNS_HI 2022-03-21  1.36 #> 3 VAPNS_HI 2022-03-22  1.37 #> 4 VAPNS_HI 2022-03-23  1.37 #> 5 VAPNS_HI 2022-03-24  1.38 #> 6 VAPNS_HI 2022-03-25  1.38"},{"path":"https://uhero.github.io/fcutils/reference/mtd_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Month to date growth rate — mtd_gr","title":"Month to date growth rate — mtd_gr","text":"Month date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Month to date growth rate — mtd_gr","text":"","code":"mtd_gr(x)"},{"path":"https://uhero.github.io/fcutils/reference/mtd_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month to date growth rate — mtd_gr","text":"x ts-boxable object","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_gr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Month to date growth rate — mtd_gr","text":"object type input containing month date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/mtd_gr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Month to date growth rate — mtd_gr","text":"","code":"daily_data_example |>   mtd_gr() |>   tail() #> # A tibble: 6 × 3 #>   time       VISPNS_HI VAPNS_HI #>   <date>         <dbl>    <dbl> #> 1 2022-03-20      91.1     90.3 #> 2 2022-03-21      88.7     88.6 #> 3 2022-03-22      86.3     87.4 #> 4 2022-03-23      86.5     87.5 #> 5 2022-03-24      85.5     86.6 #> 6 2022-03-25      82.9     85.4"},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"Calculate number months two dates yyyyMm, yyyy.m yyyy-mm-dd","code":""},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"","code":"nmons(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"dat1 date period start (string: yyyyMm, yyyy.m, yyyy-mm-dd) dat2 date period end (string: yyyyMm, yyyy.m, yyyy-mm-dd)","code":""},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"numeric length date range months","code":""},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"endpoints included result subtract one time difference. Also, result rounded partial months counted. See examples.","code":""},{"path":"https://uhero.github.io/fcutils/reference/nmons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of months between two dates yyyyMm, yyyy.m or yyyy-mm-dd — nmons","text":"","code":"nmons(\"2010M1\", \"2010M2\") #> [1] 4 nmons(2010.1, 2010.4) #> [1] 10 nmons(\"2010-01-15\", \"2010-04-15\") #> [1] 4 nmons(\"2010-01-15\", \"2010-04-18\") #> [1] 4 nmons(\"2010-01-15\", \"2010-04-12\") #> [1] 3"},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"Calculate number quarters two dates yyyyQq, yyyy.q yyyy-mm-dd","code":""},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"","code":"nqtrs(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"dat1 date period start (string: yyyyQq, yyyy.q, yyyy-mm-dd) dat2 date period end (string: yyyyQq, yyyy.q, yyyy-mm-dd)","code":""},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"numeric length date range quarters","code":""},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"endpoints included result subtract one time difference. Also, result rounded partial quarters counted. See examples.","code":""},{"path":"https://uhero.github.io/fcutils/reference/nqtrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of quarters between two dates yyyyQq, yyyy.q or yyyy-mm-dd — nqtrs","text":"","code":"nqtrs(\"2010Q1\", \"2020Q4\") #> [1] 44 nqtrs(2010.1, 2020.4) #> [1] 44 nqtrs(\"2010-01-01\", \"2020-10-01\") #> [1] 44 nqtrs(\"2010-02-01\", \"2020-11-01\") #> [1] 44 nqtrs(\"2010-02-01\", \"2020-10-01\") #> [1] 43 nqtrs(\"2010-01-01\", \"2020-11-01\") #> [1] 44"},{"path":"https://uhero.github.io/fcutils/reference/p.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate dates to obtain period — p","title":"Concatenate dates to obtain period — p","text":"Concatenate dates obtain period","code":""},{"path":"https://uhero.github.io/fcutils/reference/p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate dates to obtain period — p","text":"","code":"p(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate dates to obtain period — p","text":"dat1 date period start (string: see examples) dat2 date period end (string: see examples)","code":""},{"path":"https://uhero.github.io/fcutils/reference/p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate dates to obtain period — p","text":"string containing date range","code":""},{"path":"https://uhero.github.io/fcutils/reference/p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate dates to obtain period — p","text":"","code":"p(\"2010-01-01\", \"2020-01-01\") #> [1] \"2010-01-01/2020-01-01\" p(20100101, 20200101) #> [1] \"2010-01-01/2020-01-01\" p(2010.1, 2020.4) #> [1] \"2010-01-01/2020-10-01\" p(,2020.4) #> [1] \"/2020-10-01\" p(\"2010Q1\", \"2020Q4\") #> [1] \"2010-01-01/2020-10-01\" p(2010, 2020) # for annual period only #> [1] \"2010-01-01/2020-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/pc_to_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert quarterly growth to annualized growth — pc_to_pca","title":"Convert quarterly growth to annualized growth — pc_to_pca","text":"Convert quarterly growth annualized growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/pc_to_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert quarterly growth to annualized growth — pc_to_pca","text":"","code":"pc_to_pca(x, freq = 4)"},{"path":"https://uhero.github.io/fcutils/reference/pc_to_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert quarterly growth to annualized growth — pc_to_pca","text":"x ts-boxable object containing quarterly growth (percent) freq numeric frequency time series e.g. 4 quarterly","code":""},{"path":"https://uhero.github.io/fcutils/reference/pc_to_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert quarterly growth to annualized growth — pc_to_pca","text":"object type input containing annualized growth (percent)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pc_to_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert quarterly growth to annualized growth — pc_to_pca","text":"","code":"quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pc() |>   pc_to_pca() |>   tail() #> # A tibble: 6 × 3 #>   id       time       value #>   <chr>    <date>     <dbl> #> 1 EGVLC_HI 2022-01-01  0    #> 2 EGVLC_HI 2022-04-01  1.53 #> 3 EGVLC_HI 2022-07-01 -1.50 #> 4 EGVLC_HI 2022-10-01  2.19 #> 5 EGVLC_HI 2023-01-01  3.72 #> 6 EGVLC_HI 2023-04-01  2.16 tsbox::ts_c(   quarterly_data_example |>     tsbox::ts_long() |>     tsbox::ts_pc() |>     pc_to_pca(),   quarterly_data_example |>     tsbox::ts_long() |>     tsbox::ts_pca() ) |>   dplyr::arrange(id, time) |>   tsbox::ts_wide() #> # A tibble: 102 × 61 #>    time       EAD_HI EAD_HI.1 EAFAC_HI EAFAC_HI.1 EAFFD_HI EAFFD_HI.1  EAF_HI #>    <date>      <dbl>    <dbl>    <dbl>      <dbl>    <dbl>      <dbl>   <dbl> #>  1 1998-01-01 NA       NA       NA         NA       NA         NA     NA      #>  2 1998-04-01  1.81     1.81    -5.09      -5.09     4.78       4.78   0.325  #>  3 1998-07-01  0.550    0.550   -5.86      -5.86     0.916      0.916 -2.12   #>  4 1998-10-01 -1.91    -1.91     1.40       1.40     0.414      0.414  0.842  #>  5 1999-01-01  6.20     6.20     1.07       1.07    -0.988     -0.988 -0.0930 #>  6 1999-04-01  7.39     7.39    -0.952     -0.952    6.71       6.71   3.30   #>  7 1999-07-01 10.1     10.1     -7.45      -7.45     3.80       3.80  -1.24   #>  8 1999-10-01 13.7     13.7     14.8       14.8      1.22       1.22   6.89   #>  9 2000-01-01  3.45     3.45    -1.04      -1.04     3.43       3.43   1.42   #> 10 2000-04-01  5.48     5.48     7.23       7.23     7.47       7.47   7.37   #> # ℹ 92 more rows #> # ℹ 53 more variables: EAF_HI.1 <dbl>, ECT_HI <dbl>, ECT_HI.1 <dbl>, #> #   EED_HI <dbl>, EED_HI.1 <dbl>, EFI_HI <dbl>, EFI_HI.1 <dbl>, EGVFD_HI <dbl>, #> #   EGVFD_HI.1 <dbl>, EGVLC_HI <dbl>, EGVLC_HI.1 <dbl>, EGVSTEDNS_HI <dbl>, #> #   EGVSTEDNS_HI.1 <dbl>, EGVST_HI <dbl>, EGVST_HI.1 <dbl>, EGV_HI <dbl>, #> #   EGV_HI.1 <dbl>, EHC_HI <dbl>, EHC_HI.1 <dbl>, EIF_HI <dbl>, EIF_HI.1 <dbl>, #> #   EMA_HI <dbl>, EMA_HI.1 <dbl>, EMN_HI <dbl>, EMN_HI.1 <dbl>, EOS_HI <dbl>, …"},{"path":"https://uhero.github.io/fcutils/reference/pca_to_pc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert annualized growth to quarterly growth — pca_to_pc","title":"Convert annualized growth to quarterly growth — pca_to_pc","text":"Convert annualized growth quarterly growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/pca_to_pc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert annualized growth to quarterly growth — pca_to_pc","text":"","code":"pca_to_pc(x, freq = 4)"},{"path":"https://uhero.github.io/fcutils/reference/pca_to_pc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert annualized growth to quarterly growth — pca_to_pc","text":"x ts-boxable object containing annualized growth (percent) freq numeric frequency time series e.g. 4 quarterly","code":""},{"path":"https://uhero.github.io/fcutils/reference/pca_to_pc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert annualized growth to quarterly growth — pca_to_pc","text":"object type input containing quarterly growth (percent)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pca_to_pc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert annualized growth to quarterly growth — pca_to_pc","text":"","code":"quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pca() |>   pca_to_pc() |>   tail() #> # A tibble: 6 × 3 #>   id       time        value #>   <chr>    <date>      <dbl> #> 1 EGVLC_HI 2022-01-01  0     #> 2 EGVLC_HI 2022-04-01  0.380 #> 3 EGVLC_HI 2022-07-01 -0.378 #> 4 EGVLC_HI 2022-10-01  0.543 #> 5 EGVLC_HI 2023-01-01  0.917 #> 6 EGVLC_HI 2023-04-01  0.535 tsbox::ts_c(   quarterly_data_example |>     tsbox::ts_long() |>     tsbox::ts_pca() |>     pca_to_pc(),   quarterly_data_example |>     tsbox::ts_long() |>     tsbox::ts_pc() ) |>   dplyr::arrange(id, time) |>   tsbox::ts_wide() #> # A tibble: 102 × 61 #>    time       EAD_HI EAD_HI.1 EAFAC_HI EAFAC_HI.1 EAFFD_HI EAFFD_HI.1  EAF_HI #>    <date>      <dbl>    <dbl>    <dbl>      <dbl>    <dbl>      <dbl>   <dbl> #>  1 1998-01-01 NA       NA       NA         NA       NA         NA     NA      #>  2 1998-04-01  0.448    0.448   -1.30      -1.30     1.17       1.17   0.0812 #>  3 1998-07-01  0.137    0.137   -1.50      -1.50     0.228      0.228 -0.533  #>  4 1998-10-01 -0.480   -0.480    0.347      0.347    0.103      0.103  0.210  #>  5 1999-01-01  1.52     1.52     0.266      0.266   -0.248     -0.248 -0.0233 #>  6 1999-04-01  1.80     1.80    -0.239     -0.239    1.64       1.64   0.815  #>  7 1999-07-01  2.43     2.43    -1.92      -1.92     0.938      0.938 -0.312  #>  8 1999-10-01  3.25     3.25     3.50       3.50     0.303      0.303  1.68   #>  9 2000-01-01  0.851    0.851   -0.262     -0.262    0.846      0.846  0.353  #> 10 2000-04-01  1.34     1.34     1.76       1.76     1.82       1.82   1.79   #> # ℹ 92 more rows #> # ℹ 53 more variables: EAF_HI.1 <dbl>, ECT_HI <dbl>, ECT_HI.1 <dbl>, #> #   EED_HI <dbl>, EED_HI.1 <dbl>, EFI_HI <dbl>, EFI_HI.1 <dbl>, EGVFD_HI <dbl>, #> #   EGVFD_HI.1 <dbl>, EGVLC_HI <dbl>, EGVLC_HI.1 <dbl>, EGVSTEDNS_HI <dbl>, #> #   EGVSTEDNS_HI.1 <dbl>, EGVST_HI <dbl>, EGVST_HI.1 <dbl>, EGV_HI <dbl>, #> #   EGV_HI.1 <dbl>, EHC_HI <dbl>, EHC_HI.1 <dbl>, EIF_HI <dbl>, EIF_HI.1 <dbl>, #> #   EMA_HI <dbl>, EMA_HI.1 <dbl>, EMN_HI <dbl>, EMN_HI.1 <dbl>, EOS_HI <dbl>, …"},{"path":"https://uhero.github.io/fcutils/reference/pcmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate multi-period average growth — pcmp","title":"Calculate multi-period average growth — pcmp","text":"Calculate multi-period average growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/pcmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate multi-period average growth — pcmp","text":"","code":"pcmp(x, lag = 4, comp_freq = 1)"},{"path":"https://uhero.github.io/fcutils/reference/pcmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate multi-period average growth — pcmp","text":"x ts-boxable object growth calculated (levels) lag number periods growth calculated comp_freq compounding frequency (1 period period, 4 annualized quarterly data, etc.)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pcmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate multi-period average growth — pcmp","text":"object type input ontaining average growth x (percent)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pcmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate multi-period average growth — pcmp","text":"","code":"quarterly_data_example |>   pcmp(20) |>   tail() #> # A tibble: 6 × 31 #>   time       E_NF_HI   ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>    <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 2022-01-01  -0.363 -0.146   -0.766 -0.347 -0.522     -0.485 -0.158     -0.220  #> 2 2022-04-01  -0.340 -0.0953  -0.811 -0.300 -0.520     -0.474  0         -0.160  #> 3 2022-07-01  -0.235  0.00135 -0.762 -0.262 -0.475     -0.430  0.0658    -0.104  #> 4 2022-10-01  -0.223  0.250   -0.791 -0.279 -0.502     -0.456 -0.0225     0      #> 5 2023-01-01  -0.200  0.235   -0.734 -0.260 -0.533     -0.475  0.0907     0.0518 #> 6 2023-04-01  -0.206 -0.0374  -0.610 -0.280 -0.542     -0.486  0.0265     0      #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   pcmp(4, 4) |>   tail() #> # A tibble: 6 × 31 #>   time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 2022-01-01    8.67 -1.45    5.72  6.67   4.21       4.72    20.2       15.6  #> 2 2022-04-01    4.88 -1.36    4.08  5.94   2.47       3.19    10.7       13.6  #> 3 2022-07-01    3.84  0.814   2.10  4.56   2.19       2.69     8.37      10.5  #> 4 2022-10-01    3.97  5.47    1.69  2.78   0.992      1.36     4.87       6.67 #> 5 2023-01-01    3.91  5.51    3.15  1.75   0.885      1.09     7.03       8.99 #> 6 2023-04-01    3.06  0.949   3.36  0.173  0.619      0.549    4.23       6.52 #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   pcmp(1, 4) |>   tail() #> # A tibble: 6 × 31 #>   time       E_NF_HI  ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>   <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 2022-01-01   2.63    0.764 -1.91   4.08  -0.803      0.197   0.888      -4.37 #> 2 2022-04-01   3.02    0.763  3.27   4.76   1.44       2.18   12.4        14.2  #> 3 2022-07-01   8.36    2.85   5.22   3.04   4.66       4.42   12.7        13.7  #> 4 2022-10-01   1.99   18.5    0.317 -0.687 -1.22      -1.25   -5.36        4.28 #> 5 2023-01-01   2.39    0.932  3.85   0     -1.22      -0.869   9.48        4.23 #> 6 2023-04-01  -0.297 -15.6    4.13  -1.60   0.370      0       1.06        4.19 #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl>"},{"path":"https://uhero.github.io/fcutils/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://uhero.github.io/fcutils/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://uhero.github.io/fcutils/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://uhero.github.io/fcutils/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive plot with level and growth rate — plot_1","title":"Interactive plot with level and growth rate — plot_1","text":"Interactive plot level growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive plot with level and growth rate — plot_1","text":"","code":"plot_1(   x,   rng_start = as.character(Sys.Date() - lubridate::years(10)),   rng_end = as.character(Sys.Date() + lubridate::years(2)),   height = 300,   width = 900,   yoy_gr = TRUE,   gr_1 = TRUE )"},{"path":"https://uhero.github.io/fcutils/reference/plot_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive plot with level and growth rate — plot_1","text":"x ts-boxable object plot (e.g. time series history, oldsol, sol) rng_start start zoom range (\"YYYY-MM-DD\") rng_end end zoom range (\"YYYY-MM-DD\") height height single panel (px) width width single panel (px) yoy_gr year--year (default) annualized growth gr_1 show growth first series (default)","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive plot with level and growth rate — plot_1","text":"dygraph plot","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive plot with level and growth rate — plot_1","text":"","code":"monthly_data_example |>   plot_1()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true},\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"VISNS_HI\",\"labels\":[\"month\",\"VISNS_HI%\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"ylabel\":\"% change\",\"y2label\":\"level\",\"series\":{\"VISNS_HI%\":{\"axis\":\"y\",\"plotter\":\"/**\\n * Bar Chart plotter is adapted from http://dygraphs.com/tests/plotters.html\\n */\\nfunction barSeriesPlotter(e) {\\n  var g = e.dygraph;\\n  var ctx = e.drawingContext;\\n  var points = e.points;\\n  var axis = g.attr_(\\\"axis\\\", e.setName);\\n  var y_bottom = g.toDomYCoord(0, axis == \\\"y2\\\" ? 1 : 0);\\n\\n  ctx.fillStyle = e.color;\\n  ctx.strokeStyle = e.color;\\n\\n  // Find the minimum separation between x-values.\\n  // This determines the bar width.\\n  var min_sep = Infinity;\\n  for (var i = 1; i < points.length; i++) {\\n    var sep = points[i].canvasx - points[i - 1].canvasx;\\n    if (sep < min_sep) min_sep = sep;\\n  }\\n  var bar_width = Math.floor(2.0 / 3 * min_sep);\\n\\n  // Do the actual plotting.\\n  for (var i = 0; i < points.length; i++) {\\n    var p = points[i];\\n    var center_x = p.canvasx;\\n\\n    ctx.fillRect(center_x - bar_width / 2, p.canvasy,\\n      bar_width, y_bottom - p.canvasy);\\n\\n    ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\\n      bar_width, y_bottom - p.canvasy);\\n  }\\n}\\n\"},\"VISNS_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"VISNS_HIVAPNS_HI\"},\"VAPNS_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"VISNS_HIVAPNS_HI\"}},\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#90C3DC\",\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[null,null,null,null,null,null,null,null,null,null,null,null,-32.59094283593169,-29.65249603104604,-26.0519917710866,-15.58486042130501,-16.15274291860882,-8.014440433212988,-6.161060802069862,-12.60744985673352,-1.932184125781389,-0.3853887399463685,-4.569557080474118,-4.305404986836003,29.70814977973571,31.14343029087261,26.27718765806779,16.00730371272063,11.65276886893309,-0.6083202511773966,-5.014647596070986,1.331967213114749,-7.204944948812065,-7.619848612279223,0.8171269815329341,1.521281760802706,1.804287836977281,-1.147227533460804,1.502102944121764,3.270374256733133,0.1340482573726431,7.6604146100691,6.767053701015957,12.63902932254803,15.44546211490425,12.85506190823014,10.90938563786676,3.188267176789417,10.11259382819016,11.47001934235976,7.044198895027631,5.927180355630823,11.7995792694588,6.546854942233638,15.25913338997451,0.07181328545780019,4.868373602596465,6.92158760890611,8.184741303712361,7.662598486018846,7.138799469797363,5.674128058302985,5.345622119815663,6.346922462030391,5.781731098186782,2.358003442340806,-2.638950316968891,10.90778614998207,0.9972489683631292,2.474724611438051,-0.9321804917589938,0.1291433491175109,1.484623541887609,-2.93924466338259,2.799650043744539,3.126879134094995,-4.72186287192754,-1.86648730452329,4.209569957601467,-1.455839534131353,2.110997616615595,-0.3386835517596887,-2.495567980362734,5.517340212095156,-0.2786485545106299,0.08458805616646803,0.5787234042553102,-1.661807580174923,1.88391038696536,3.838245373543514,-2.42662016855566,-9.7833223900197,-7.51917305768588,-14.21394799054373,-14.02797202797202,-17.37063696862692,-19.49004540691582,-13.04935767410413,-15.78947368421052,-16.38007708271568,-12.79360319840079,-12.93729372937293,-17.12583767684289,-1.291848617176128,-6.922660897782606,-5.167068549776088,1.561737432894073,0.01643655489809159,7.245119305856829,-1.671850699844468,-1.808681672025725,2.53501152277964,1.776504297994252,0.6823351023502733,9.236298292902067,2.783410138248854,6.585318613209368,10.38866690882672,9.066154092583689,6.737880032867705,9.081715210355989,13.58244365361803,13.07818256242324,9.595435684647313,12.21846846846848,11.70933734939759,4.227669024510616,4.268292682926811,0.617844811920798,-0.03290556103980879,-1.850491995887804,0.6312548113933891,3.986649360281858,2.715404699738899,2.914027149321274,8.865751695851088,8.128449573507289,5.746545331985176,12.12121212121211,11.33470932232541,12.44356149539461,11.8334430546412,8.454286996857707,11.79620563035495,7.06134094151214,9.574648364683958,15.40626099190996,6.665700623098103,3.310131477184841,5.864541832669312,6.53153153153152,1.931098408774901,2.393189849020239,4.679911699779238,3.932119205298013,1.354865197755584,-0.4497001998667427,-0.9743272502319877,-4.89180128009753,-2.078521939953815,3.383740080850428,-1.956947162426614,-3.210887949260033,1.091239769627173,2.08627450980392,1.982285955293128,2.814283817868057,-0.6481231433972501,4.467123975238407,3.482742464469801,2.387437910591239,6.409544950055501,-0.7241129616220143,2.164900967296179,6.85324232081912,1.964017991004496,9.419176398279049,7.182244279018479,5.681084570690764,2.949170970372395,3.651505445227432,3.788107455478418,4.209702660406878,4.237288135593231,5.543398978847547,3.757138563270224,0.02555257442187209,2.955447728275251,0.6459766886673268,2.855305466237956,1.820403176542462,2.64026402640265,3.152039555006181,4.260578740729959,4.685388196425899,3.589743589743599,4.892881824464412,2.563731170336037,3.142163750159677,8.197657812053706,5.274173294265383,4.464174065274462,7.487401007919359,5.363344051446961,4.928100659077295,2.873082287308226,7.516855544398227,6.218304757305004,4.743707998418767,9.65965259144188,11.03405572755418,5.055438225976761,5.60636182902583,6.655494373952608,4.375976780531365,2.978515625,2.226980728051386,3.538503253796099,3.869246164109397,2.330339888598387,2.855705120140906,0.5537669027688263,3.591345081418695,6.721949993717802,6.350401606425704,6.296296296296289,6.438502673796798,9.815078236130859,2.80687054880604,4.255597747806728,3.930635838150298,5.798711397467216,4.8312133072407,5.519979508196715,-53.35917312661498,-99.41134918766188,-98.81991975454331,-98.1311371555274,-97.72909967845659,-97.47409326424871,-97.50067916327086,-90.36674202461693,-77.28340131009763,-75.157496850063,-79.93232994983083,-71.4407088238864,1.523545706371188,9590,6198,4371.751412429378,3792.035398230088,2989.74358974359,2642.391304347826,618.1225554106909,234.0587595212187,218.174133558749,233.7790697674419,163.4934126646834,80.10459299681673,68.87512899896802,23.19784058431249,6.405559065066346,4.43383356070941,14.77178423236514,39.45699564011098,37.72694262890344,18.71335504885994,15.82093517534537,37.92022295767286,21.58064516129032,13.72301477086226,1.136641407968697,3.312282510632825,5.592495844217504,1.534944480731548],[538.8,566.9,534.7,583.9,557.8,554,618.4,558.4,527.9,596.8,641.2,645.7,363.2,398.8,395.4,492.9,467.7,509.6,580.3,488,517.7,594.5,611.9,617.9,471.1,523,499.3,571.8,522.2,506.5,551.2,494.5,480.4,549.2,616.9,627.3,479.6,517,506.8,590.5,522.9,545.3,588.5,557,554.6,619.8,684.2,647.3,528.1,576.3,542.5,625.5,584.6,581,678.3,557.4,581.6,662.7,740.2,696.9,565.8,609,571.5,665.2,618.4,594.7,660.4,618.2,587.4,679.1,733.3,697.8,574.2,591.1,587.5,686,589.2,583.6,688.2,609.2,599.8,676.8,715,736.3,572.6,591.6,590.9,674.6,600.3,606,671.5,549.6,554.7,580.6,614.7,608.4,461,514.4,497.6,564.1,523.5,527.6,556.5,542.5,516.3,550.6,624.3,608.5,494.4,505.8,488.6,578.4,532.8,531.2,607.9,557.6,550.3,607.8,680.9,649.5,539.3,574.5,552.5,633.9,597.9,593.4,633.6,581.4,553.7,607.6,668.3,653.6,560.8,590.1,568.6,690.1,646.5,627.5,710.4,647.3,622.6,679.5,724.8,730.7,600.4,646.6,656.2,736.1,667.9,664.3,756.8,659.8,637.5,711.3,753.3,740.6,597.7,640.3,624.1,720.8,690.5,651.3,732.5,667,650.8,725.4,774.5,735.8,624.4,662.6,639,767,685.5,665.4,782.7,680.1,712.1,777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],[546,603.6,577,616.8,578.3,559.3,636.4,594.1,586.3,672.5,713.7,707.7,413.3,457.9,443.1,539.5,512.6,533.2,609.7,532.8,577.4,662.4,683.6,691.4,525.5,585.9,548.9,630.3,578.6,545.5,605.9,531.7,544.1,631.4,704.5,710.4,553.2,597.4,567.3,668.5,600.9,591.2,666.9,623.3,630.5,719.3,785,743.2,604.4,651.5,614,690.9,646.9,615.9,726,622.8,683.4,789.9,843.1,801.4,642.5,688.6,648.4,739.9,667.1,617.9,704.5,671.8,682.6,783.7,842.4,785.1,631.9,681.7,663.4,738.1,661.6,614.5,740.8,673.2,686.1,773.6,837.3,803.9,647.8,686,661.5,732.8,670.3,634.8,730.8,597.3,629.1,671.3,709.8,683,528.7,592.1,551.4,621.8,585.1,552,619.1,599.2,611.4,649.6,725.7,691.3,565,598,555.9,642.6,587.1,559.4,660.8,584.7,633.2,738.8,789.8,740.2,616.2,664.6,607.8,688.8,647.6,603.9,669.9,602.7,634.6,725.5,781.9,740.1,641.4,669.4,634.4,724.6,689.6,641.4,735.1,656,710.5,791.5,844.1,819.9,675.8,730.4,712.6,787.4,724.1,688.1,804,701.4,736.6,832.9,869.8,832,675.3,717.6,679.5,787.2,735.1,673.1,777.5,689.9,739.1,834.8,897.2,836.2,702.6,756.3,705.8,823.3,741,691.7,825.4,716.5,797.8,890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.series.VISNS_HI%.plotter\",\"attrs.interactionModel\"],\"jsHooks\":[]}quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_TU_HI\", \"ECT_HI\", \"EMN_HI\") |>   plot_1()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true},\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"E_TU_HI\",\"labels\":[\"quarter\",\"E_TU_HI%\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"ylabel\":\"% change\",\"y2label\":\"level\",\"series\":{\"E_TU_HI%\":{\"axis\":\"y\",\"plotter\":\"/**\\n * Bar Chart plotter is adapted from http://dygraphs.com/tests/plotters.html\\n */\\nfunction barSeriesPlotter(e) {\\n  var g = e.dygraph;\\n  var ctx = e.drawingContext;\\n  var points = e.points;\\n  var axis = g.attr_(\\\"axis\\\", e.setName);\\n  var y_bottom = g.toDomYCoord(0, axis == \\\"y2\\\" ? 1 : 0);\\n\\n  ctx.fillStyle = e.color;\\n  ctx.strokeStyle = e.color;\\n\\n  // Find the minimum separation between x-values.\\n  // This determines the bar width.\\n  var min_sep = Infinity;\\n  for (var i = 1; i < points.length; i++) {\\n    var sep = points[i].canvasx - points[i - 1].canvasx;\\n    if (sep < min_sep) min_sep = sep;\\n  }\\n  var bar_width = Math.floor(2.0 / 3 * min_sep);\\n\\n  // Do the actual plotting.\\n  for (var i = 0; i < points.length; i++) {\\n    var p = points[i];\\n    var center_x = p.canvasx;\\n\\n    ctx.fillRect(center_x - bar_width / 2, p.canvasy,\\n      bar_width, y_bottom - p.canvasy);\\n\\n    ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\\n      bar_width, y_bottom - p.canvasy);\\n  }\\n}\\n\"},\"E_TU_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"E_TU_HIECT_HIEMN_HI\"},\"ECT_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"E_TU_HIECT_HIEMN_HI\"},\"EMN_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"E_TU_HIECT_HIEMN_HI\"}},\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#90C3DC\",\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[null,null,null,null,-3.08354248834708,-1.543431442928933,-0.144927536231898,2.159590043923876,3.440621531631516,2.551950419249005,3.047895500725684,2.938015048369769,3.934191702432033,3.803768218983294,2.85211267605634,-7.379046293073444,-10.8052305574673,-9.86301369863013,-8.661417322834652,1.052236001503193,5.246913580246915,1.86170212765957,0.4872563718140821,-0.1859427296392768,-0.513196480938416,5.893323386795979,7.161506900410308,8.867362146050661,9.285187914517312,9.263825290595285,10.4768534632788,7.357973990417532,8.024275118004031,6.769825918762074,6.710775047258966,5.419190309212629,3.08988764044944,-0.3623188405797007,-2.627694124594038,0.1511944360447437,-2.240387526491072,-8.424242424242422,-13.49302607640993,-16.243961352657,-15.26788479405389,-10.32428855062871,-6.168944970206802,-5.155010814708005,-3.618421052631571,-1.992619926199268,0,2.926643861649558,2.882062950322339,1.957831325301207,1.830407172207704,2.14180206794683,2.801326944342053,4.542097488921715,5.759354365370495,5.061460592913947,4.732879168160631,4.662663369833986,3.815469996531395,3.544390915347551,3.320780554604585,2.463719203509962,1.002338790511192,1.827849783981383,2.518223989396962,2.371541501976271,3.010254713860405,1.827676240208875,1.260504201680668,1.866151866151866,3.307642903018637,4.230769230769238,4.500478774337702,3.158559696778251,3.232825613926016,2.521525215252152,1.832620647525962,3.674219228413977,2.137910267991572,1.349730053989195,1.55968806238751,5.552274069698759,7.193396226415083,7.990529742527386,7.678676904902537,-32.20481253497483,-34.32343234323433,-30.44669772540423,-27.61930883159627,21.74989682212134,30.0251256281407,24.70449172576832,20.19704433497536,10.71186440677965,8.373590982286627,4.865718799368079,7.030264817150078,4.225352112676073],[27.89,27.86,27.6,27.32,27.03,27.43,27.56,27.91,27.96,28.13,28.4,28.73,29.06,29.2,29.21,26.61,25.92,26.32,26.68,26.89,27.28,26.81,26.81,26.84,27.14,28.39,28.73,29.22,29.66,31.02,31.74,31.37,32.04,33.12,33.87,33.07,33.03,33,32.98,33.12,32.29,30.22,28.53,27.74,27.36,27.1,26.77,26.31,26.37,26.56,26.77,27.08,27.13,27.08,27.26,27.66,27.89,28.31,28.83,29.06,29.21,29.63,29.93,30.09,30.18,30.36,30.23,30.64,30.94,31.08,31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],[23.26,22.99,23,23.05,22.79,22.86,22.93,23.31,24.26,25,25.64,25.79,25.72,25.2,24.94,24.81,25.59,26.25,26.81,27.29,27.91,28.54,28.74,28.78,28.77,29.69,30.3,31.22,32.36,33.78,34.74,35.37,35.94,36.55,37.6,38.77,39.1,39.7,40.18,40.46,40.29,39.29,38.3,36.77,34.63,32.76,31.34,30.38,30.37,29.79,29.3,29.71,29.37,29.74,29.96,29.89,30.02,30.04,30.39,31.19,31.71,32.17,32.03,32.33,32.55,32.8,33.47,34.08,34.11,35.28,36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],[15.89,15.76,15.8,15.78,15.76,15.93,16.13,16.27,16.26,16.43,16.64,16.76,16.76,16.67,16.57,16.05,15.79,15.35,15.11,15.02,14.88,15.04,15.11,15.48,15.51,15.59,15.47,15.42,15.43,15.35,15.41,15.37,15.37,15.45,15.6,15.6,15.56,15.57,15.41,15.32,15.32,15.39,15.03,14.57,14.23,13.93,13.77,13.61,13.41,13.12,13.1,13.28,13.43,13.51,13.66,13.69,13.62,13.41,13.56,13.66,13.71,13.77,13.9,13.96,13.91,14,14.4,14.41,14.38,14.31,14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.series.E_TU_HI%.plotter\",\"attrs.interactionModel\"],\"jsHooks\":[]}"},{"path":"https://uhero.github.io/fcutils/reference/plot_2ax.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive lineplot with two axes — plot_2ax","title":"Interactive lineplot with two axes — plot_2ax","text":"Interactive lineplot two axes","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_2ax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive lineplot with two axes — plot_2ax","text":"","code":"plot_2ax(   x,   rng_start = as.character(Sys.Date() - lubridate::years(10)),   rng_end = as.character(Sys.Date() + lubridate::years(2)),   height = 300,   width = 900 )"},{"path":"https://uhero.github.io/fcutils/reference/plot_2ax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive lineplot with two axes — plot_2ax","text":"x ts-boxable object plot (e.g. time series history, oldsol, sol) rng_start start zoom range (\"YYYY-MM-DD\") rng_end end zoom range (\"YYYY-MM-DD\") height height single panel (px) width width single panel (px)","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_2ax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive lineplot with two axes — plot_2ax","text":"dygraph plot","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_2ax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive lineplot with two axes — plot_2ax","text":"","code":"monthly_data_example |>   plot_2ax()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true},\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"VISNS_HI\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"ylabel\":\"series 1\",\"y2label\":\"series 2+\",\"series\":{\"VISNS_HI\":{\"axis\":\"y\",\"strokeWidth\":2},\"VAPNS_HI\":{\"axis\":\"y2\",\"strokeWidth\":2}},\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[538.8,566.9,534.7,583.9,557.8,554,618.4,558.4,527.9,596.8,641.2,645.7,363.2,398.8,395.4,492.9,467.7,509.6,580.3,488,517.7,594.5,611.9,617.9,471.1,523,499.3,571.8,522.2,506.5,551.2,494.5,480.4,549.2,616.9,627.3,479.6,517,506.8,590.5,522.9,545.3,588.5,557,554.6,619.8,684.2,647.3,528.1,576.3,542.5,625.5,584.6,581,678.3,557.4,581.6,662.7,740.2,696.9,565.8,609,571.5,665.2,618.4,594.7,660.4,618.2,587.4,679.1,733.3,697.8,574.2,591.1,587.5,686,589.2,583.6,688.2,609.2,599.8,676.8,715,736.3,572.6,591.6,590.9,674.6,600.3,606,671.5,549.6,554.7,580.6,614.7,608.4,461,514.4,497.6,564.1,523.5,527.6,556.5,542.5,516.3,550.6,624.3,608.5,494.4,505.8,488.6,578.4,532.8,531.2,607.9,557.6,550.3,607.8,680.9,649.5,539.3,574.5,552.5,633.9,597.9,593.4,633.6,581.4,553.7,607.6,668.3,653.6,560.8,590.1,568.6,690.1,646.5,627.5,710.4,647.3,622.6,679.5,724.8,730.7,600.4,646.6,656.2,736.1,667.9,664.3,756.8,659.8,637.5,711.3,753.3,740.6,597.7,640.3,624.1,720.8,690.5,651.3,732.5,667,650.8,725.4,774.5,735.8,624.4,662.6,639,767,685.5,665.4,782.7,680.1,712.1,777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],[546,603.6,577,616.8,578.3,559.3,636.4,594.1,586.3,672.5,713.7,707.7,413.3,457.9,443.1,539.5,512.6,533.2,609.7,532.8,577.4,662.4,683.6,691.4,525.5,585.9,548.9,630.3,578.6,545.5,605.9,531.7,544.1,631.4,704.5,710.4,553.2,597.4,567.3,668.5,600.9,591.2,666.9,623.3,630.5,719.3,785,743.2,604.4,651.5,614,690.9,646.9,615.9,726,622.8,683.4,789.9,843.1,801.4,642.5,688.6,648.4,739.9,667.1,617.9,704.5,671.8,682.6,783.7,842.4,785.1,631.9,681.7,663.4,738.1,661.6,614.5,740.8,673.2,686.1,773.6,837.3,803.9,647.8,686,661.5,732.8,670.3,634.8,730.8,597.3,629.1,671.3,709.8,683,528.7,592.1,551.4,621.8,585.1,552,619.1,599.2,611.4,649.6,725.7,691.3,565,598,555.9,642.6,587.1,559.4,660.8,584.7,633.2,738.8,789.8,740.2,616.2,664.6,607.8,688.8,647.6,603.9,669.9,602.7,634.6,725.5,781.9,740.1,641.4,669.4,634.4,724.6,689.6,641.4,735.1,656,710.5,791.5,844.1,819.9,675.8,730.4,712.6,787.4,724.1,688.1,804,701.4,736.6,832.9,869.8,832,675.3,717.6,679.5,787.2,735.1,673.1,777.5,689.9,739.1,834.8,897.2,836.2,702.6,756.3,705.8,823.3,741,691.7,825.4,716.5,797.8,890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_TU_HI\", \"ECT_HI\", \"EMN_HI\") |>   plot_2ax()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true},\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"E_TU_HI\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"ylabel\":\"series 1\",\"y2label\":\"series 2+\",\"series\":{\"E_TU_HI\":{\"axis\":\"y\",\"strokeWidth\":2},\"ECT_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"ECT_HIEMN_HI\"},\"EMN_HI\":{\"axis\":\"y2\",\"strokeWidth\":2,\"group\":\"ECT_HIEMN_HI\"}},\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[27.89,27.86,27.6,27.32,27.03,27.43,27.56,27.91,27.96,28.13,28.4,28.73,29.06,29.2,29.21,26.61,25.92,26.32,26.68,26.89,27.28,26.81,26.81,26.84,27.14,28.39,28.73,29.22,29.66,31.02,31.74,31.37,32.04,33.12,33.87,33.07,33.03,33,32.98,33.12,32.29,30.22,28.53,27.74,27.36,27.1,26.77,26.31,26.37,26.56,26.77,27.08,27.13,27.08,27.26,27.66,27.89,28.31,28.83,29.06,29.21,29.63,29.93,30.09,30.18,30.36,30.23,30.64,30.94,31.08,31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],[23.26,22.99,23,23.05,22.79,22.86,22.93,23.31,24.26,25,25.64,25.79,25.72,25.2,24.94,24.81,25.59,26.25,26.81,27.29,27.91,28.54,28.74,28.78,28.77,29.69,30.3,31.22,32.36,33.78,34.74,35.37,35.94,36.55,37.6,38.77,39.1,39.7,40.18,40.46,40.29,39.29,38.3,36.77,34.63,32.76,31.34,30.38,30.37,29.79,29.3,29.71,29.37,29.74,29.96,29.89,30.02,30.04,30.39,31.19,31.71,32.17,32.03,32.33,32.55,32.8,33.47,34.08,34.11,35.28,36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],[15.89,15.76,15.8,15.78,15.76,15.93,16.13,16.27,16.26,16.43,16.64,16.76,16.76,16.67,16.57,16.05,15.79,15.35,15.11,15.02,14.88,15.04,15.11,15.48,15.51,15.59,15.47,15.42,15.43,15.35,15.41,15.37,15.37,15.45,15.6,15.6,15.56,15.57,15.41,15.32,15.32,15.39,15.03,14.57,14.23,13.93,13.77,13.61,13.41,13.12,13.1,13.28,13.43,13.51,13.66,13.69,13.62,13.41,13.56,13.66,13.71,13.77,13.9,13.96,13.91,14,14.4,14.41,14.38,14.31,14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}"},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-panel plot of levels and growth rates — plot_comp_2","title":"Two-panel plot of levels and growth rates — plot_comp_2","text":"Two-panel plot levels growth rates","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-panel plot of levels and growth rates — plot_comp_2","text":"","code":"plot_comp_2(   x,   rng_start = as.character(Sys.Date() - lubridate::years(10)),   rng_end = as.character(Sys.Date() + lubridate::years(2)),   height = 300,   width = 900,   yoy_gr = TRUE,   gr_bar = FALSE )"},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-panel plot of levels and growth rates — plot_comp_2","text":"x ts-boxable object plot rng_start start zoom range (\"YYYY-MM-DD\") rng_end end zoom range (\"YYYY-MM-DD\") height height single panel (px) width width single panel (px) yoy_gr year--year (default) annualized growth gr_bar show bars line (default) growth series","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-panel plot of levels and growth rates — plot_comp_2","text":"list two dygraph plots (level, growth)","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-panel plot of levels and growth rates — plot_comp_2","text":"","code":"monthly_data_example |>   plot_comp_2()  {\"x\":{\"attrs\":{\"title\":\"Level\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[538.8,566.9,534.7,583.9,557.8,554,618.4,558.4,527.9,596.8,641.2,645.7,363.2,398.8,395.4,492.9,467.7,509.6,580.3,488,517.7,594.5,611.9,617.9,471.1,523,499.3,571.8,522.2,506.5,551.2,494.5,480.4,549.2,616.9,627.3,479.6,517,506.8,590.5,522.9,545.3,588.5,557,554.6,619.8,684.2,647.3,528.1,576.3,542.5,625.5,584.6,581,678.3,557.4,581.6,662.7,740.2,696.9,565.8,609,571.5,665.2,618.4,594.7,660.4,618.2,587.4,679.1,733.3,697.8,574.2,591.1,587.5,686,589.2,583.6,688.2,609.2,599.8,676.8,715,736.3,572.6,591.6,590.9,674.6,600.3,606,671.5,549.6,554.7,580.6,614.7,608.4,461,514.4,497.6,564.1,523.5,527.6,556.5,542.5,516.3,550.6,624.3,608.5,494.4,505.8,488.6,578.4,532.8,531.2,607.9,557.6,550.3,607.8,680.9,649.5,539.3,574.5,552.5,633.9,597.9,593.4,633.6,581.4,553.7,607.6,668.3,653.6,560.8,590.1,568.6,690.1,646.5,627.5,710.4,647.3,622.6,679.5,724.8,730.7,600.4,646.6,656.2,736.1,667.9,664.3,756.8,659.8,637.5,711.3,753.3,740.6,597.7,640.3,624.1,720.8,690.5,651.3,732.5,667,650.8,725.4,774.5,735.8,624.4,662.6,639,767,685.5,665.4,782.7,680.1,712.1,777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],[546,603.6,577,616.8,578.3,559.3,636.4,594.1,586.3,672.5,713.7,707.7,413.3,457.9,443.1,539.5,512.6,533.2,609.7,532.8,577.4,662.4,683.6,691.4,525.5,585.9,548.9,630.3,578.6,545.5,605.9,531.7,544.1,631.4,704.5,710.4,553.2,597.4,567.3,668.5,600.9,591.2,666.9,623.3,630.5,719.3,785,743.2,604.4,651.5,614,690.9,646.9,615.9,726,622.8,683.4,789.9,843.1,801.4,642.5,688.6,648.4,739.9,667.1,617.9,704.5,671.8,682.6,783.7,842.4,785.1,631.9,681.7,663.4,738.1,661.6,614.5,740.8,673.2,686.1,773.6,837.3,803.9,647.8,686,661.5,732.8,670.3,634.8,730.8,597.3,629.1,671.3,709.8,683,528.7,592.1,551.4,621.8,585.1,552,619.1,599.2,611.4,649.6,725.7,691.3,565,598,555.9,642.6,587.1,559.4,660.8,584.7,633.2,738.8,789.8,740.2,616.2,664.6,607.8,688.8,647.6,603.9,669.9,602.7,634.6,725.5,781.9,740.1,641.4,669.4,634.4,724.6,689.6,641.4,735.1,656,710.5,791.5,844.1,819.9,675.8,730.4,712.6,787.4,724.1,688.1,804,701.4,736.6,832.9,869.8,832,675.3,717.6,679.5,787.2,735.1,673.1,777.5,689.9,739.1,834.8,897.2,836.2,702.6,756.3,705.8,823.3,741,691.7,825.4,716.5,797.8,890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Growth\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[null,null,null,null,null,null,null,null,null,null,null,null,-32.59094283593169,-29.65249603104604,-26.0519917710866,-15.58486042130501,-16.15274291860882,-8.014440433212988,-6.161060802069862,-12.60744985673352,-1.932184125781389,-0.3853887399463685,-4.569557080474118,-4.305404986836003,29.70814977973571,31.14343029087261,26.27718765806779,16.00730371272063,11.65276886893309,-0.6083202511773966,-5.014647596070986,1.331967213114749,-7.204944948812065,-7.619848612279223,0.8171269815329341,1.521281760802706,1.804287836977281,-1.147227533460804,1.502102944121764,3.270374256733133,0.1340482573726431,7.6604146100691,6.767053701015957,12.63902932254803,15.44546211490425,12.85506190823014,10.90938563786676,3.188267176789417,10.11259382819016,11.47001934235976,7.044198895027631,5.927180355630823,11.7995792694588,6.546854942233638,15.25913338997451,0.07181328545780019,4.868373602596465,6.92158760890611,8.184741303712361,7.662598486018846,7.138799469797363,5.674128058302985,5.345622119815663,6.346922462030391,5.781731098186782,2.358003442340806,-2.638950316968891,10.90778614998207,0.9972489683631292,2.474724611438051,-0.9321804917589938,0.1291433491175109,1.484623541887609,-2.93924466338259,2.799650043744539,3.126879134094995,-4.72186287192754,-1.86648730452329,4.209569957601467,-1.455839534131353,2.110997616615595,-0.3386835517596887,-2.495567980362734,5.517340212095156,-0.2786485545106299,0.08458805616646803,0.5787234042553102,-1.661807580174923,1.88391038696536,3.838245373543514,-2.42662016855566,-9.7833223900197,-7.51917305768588,-14.21394799054373,-14.02797202797202,-17.37063696862692,-19.49004540691582,-13.04935767410413,-15.78947368421052,-16.38007708271568,-12.79360319840079,-12.93729372937293,-17.12583767684289,-1.291848617176128,-6.922660897782606,-5.167068549776088,1.561737432894073,0.01643655489809159,7.245119305856829,-1.671850699844468,-1.808681672025725,2.53501152277964,1.776504297994252,0.6823351023502733,9.236298292902067,2.783410138248854,6.585318613209368,10.38866690882672,9.066154092583689,6.737880032867705,9.081715210355989,13.58244365361803,13.07818256242324,9.595435684647313,12.21846846846848,11.70933734939759,4.227669024510616,4.268292682926811,0.617844811920798,-0.03290556103980879,-1.850491995887804,0.6312548113933891,3.986649360281858,2.715404699738899,2.914027149321274,8.865751695851088,8.128449573507289,5.746545331985176,12.12121212121211,11.33470932232541,12.44356149539461,11.8334430546412,8.454286996857707,11.79620563035495,7.06134094151214,9.574648364683958,15.40626099190996,6.665700623098103,3.310131477184841,5.864541832669312,6.53153153153152,1.931098408774901,2.393189849020239,4.679911699779238,3.932119205298013,1.354865197755584,-0.4497001998667427,-0.9743272502319877,-4.89180128009753,-2.078521939953815,3.383740080850428,-1.956947162426614,-3.210887949260033,1.091239769627173,2.08627450980392,1.982285955293128,2.814283817868057,-0.6481231433972501,4.467123975238407,3.482742464469801,2.387437910591239,6.409544950055501,-0.7241129616220143,2.164900967296179,6.85324232081912,1.964017991004496,9.419176398279049,7.182244279018479,5.681084570690764,2.949170970372395,3.651505445227432,3.788107455478418,4.209702660406878,4.237288135593231,5.543398978847547,3.757138563270224,0.02555257442187209,2.955447728275251,0.6459766886673268,2.855305466237956,1.820403176542462,2.64026402640265,3.152039555006181,4.260578740729959,4.685388196425899,3.589743589743599,4.892881824464412,2.563731170336037,3.142163750159677,8.197657812053706,5.274173294265383,4.464174065274462,7.487401007919359,5.363344051446961,4.928100659077295,2.873082287308226,7.516855544398227,6.218304757305004,4.743707998418767,9.65965259144188,11.03405572755418,5.055438225976761,5.60636182902583,6.655494373952608,4.375976780531365,2.978515625,2.226980728051386,3.538503253796099,3.869246164109397,2.330339888598387,2.855705120140906,0.5537669027688263,3.591345081418695,6.721949993717802,6.350401606425704,6.296296296296289,6.438502673796798,9.815078236130859,2.80687054880604,4.255597747806728,3.930635838150298,5.798711397467216,4.8312133072407,5.519979508196715,-53.35917312661498,-99.41134918766188,-98.81991975454331,-98.1311371555274,-97.72909967845659,-97.47409326424871,-97.50067916327086,-90.36674202461693,-77.28340131009763,-75.157496850063,-79.93232994983083,-71.4407088238864,1.523545706371188,9590,6198,4371.751412429378,3792.035398230088,2989.74358974359,2642.391304347826,618.1225554106909,234.0587595212187,218.174133558749,233.7790697674419,163.4934126646834,80.10459299681673,68.87512899896802,23.19784058431249,6.405559065066346,4.43383356070941,14.77178423236514,39.45699564011098,37.72694262890344,18.71335504885994,15.82093517534537,37.92022295767286,21.58064516129032,13.72301477086226,1.136641407968697,3.312282510632825,5.592495844217504,1.534944480731548],[null,null,null,null,null,null,null,null,null,null,null,null,-24.30402930402931,-24.13850231941684,-23.20623916811091,-12.53242542153047,-11.36088535362267,-4.66654747005183,-4.19547454431174,-10.31812826123549,-1.517994200921025,-1.50185873605948,-4.217458315818979,-2.303235834393114,27.14735059278974,27.95370168158986,23.87722861656509,16.8303985171455,12.87553648068669,2.306826706676657,-0.623257339675265,-0.2064564564564386,-5.767232421198464,-4.679951690821261,3.057343475716801,2.748047439976853,5.271170313986695,1.962792285372927,3.352158863180899,6.060606060606077,3.854130660214294,8.377635197066912,10.06766793200198,17.22776001504607,15.87943392758684,13.9214444092493,11.42654364797728,4.61711711711712,9.255242227042636,9.055908938734515,8.231976026793596,3.350785340314122,7.655183890830419,4.177943166441134,8.861898335582552,-0.08021819348628112,8.390166534496423,9.815098011956081,7.401273885350323,7.831001076426247,6.303772336201185,5.694551036070616,5.602605863192189,7.092198581560294,3.122584634410264,0.3247280402662867,-2.961432506887052,7.867694283879256,-0.1170617500731552,-0.7849094822129254,-0.08302692444550619,-2.033940603943096,-1.64980544747082,-1.002033110659306,2.313386798272665,-0.2432761183943755,-0.8244640983360862,-0.5502508496520453,5.152590489708997,0.2083953557606488,0.5127453852915353,-1.288758453489858,-0.6054131054131107,2.394599414087373,2.516220921031809,0.6307760011735386,-0.2864033765450635,-0.7180598834846341,1.314993954050769,3.303498779495517,-1.349892008639308,-11.27450980392158,-8.307826847398337,-13.22388831437437,-15.22751701898961,-15.03918397810673,-18.3853041062056,-13.68804664723031,-16.64399092970522,-15.14737991266376,-12.71072654035505,-13.04347826086956,-15.28461959496441,0.3180981081533751,-2.813543156890808,-3.232533889468181,2.240067624683029,1.215226939970715,6.865897484395678,0.996453301807132,0.8161044613710589,3.345127050498564,0.34182191078449,1.340579710144918,6.735583912130494,-2.41989319092123,3.565587176970908,13.73152709359604,8.83285104037479,7.073629393895575,9.061946902654871,11.13712374581941,9.336211548839724,7.189542483660127,10.30488843467894,7.954951734000715,1.377118644067798,3.078501795792721,0.2210991787744643,-1.800216567406598,-1.000253228665482,-0.0135098621994123,4.089581304771173,0.7222389407162133,4.376439618295502,5.197444831591191,6.485484867201974,6.209637357178344,9.732795939692496,8.843537414965974,11.96028994642293,9.097174362508609,7.9549814554291,10.78232671260639,5.363267851574682,9.112638183447874,12.32660781841111,8.66685067623516,5.00290023201857,7.280947926410986,9.372874438851863,6.920731707317063,3.673469387755102,5.2305748578648,3.04466295462622,1.475789730454946,-0.07398638650488731,-1.752464403066811,-4.644962110580975,-0.02540005080009511,1.519127192376746,-2.179915709925884,-3.296019900497515,-1.639577986883378,0.3393972305185899,0.228118621683282,3.150149459645912,0.5048076923076961,4.042647712127945,5.392976588628762,3.870493009565856,4.585873983739819,0.802611889538829,2.763333828554448,6.160771704180057,3.855631250905933,7.942091733189005,6.720172496406329,3.856442264823889,2.188471657498203,2.6473099914603,4.019568954118746,5.114763389062071,5.259322239766795,5.641025641025643,5.392511204279304,1.175187787739285,3.196092114445226,2.306342441714726,3.603097990795834,3.391285683623102,3.370392042129899,5.58790904048807,3.686284479471214,3.989756031810221,2.619432264020305,3.794072560040895,-0.01371742112483698,4.02347024308467,7.790100081146889,3.357020338152417,3.098591549295771,4.33880008303924,5.377561417411969,4.740643466841754,4.192717910996691,5.625405055087485,6.97177555380637,4.935384615384608,10.09740705172177,9.566018188097146,7.553324968632369,8.99715504978662,5.895334174022704,6.167926780740141,2.148689299527295,2.84603811434303,2.353218025650072,3.791876303840969,0.8724902764637887,2.533427163969049,-0.5856697819314749,3.172935490649298,2.858142790480644,4.274061990212075,6.301478614667055,6.221889055472252,8.79259570887676,2.304035109106439,5.138521669157381,3.381414045873732,9.816590245935796,7.275223061084413,7.508147405364762,-49.65376782077393,-98.68435975955541,-97.44472256987902,-95.92979835698281,-94.40719830628088,-93.899845320959,-93.92278360343184,-87.18565493111743,-74.10795974382434,-72.54697286012527,-75.76242269140542,-68.322257199487,-0.5258899676375384,4536.206896551724,2777.551020408163,1925.45871559633,1486.593059936909,1211.88589540412,1070.392156862745,462.9692832764505,215.2826855123675,189.5264431386104,191.2010558732952,148.8406330511594,77.81618544123627,64.13164745258462,26.76595744680852,9.149586683274812,4.046127845710301,14.27881130707902,34.21008544144748,29.06941497423463,15.94284113196975,14.67287488061126,32.6786523644055,17.09806241680225,12.33847913093196,0.05664438654129356,4.017007944500395,5.882352941176472,4.1658704376075]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_TU_HI\", \"ECT_HI\", \"EMN_HI\") |>   plot_comp_2()  {\"x\":{\"attrs\":{\"title\":\"Level\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[27.89,27.86,27.6,27.32,27.03,27.43,27.56,27.91,27.96,28.13,28.4,28.73,29.06,29.2,29.21,26.61,25.92,26.32,26.68,26.89,27.28,26.81,26.81,26.84,27.14,28.39,28.73,29.22,29.66,31.02,31.74,31.37,32.04,33.12,33.87,33.07,33.03,33,32.98,33.12,32.29,30.22,28.53,27.74,27.36,27.1,26.77,26.31,26.37,26.56,26.77,27.08,27.13,27.08,27.26,27.66,27.89,28.31,28.83,29.06,29.21,29.63,29.93,30.09,30.18,30.36,30.23,30.64,30.94,31.08,31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],[23.26,22.99,23,23.05,22.79,22.86,22.93,23.31,24.26,25,25.64,25.79,25.72,25.2,24.94,24.81,25.59,26.25,26.81,27.29,27.91,28.54,28.74,28.78,28.77,29.69,30.3,31.22,32.36,33.78,34.74,35.37,35.94,36.55,37.6,38.77,39.1,39.7,40.18,40.46,40.29,39.29,38.3,36.77,34.63,32.76,31.34,30.38,30.37,29.79,29.3,29.71,29.37,29.74,29.96,29.89,30.02,30.04,30.39,31.19,31.71,32.17,32.03,32.33,32.55,32.8,33.47,34.08,34.11,35.28,36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],[15.89,15.76,15.8,15.78,15.76,15.93,16.13,16.27,16.26,16.43,16.64,16.76,16.76,16.67,16.57,16.05,15.79,15.35,15.11,15.02,14.88,15.04,15.11,15.48,15.51,15.59,15.47,15.42,15.43,15.35,15.41,15.37,15.37,15.45,15.6,15.6,15.56,15.57,15.41,15.32,15.32,15.39,15.03,14.57,14.23,13.93,13.77,13.61,13.41,13.12,13.1,13.28,13.43,13.51,13.66,13.69,13.62,13.41,13.56,13.66,13.71,13.77,13.9,13.96,13.91,14,14.4,14.41,14.38,14.31,14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Growth\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[null,null,null,null,-3.08354248834708,-1.543431442928933,-0.144927536231898,2.159590043923876,3.440621531631516,2.551950419249005,3.047895500725684,2.938015048369769,3.934191702432033,3.803768218983294,2.85211267605634,-7.379046293073444,-10.8052305574673,-9.86301369863013,-8.661417322834652,1.052236001503193,5.246913580246915,1.86170212765957,0.4872563718140821,-0.1859427296392768,-0.513196480938416,5.893323386795979,7.161506900410308,8.867362146050661,9.285187914517312,9.263825290595285,10.4768534632788,7.357973990417532,8.024275118004031,6.769825918762074,6.710775047258966,5.419190309212629,3.08988764044944,-0.3623188405797007,-2.627694124594038,0.1511944360447437,-2.240387526491072,-8.424242424242422,-13.49302607640993,-16.243961352657,-15.26788479405389,-10.32428855062871,-6.168944970206802,-5.155010814708005,-3.618421052631571,-1.992619926199268,0,2.926643861649558,2.882062950322339,1.957831325301207,1.830407172207704,2.14180206794683,2.801326944342053,4.542097488921715,5.759354365370495,5.061460592913947,4.732879168160631,4.662663369833986,3.815469996531395,3.544390915347551,3.320780554604585,2.463719203509962,1.002338790511192,1.827849783981383,2.518223989396962,2.371541501976271,3.010254713860405,1.827676240208875,1.260504201680668,1.866151866151866,3.307642903018637,4.230769230769238,4.500478774337702,3.158559696778251,3.232825613926016,2.521525215252152,1.832620647525962,3.674219228413977,2.137910267991572,1.349730053989195,1.55968806238751,5.552274069698759,7.193396226415083,7.990529742527386,7.678676904902537,-32.20481253497483,-34.32343234323433,-30.44669772540423,-27.61930883159627,21.74989682212134,30.0251256281407,24.70449172576832,20.19704433497536,10.71186440677965,8.373590982286627,4.865718799368079,7.030264817150078,4.225352112676073],[null,null,null,null,-2.020636285468624,-0.5654632448890751,-0.3043478260869592,1.127982646420822,6.450197455024154,9.361329833770782,11.81857828172699,10.63921063921065,6.018136850783162,0.8000000000000007,-2.73010920436817,-3.799922450562232,-0.5054432348367,4.166666666666674,7.497995188452267,9.99596936719065,9.066041422430636,8.723809523809511,7.198806415516601,5.459875412238913,3.081332855607299,4.029432375613173,5.427974947807934,8.478109798471145,12.47827598192561,13.77568204782755,14.65346534653467,13.29276105060857,11.06304079110012,8.20011841326227,8.232584916522745,9.612666101215739,8.792431830829162,8.618331053351591,6.861702127659575,4.359040495228261,3.04347826086957,-1.032745591939555,-4.678944748631164,-9.120118635689566,-14.04815090593199,-16.62000509035379,-18.17232375979112,-17.37829752515638,-12.30147271152181,-9.065934065934067,-6.509253350350985,-2.205398288347593,-3.292723081988802,-0.167841557569659,2.252559726962455,0.6058566139347077,2.213142662580858,1.008742434431742,1.435246995994666,4.349280695884916,5.629580279813462,7.090545938748338,5.396512010529775,3.655017633857005,2.649006622516548,1.958346285359025,4.495785201373703,5.41292916795546,4.792626728110605,7.560975609756104,9.082760681207059,12.79342723004695,15.50864849017883,11.64965986394557,7.723911257189808,-0.05202913631632278,-3.781725888324883,-4.544300583904537,-5.568268497330275,-4.034357105674136,-2.215774202057497,-0.2127659574468033,1.750134625740429,2.956333062110117,1.483679525222548,0.2132196162046851,-0.6880127017729554,-0.5268703898840932,-0.4253056884635731,-3.377659574468095,-2.797761790567554,-2.251059322033899,-0.2669514148424978,2.945224332507568,1.014254385964919,-0.4334868599295438,-1.445396145610278,-1.363636363636356,0.8141112618724522,5.46938775510204,5.513307984790883,0.9487666034155628],[null,null,null,null,-0.8181246066708669,1.07868020304569,2.088607594936698,3.105196451204062,3.172588832487322,3.138731952291285,3.161810291382516,3.011677934849422,3.075030750307506,1.460742544126603,-0.4206730769230838,-4.236276849642007,-5.7875894988067,-7.918416316736665,-8.811104405552205,-6.417445482866047,-5.763141228625701,-2.019543973941373,0,3.062583222370185,4.233870967741926,3.656914893617036,2.382528127068184,-0.3875968992248069,-0.5157962604771082,-1.539448364336116,-0.3878474466709747,-0.3242542153048089,-0.3888528839922301,0.6514657980456029,1.232965606748859,1.496421600520503,1.23617436564738,0.7766990291262266,-1.217948717948714,-1.794871794871788,-1.542416452442164,-1.156069364161849,-2.46593121349773,-4.895561357702349,-7.114882506527409,-9.48667966211827,-8.383233532934131,-6.588881262868918,-5.762473647224176,-5.814788226848533,-4.865649963689178,-2.424687729610586,0.1491424310216205,2.972560975609762,4.274809160305337,3.087349397590367,1.414743112434835,-0.7401924500370027,-0.7320644216691097,-0.2191380569758872,0.6607929515418665,2.684563758389258,2.507374631268444,2.196193265007329,1.458789204959876,1.670297748729133,3.597122302158273,3.22349570200573,3.378864126527681,2.214285714285724,0.0694444444444331,1.110340041637747,0.347705146036148,1.257861635220126,1.110340041637747,-0.3431708991077587,0.1386001386001423,1.449275362318825,1.166781056966371,2.203856749311295,2.491349480968874,-0.7482993197278853,-2.578018995929454,-3.706199460916448,-3.713706954760299,-2.878684030157641,-2.298050139275765,-2.799160251924415,-3.015427769985968,-20.74805928016937,-18.17533856022807,-16.12670986321094,-15.25668835864064,6.856634016028496,7.92682926829269,6.866952789699554,5.716723549488045,4.083333333333328,2.098466505246166,1.686746987951815,3.147699757869238,3.362690152121695]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}"},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Three-panel plot of levels, index, and growth rates — plot_comp_3","title":"Three-panel plot of levels, index, and growth rates — plot_comp_3","text":"Three-panel plot levels, index, growth rates","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Three-panel plot of levels, index, and growth rates — plot_comp_3","text":"","code":"plot_comp_3(   x,   base_date = as.character(Sys.Date() - lubridate::years(10)),   rng_start = as.character(Sys.Date() - lubridate::years(10)),   rng_end = as.character(Sys.Date() + lubridate::years(2)),   height = 300,   width = 900,   yoy_gr = TRUE,   gr_bar = FALSE )"},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Three-panel plot of levels, index, and growth rates — plot_comp_3","text":"x ts-boxable object plot base_date base period indexed series (\"YYYY-MM-DD\") rng_start start zoom range (\"YYYY-MM-DD\") rng_end end zoom range (\"YYYY-MM-DD\") height height single panel (px) width width single panel (px) yoy_gr year--year (default) annualized growth gr_bar show bars line (default) growth series","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Three-panel plot of levels, index, and growth rates — plot_comp_3","text":"list three dygraph plots (level, index, growth)","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_comp_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Three-panel plot of levels, index, and growth rates — plot_comp_3","text":"","code":"monthly_data_example |>   plot_comp_3()  {\"x\":{\"attrs\":{\"title\":\"Level\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[538.8,566.9,534.7,583.9,557.8,554,618.4,558.4,527.9,596.8,641.2,645.7,363.2,398.8,395.4,492.9,467.7,509.6,580.3,488,517.7,594.5,611.9,617.9,471.1,523,499.3,571.8,522.2,506.5,551.2,494.5,480.4,549.2,616.9,627.3,479.6,517,506.8,590.5,522.9,545.3,588.5,557,554.6,619.8,684.2,647.3,528.1,576.3,542.5,625.5,584.6,581,678.3,557.4,581.6,662.7,740.2,696.9,565.8,609,571.5,665.2,618.4,594.7,660.4,618.2,587.4,679.1,733.3,697.8,574.2,591.1,587.5,686,589.2,583.6,688.2,609.2,599.8,676.8,715,736.3,572.6,591.6,590.9,674.6,600.3,606,671.5,549.6,554.7,580.6,614.7,608.4,461,514.4,497.6,564.1,523.5,527.6,556.5,542.5,516.3,550.6,624.3,608.5,494.4,505.8,488.6,578.4,532.8,531.2,607.9,557.6,550.3,607.8,680.9,649.5,539.3,574.5,552.5,633.9,597.9,593.4,633.6,581.4,553.7,607.6,668.3,653.6,560.8,590.1,568.6,690.1,646.5,627.5,710.4,647.3,622.6,679.5,724.8,730.7,600.4,646.6,656.2,736.1,667.9,664.3,756.8,659.8,637.5,711.3,753.3,740.6,597.7,640.3,624.1,720.8,690.5,651.3,732.5,667,650.8,725.4,774.5,735.8,624.4,662.6,639,767,685.5,665.4,782.7,680.1,712.1,777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],[546,603.6,577,616.8,578.3,559.3,636.4,594.1,586.3,672.5,713.7,707.7,413.3,457.9,443.1,539.5,512.6,533.2,609.7,532.8,577.4,662.4,683.6,691.4,525.5,585.9,548.9,630.3,578.6,545.5,605.9,531.7,544.1,631.4,704.5,710.4,553.2,597.4,567.3,668.5,600.9,591.2,666.9,623.3,630.5,719.3,785,743.2,604.4,651.5,614,690.9,646.9,615.9,726,622.8,683.4,789.9,843.1,801.4,642.5,688.6,648.4,739.9,667.1,617.9,704.5,671.8,682.6,783.7,842.4,785.1,631.9,681.7,663.4,738.1,661.6,614.5,740.8,673.2,686.1,773.6,837.3,803.9,647.8,686,661.5,732.8,670.3,634.8,730.8,597.3,629.1,671.3,709.8,683,528.7,592.1,551.4,621.8,585.1,552,619.1,599.2,611.4,649.6,725.7,691.3,565,598,555.9,642.6,587.1,559.4,660.8,584.7,633.2,738.8,789.8,740.2,616.2,664.6,607.8,688.8,647.6,603.9,669.9,602.7,634.6,725.5,781.9,740.1,641.4,669.4,634.4,724.6,689.6,641.4,735.1,656,710.5,791.5,844.1,819.9,675.8,730.4,712.6,787.4,724.1,688.1,804,701.4,736.6,832.9,869.8,832,675.3,717.6,679.5,787.2,735.1,673.1,777.5,689.9,739.1,834.8,897.2,836.2,702.6,756.3,705.8,823.3,741,691.7,825.4,716.5,797.8,890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Index\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[0.6929903536977491,0.7291318327974277,0.6877170418006432,0.7509967845659163,0.7174276527331189,0.712540192926045,0.7953697749196141,0.7181993569131833,0.6789710610932476,0.767588424437299,0.8246945337620579,0.8304823151125402,0.4671382636655949,0.5129260450160772,0.5085530546623794,0.6339549839228296,0.6015434083601287,0.6554340836012862,0.7463665594855304,0.6276527331189711,0.6658520900321544,0.7646302250803858,0.7870096463022508,0.7947266881028938,0.6059163987138264,0.6726688102893891,0.6421864951768489,0.7354340836012861,0.6716398713826367,0.6514469453376206,0.7089389067524117,0.6360128617363344,0.6178778135048231,0.7063665594855306,0.7934405144694533,0.8068167202572347,0.6168488745980708,0.6649517684887459,0.6518327974276528,0.7594855305466238,0.6725401929260449,0.7013504823151124,0.7569131832797428,0.7163987138263666,0.7133118971061093,0.7971704180064308,0.88,0.832540192926045,0.6792282958199357,0.7412218649517684,0.6977491961414791,0.8045016077170418,0.7518971061093248,0.7472668810289389,0.8724115755627009,0.7169131832797427,0.7480385852090032,0.852347266881029,0.9520257234726689,0.8963344051446945,0.727717041800643,0.7832797427652733,0.735048231511254,0.8555627009646303,0.7953697749196141,0.7648874598070741,0.8493890675241157,0.7951125401929261,0.7554983922829581,0.8734405144694534,0.9431511254019292,0.8974919614147909,0.7385209003215435,0.7602572347266882,0.7556270096463023,0.8823151125401929,0.7578135048231511,0.7506109324758843,0.8851446945337621,0.7835369774919615,0.7714469453376205,0.8704823151125402,0.9196141479099679,0.9470096463022507,0.7364630225080386,0.7609003215434084,0.76,0.8676527331189711,0.7720900321543408,0.7794212218649518,0.8636655948553055,0.7068810289389068,0.7134405144694534,0.7467524115755627,0.7906109324758843,0.782508038585209,0.5929260450160772,0.6616077170418007,0.64,0.7255305466237942,0.6733118971061093,0.6785852090032155,0.7157556270096463,0.6977491961414791,0.6640514469453376,0.7081672025723473,0.8029581993569131,0.782636655948553,0.6358842443729903,0.6505466237942122,0.6284244372990354,0.7439228295819935,0.6852733118971061,0.6832154340836013,0.7818649517684887,0.7171704180064309,0.7077813504823151,0.7817363344051447,0.8757556270096463,0.8353697749196142,0.6936334405144694,0.7389067524115756,0.7106109324758842,0.8153054662379421,0.7690032154340836,0.7632154340836013,0.81491961414791,0.7477813504823151,0.7121543408360129,0.7814790996784566,0.8595498392282958,0.8406430868167203,0.7212861736334405,0.7589710610932476,0.7313183279742765,0.887588424437299,0.8315112540192926,0.8070739549839229,0.9136977491961414,0.832540192926045,0.8007717041800644,0.8739549839228296,0.9322186495176848,0.939807073954984,0.7722186495176848,0.8316398713826367,0.8439871382636657,0.9467524115755628,0.8590353697749196,0.8544051446945337,0.9733762057877813,0.8486173633440514,0.819935691318328,0.9148553054662378,0.9688745980707395,0.9525401929260451,0.7687459807073955,0.8235369774919613,0.8027009646302251,0.9270739549839228,0.8881028938906752,0.8376848874598071,0.9421221864951769,0.8578778135048232,0.8370418006430868,0.9329903536977492,0.9961414790996784,0.9463665594855305,0.8030868167202572,0.8522186495176849,0.8218649517684887,0.9864951768488746,0.8816720257234727,0.8558199356913183,1.006688102893891,0.8747266881028939,0.9158842443729904,1,1.052733118971061,0.9742765273311897,0.8324115755627011,0.8845016077170419,0.8564630225080385,1.028295819935691,0.9305466237942123,0.8879742765273312,1.006945337620579,0.9005787781350483,0.9218006430868168,1.02855305466238,1.071897106109325,1,0.8586495176848875,0.9221864951768489,0.8965916398713827,1.065209003215434,0.9760771704180065,0.9107395498392283,1.038585209003215,0.9744051446945338,0.9704180064308682,1.074469453376206,1.152154340836013,1.05363344051447,0.9009646302250803,0.9486816720257235,0.9639871382636656,1.131446945337621,1.022379421221865,0.9987138263665595,1.153183279742765,1.023665594855306,1.024823151125402,1.145980707395498,1.202572347266881,1.085016077170418,0.9210289389067524,0.9822508038585209,1.00128617363344,1.157813504823151,1.051575562700965,1.004244372990354,1.19459807073955,1.092475884244373,1.089903536977492,1.218135048231511,1.28,1.191511254019292,0.9468810289389068,1.024051446945338,1.04064308681672,1.224951768488746,1.102379421221865,1.05967845659164,0.5571704180064309,0.006430868167202572,0.01286173633440514,0.0227652733118971,0.02906752411575563,0.03009646302250804,0.02366559485530546,0.09864951768488746,0.2363987138263666,0.3043086816720257,0.2212218649517685,0.302636655948553,0.5656591639871382,0.6231511254019293,0.810032154340836,1.018006430868167,1.131318327974276,0.929903536977492,0.6490032154340837,0.7084244372990353,0.7897106109324759,0.9682315112540192,0.7383922829581994,0.797427652733119,1.018778135048231,1.052347266881029,0.9979421221864951,1.083215434083601,1.181479099678457,1.067266881028939,0.9050803858520901,0.9756913183279743,0.937491961414791,1.121414790996784,1.018392282958199,0.9695176848874597,1.158585209003215,1.064308681672026,1.030996784565916,1.14379421221865,1.199614147909968],[0.6128633965652711,0.6775171175216074,0.6476596699966326,0.6923335952407678,0.6491188685598832,0.6277921203277584,0.7143338197328544,0.666853743405545,0.6580985520260411,0.7548546413738916,0.8011000112246044,0.794365248624986,0.4639128970703783,0.513974632394208,0.4973622179818162,0.6055674037490179,0.5753732180940623,0.5984959030194187,0.6843641261645528,0.5980469188461106,0.6481086541699405,0.7435177909978673,0.7673139521831855,0.7760691435626894,0.5898529576832416,0.6576495678527332,0.6161185318217532,0.7074868110899091,0.6494556066898642,0.6123021663486362,0.6800987765181278,0.5968122123695141,0.6107307217420587,0.7087215175665058,0.7907733752385229,0.7973958917948142,0.6209451116848131,0.670557862835335,0.6367718037939162,0.7503647996408127,0.6744864743517791,0.6635986081490628,0.7485688629475811,0.6996295880570209,0.7077113031765631,0.8073857896509148,0.8811314401167359,0.8342125940060614,0.6784150858682232,0.7312829722752273,0.6891907060276126,0.7755079133460545,0.7261196542821865,0.691323380850825,0.814906274553822,0.6990683578403861,0.7670894600965316,0.8866314962397576,0.9463463912897071,0.8995397912223594,0.7211808283757998,0.7729262543495342,0.7278033449320911,0.8305084745762712,0.7487933550342351,0.6935683017173645,0.7907733752385229,0.7540689190706027,0.7661914917499159,0.8796722415534853,0.9455606689864182,0.8812436861600629,0.7092827477831406,0.7651812773599731,0.7446402514311371,0.8284880457963857,0.7426198226512516,0.6897519362442474,0.8315186889662139,0.7556403636771805,0.7701201032663599,0.8683353911774611,0.9398361207767426,0.9023459423055338,0.7271298686721293,0.7700078572230329,0.7425075766079245,0.8225390055000561,0.7523852284206981,0.7125378830396228,0.8202940846335166,0.6704456167920081,0.7061398585699854,0.7535076888539679,0.7967224155348523,0.7666404759232237,0.5934448310697049,0.6646088225390056,0.6189246829049276,0.6979458974071163,0.6567515995061175,0.6195981591648895,0.6949152542372882,0.6725782916152206,0.6862723089011112,0.7291502974520149,0.8145695364238411,0.7759568975193624,0.6341901447973959,0.6712313390952969,0.6239757548546414,0.7212930744191268,0.6589965203726569,0.6279043663710854,0.7417218543046358,0.6563026153328095,0.7107419463463913,0.8292737680996745,0.8865192501964305,0.8308452127062522,0.691660118980806,0.7459872039510608,0.6822314513413402,0.7731507464361881,0.7269053765854754,0.6778538556515883,0.7519362442473903,0.6765069031316647,0.712313390952969,0.8143450443371871,0.8776518127735997,0.8307329666629252,0.719946121899203,0.7513750140307555,0.712088898866315,0.8133348299472444,0.7740487147828039,0.719946121899203,0.8251206644965765,0.7363340442249411,0.7975081378381412,0.8884274329329891,0.9474688517229768,0.9203053092378494,0.7585587608036817,0.8198451004602088,0.7998653047480077,0.8838253451565832,0.8127735997306096,0.7723650241328993,0.9024581883488607,0.7872937478953866,0.8268043551464811,0.9348972948703558,0.9763160848580087,0.9338870804804131,0.7579975305870468,0.8054776069143563,0.7627118644067796,0.8836008530699293,0.8251206644965765,0.7555281176338534,0.872712986867213,0.7743854529127848,0.8296105062296555,0.9370299696935682,1.007071500729599,0.938601414300146,0.7886407004153104,0.8489168256818946,0.7922325738017735,0.9241216747109664,0.8317431810528679,0.7764058816926704,0.9264788416208328,0.8042429004377596,0.8954989336625884,1,1.045908631720732,0.959142440228982,0.8095184644741273,0.8830396228532945,0.8327533954428107,0.9727242114715456,0.8786620271635425,0.8182736558536312,0.9373667078235493,0.8299472443596363,0.9161522056347514,1.036030979907958,1.081378381412055,0.99146930070715,0.8547536199348973,0.9155909754181166,0.8659782242675946,0.9982040633067684,0.9119991020316534,0.8181614098103042,0.9750813783814122,0.8946009653159727,0.946907621506342,1.068133348299473,1.12829722752273,1.044786171287462,0.8952744415759345,0.9539791222359412,0.9146930070715007,1.067796610169492,0.9570097654057695,0.9007744976989561,1.068357840386126,0.9621730833988102,1.032102368391514,1.131103378605904,1.197889774385453,1.067235379952857,0.9207542934111572,0.9764283309013357,0.9493770344595353,1.07711303176563,0.9812549107643956,0.8954989336625884,1.102256145470872,0.9896733640139186,1.076215063419014,1.202379616118532,1.272421147154563,1.161073072174206,0.9419687955999552,1.026602312268493,0.9814794028510495,1.182848804579639,1.05264339432035,0.9627343136154451,0.5549444382085531,0.01302054102592884,0.02750028061510832,0.04893927489056011,0.07116399146930071,0.07082725333931979,0.05724548209675609,0.131552362779212,0.2541250420922663,0.3247278033449321,0.255135256482209,0.3049724997193849,0.5520260410820519,0.6036592210124593,0.7913346054551578,0.9912448086204961,1.129082949826019,0.9291727466606802,0.6699966326187001,0.740599393871366,0.8012122572679313,0.9401728589067236,0.7429565607812324,0.7588954989336626,0.9815916488943764,0.9907958244471883,1.003142889213155,1.08193961162869,1.174767089460097,1.061847569873162,0.8992030530923786,0.9558873049724997,0.9289482545740263,1.078123246155573,0.9857447524974745,0.8886519250196432,1.10270512964418,0.9913570546638232,1.043439218767539,1.145583118195084,1.223706364350657]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Growth\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[null,null,null,null,null,null,null,null,null,null,null,null,-32.59094283593169,-29.65249603104604,-26.0519917710866,-15.58486042130501,-16.15274291860882,-8.014440433212988,-6.161060802069862,-12.60744985673352,-1.932184125781389,-0.3853887399463685,-4.569557080474118,-4.305404986836003,29.70814977973571,31.14343029087261,26.27718765806779,16.00730371272063,11.65276886893309,-0.6083202511773966,-5.014647596070986,1.331967213114749,-7.204944948812065,-7.619848612279223,0.8171269815329341,1.521281760802706,1.804287836977281,-1.147227533460804,1.502102944121764,3.270374256733133,0.1340482573726431,7.6604146100691,6.767053701015957,12.63902932254803,15.44546211490425,12.85506190823014,10.90938563786676,3.188267176789417,10.11259382819016,11.47001934235976,7.044198895027631,5.927180355630823,11.7995792694588,6.546854942233638,15.25913338997451,0.07181328545780019,4.868373602596465,6.92158760890611,8.184741303712361,7.662598486018846,7.138799469797363,5.674128058302985,5.345622119815663,6.346922462030391,5.781731098186782,2.358003442340806,-2.638950316968891,10.90778614998207,0.9972489683631292,2.474724611438051,-0.9321804917589938,0.1291433491175109,1.484623541887609,-2.93924466338259,2.799650043744539,3.126879134094995,-4.72186287192754,-1.86648730452329,4.209569957601467,-1.455839534131353,2.110997616615595,-0.3386835517596887,-2.495567980362734,5.517340212095156,-0.2786485545106299,0.08458805616646803,0.5787234042553102,-1.661807580174923,1.88391038696536,3.838245373543514,-2.42662016855566,-9.7833223900197,-7.51917305768588,-14.21394799054373,-14.02797202797202,-17.37063696862692,-19.49004540691582,-13.04935767410413,-15.78947368421052,-16.38007708271568,-12.79360319840079,-12.93729372937293,-17.12583767684289,-1.291848617176128,-6.922660897782606,-5.167068549776088,1.561737432894073,0.01643655489809159,7.245119305856829,-1.671850699844468,-1.808681672025725,2.53501152277964,1.776504297994252,0.6823351023502733,9.236298292902067,2.783410138248854,6.585318613209368,10.38866690882672,9.066154092583689,6.737880032867705,9.081715210355989,13.58244365361803,13.07818256242324,9.595435684647313,12.21846846846848,11.70933734939759,4.227669024510616,4.268292682926811,0.617844811920798,-0.03290556103980879,-1.850491995887804,0.6312548113933891,3.986649360281858,2.715404699738899,2.914027149321274,8.865751695851088,8.128449573507289,5.746545331985176,12.12121212121211,11.33470932232541,12.44356149539461,11.8334430546412,8.454286996857707,11.79620563035495,7.06134094151214,9.574648364683958,15.40626099190996,6.665700623098103,3.310131477184841,5.864541832669312,6.53153153153152,1.931098408774901,2.393189849020239,4.679911699779238,3.932119205298013,1.354865197755584,-0.4497001998667427,-0.9743272502319877,-4.89180128009753,-2.078521939953815,3.383740080850428,-1.956947162426614,-3.210887949260033,1.091239769627173,2.08627450980392,1.982285955293128,2.814283817868057,-0.6481231433972501,4.467123975238407,3.482742464469801,2.387437910591239,6.409544950055501,-0.7241129616220143,2.164900967296179,6.85324232081912,1.964017991004496,9.419176398279049,7.182244279018479,5.681084570690764,2.949170970372395,3.651505445227432,3.788107455478418,4.209702660406878,4.237288135593231,5.543398978847547,3.757138563270224,0.02555257442187209,2.955447728275251,0.6459766886673268,2.855305466237956,1.820403176542462,2.64026402640265,3.152039555006181,4.260578740729959,4.685388196425899,3.589743589743599,4.892881824464412,2.563731170336037,3.142163750159677,8.197657812053706,5.274173294265383,4.464174065274462,7.487401007919359,5.363344051446961,4.928100659077295,2.873082287308226,7.516855544398227,6.218304757305004,4.743707998418767,9.65965259144188,11.03405572755418,5.055438225976761,5.60636182902583,6.655494373952608,4.375976780531365,2.978515625,2.226980728051386,3.538503253796099,3.869246164109397,2.330339888598387,2.855705120140906,0.5537669027688263,3.591345081418695,6.721949993717802,6.350401606425704,6.296296296296289,6.438502673796798,9.815078236130859,2.80687054880604,4.255597747806728,3.930635838150298,5.798711397467216,4.8312133072407,5.519979508196715,-53.35917312661498,-99.41134918766188,-98.81991975454331,-98.1311371555274,-97.72909967845659,-97.47409326424871,-97.50067916327086,-90.36674202461693,-77.28340131009763,-75.157496850063,-79.93232994983083,-71.4407088238864,1.523545706371188,9590,6198,4371.751412429378,3792.035398230088,2989.74358974359,2642.391304347826,618.1225554106909,234.0587595212187,218.174133558749,233.7790697674419,163.4934126646834,80.10459299681673,68.87512899896802,23.19784058431249,6.405559065066346,4.43383356070941,14.77178423236514,39.45699564011098,37.72694262890344,18.71335504885994,15.82093517534537,37.92022295767286,21.58064516129032,13.72301477086226,1.136641407968697,3.312282510632825,5.592495844217504,1.534944480731548],[null,null,null,null,null,null,null,null,null,null,null,null,-24.30402930402931,-24.13850231941684,-23.20623916811091,-12.53242542153047,-11.36088535362267,-4.66654747005183,-4.19547454431174,-10.31812826123549,-1.517994200921025,-1.50185873605948,-4.217458315818979,-2.303235834393114,27.14735059278974,27.95370168158986,23.87722861656509,16.8303985171455,12.87553648068669,2.306826706676657,-0.623257339675265,-0.2064564564564386,-5.767232421198464,-4.679951690821261,3.057343475716801,2.748047439976853,5.271170313986695,1.962792285372927,3.352158863180899,6.060606060606077,3.854130660214294,8.377635197066912,10.06766793200198,17.22776001504607,15.87943392758684,13.9214444092493,11.42654364797728,4.61711711711712,9.255242227042636,9.055908938734515,8.231976026793596,3.350785340314122,7.655183890830419,4.177943166441134,8.861898335582552,-0.08021819348628112,8.390166534496423,9.815098011956081,7.401273885350323,7.831001076426247,6.303772336201185,5.694551036070616,5.602605863192189,7.092198581560294,3.122584634410264,0.3247280402662867,-2.961432506887052,7.867694283879256,-0.1170617500731552,-0.7849094822129254,-0.08302692444550619,-2.033940603943096,-1.64980544747082,-1.002033110659306,2.313386798272665,-0.2432761183943755,-0.8244640983360862,-0.5502508496520453,5.152590489708997,0.2083953557606488,0.5127453852915353,-1.288758453489858,-0.6054131054131107,2.394599414087373,2.516220921031809,0.6307760011735386,-0.2864033765450635,-0.7180598834846341,1.314993954050769,3.303498779495517,-1.349892008639308,-11.27450980392158,-8.307826847398337,-13.22388831437437,-15.22751701898961,-15.03918397810673,-18.3853041062056,-13.68804664723031,-16.64399092970522,-15.14737991266376,-12.71072654035505,-13.04347826086956,-15.28461959496441,0.3180981081533751,-2.813543156890808,-3.232533889468181,2.240067624683029,1.215226939970715,6.865897484395678,0.996453301807132,0.8161044613710589,3.345127050498564,0.34182191078449,1.340579710144918,6.735583912130494,-2.41989319092123,3.565587176970908,13.73152709359604,8.83285104037479,7.073629393895575,9.061946902654871,11.13712374581941,9.336211548839724,7.189542483660127,10.30488843467894,7.954951734000715,1.377118644067798,3.078501795792721,0.2210991787744643,-1.800216567406598,-1.000253228665482,-0.0135098621994123,4.089581304771173,0.7222389407162133,4.376439618295502,5.197444831591191,6.485484867201974,6.209637357178344,9.732795939692496,8.843537414965974,11.96028994642293,9.097174362508609,7.9549814554291,10.78232671260639,5.363267851574682,9.112638183447874,12.32660781841111,8.66685067623516,5.00290023201857,7.280947926410986,9.372874438851863,6.920731707317063,3.673469387755102,5.2305748578648,3.04466295462622,1.475789730454946,-0.07398638650488731,-1.752464403066811,-4.644962110580975,-0.02540005080009511,1.519127192376746,-2.179915709925884,-3.296019900497515,-1.639577986883378,0.3393972305185899,0.228118621683282,3.150149459645912,0.5048076923076961,4.042647712127945,5.392976588628762,3.870493009565856,4.585873983739819,0.802611889538829,2.763333828554448,6.160771704180057,3.855631250905933,7.942091733189005,6.720172496406329,3.856442264823889,2.188471657498203,2.6473099914603,4.019568954118746,5.114763389062071,5.259322239766795,5.641025641025643,5.392511204279304,1.175187787739285,3.196092114445226,2.306342441714726,3.603097990795834,3.391285683623102,3.370392042129899,5.58790904048807,3.686284479471214,3.989756031810221,2.619432264020305,3.794072560040895,-0.01371742112483698,4.02347024308467,7.790100081146889,3.357020338152417,3.098591549295771,4.33880008303924,5.377561417411969,4.740643466841754,4.192717910996691,5.625405055087485,6.97177555380637,4.935384615384608,10.09740705172177,9.566018188097146,7.553324968632369,8.99715504978662,5.895334174022704,6.167926780740141,2.148689299527295,2.84603811434303,2.353218025650072,3.791876303840969,0.8724902764637887,2.533427163969049,-0.5856697819314749,3.172935490649298,2.858142790480644,4.274061990212075,6.301478614667055,6.221889055472252,8.79259570887676,2.304035109106439,5.138521669157381,3.381414045873732,9.816590245935796,7.275223061084413,7.508147405364762,-49.65376782077393,-98.68435975955541,-97.44472256987902,-95.92979835698281,-94.40719830628088,-93.899845320959,-93.92278360343184,-87.18565493111743,-74.10795974382434,-72.54697286012527,-75.76242269140542,-68.322257199487,-0.5258899676375384,4536.206896551724,2777.551020408163,1925.45871559633,1486.593059936909,1211.88589540412,1070.392156862745,462.9692832764505,215.2826855123675,189.5264431386104,191.2010558732952,148.8406330511594,77.81618544123627,64.13164745258462,26.76595744680852,9.149586683274812,4.046127845710301,14.27881130707902,34.21008544144748,29.06941497423463,15.94284113196975,14.67287488061126,32.6786523644055,17.09806241680225,12.33847913093196,0.05664438654129356,4.017007944500395,5.882352941176472,4.1658704376075]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_TU_HI\", \"ECT_HI\", \"EMN_HI\") |>   plot_comp_3()  {\"x\":{\"attrs\":{\"title\":\"Level\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[27.89,27.86,27.6,27.32,27.03,27.43,27.56,27.91,27.96,28.13,28.4,28.73,29.06,29.2,29.21,26.61,25.92,26.32,26.68,26.89,27.28,26.81,26.81,26.84,27.14,28.39,28.73,29.22,29.66,31.02,31.74,31.37,32.04,33.12,33.87,33.07,33.03,33,32.98,33.12,32.29,30.22,28.53,27.74,27.36,27.1,26.77,26.31,26.37,26.56,26.77,27.08,27.13,27.08,27.26,27.66,27.89,28.31,28.83,29.06,29.21,29.63,29.93,30.09,30.18,30.36,30.23,30.64,30.94,31.08,31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],[23.26,22.99,23,23.05,22.79,22.86,22.93,23.31,24.26,25,25.64,25.79,25.72,25.2,24.94,24.81,25.59,26.25,26.81,27.29,27.91,28.54,28.74,28.78,28.77,29.69,30.3,31.22,32.36,33.78,34.74,35.37,35.94,36.55,37.6,38.77,39.1,39.7,40.18,40.46,40.29,39.29,38.3,36.77,34.63,32.76,31.34,30.38,30.37,29.79,29.3,29.71,29.37,29.74,29.96,29.89,30.02,30.04,30.39,31.19,31.71,32.17,32.03,32.33,32.55,32.8,33.47,34.08,34.11,35.28,36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],[15.89,15.76,15.8,15.78,15.76,15.93,16.13,16.27,16.26,16.43,16.64,16.76,16.76,16.67,16.57,16.05,15.79,15.35,15.11,15.02,14.88,15.04,15.11,15.48,15.51,15.59,15.47,15.42,15.43,15.35,15.41,15.37,15.37,15.45,15.6,15.6,15.56,15.57,15.41,15.32,15.32,15.39,15.03,14.57,14.23,13.93,13.77,13.61,13.41,13.12,13.1,13.28,13.43,13.51,13.66,13.69,13.62,13.41,13.56,13.66,13.71,13.77,13.9,13.96,13.91,14,14.4,14.41,14.38,14.31,14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Index\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[0.8956326268464997,0.8946692357096981,0.8863198458574182,0.8773281952472703,0.8680154142581888,0.8808606294155427,0.8850353243416826,0.8962748876043674,0.8978805394990366,0.903339755940912,0.9120102761721258,0.9226075786769429,0.9332048811817597,0.9377007064868336,0.9380218368657676,0.8545279383429673,0.8323699421965318,0.8452151573538856,0.8567758509955041,0.863519588953115,0.876043673731535,0.8609505459216441,0.8609505459216441,0.8619139370584457,0.8715478484264612,0.911689145793192,0.9226075786769429,0.9383429672447013,0.9524727039177906,0.9961464354527938,1.019267822736031,1.007385998715479,1.028901734104046,1.063583815028902,1.08766859344894,1.061978163134232,1.060693641618497,1.059730250481695,1.059087989723828,1.063583815028902,1.036929993577392,0.9704560051380861,0.9161849710982659,0.8908156711624919,0.8786127167630058,0.8702633269107258,0.8596660244059088,0.8448940269749518,0.846820809248555,0.8529222864482979,0.8596660244059088,0.8696210661528579,0.8712267180475273,0.8696210661528579,0.8754014129736674,0.8882466281310212,0.8956326268464997,0.9091201027617212,0.9258188824662812,0.9332048811817597,0.9380218368657676,0.951509312780989,0.9611432241490044,0.9662813102119461,0.9691714836223506,0.9749518304431599,0.9707771355170199,0.9839434810533076,0.993577392421323,0.9980732177263969,1,1.001926782273603,1.006101477199743,1.01669877970456,1.033076429030186,1.044315992292871,1.051380860629415,1.048811817597945,1.066473988439306,1.070648683365446,1.070648683365446,1.087347463070006,1.08927424534361,1.085099550417469,1.087347463070006,1.14771997430957,1.167630057803468,1.171804752729608,1.170841361592807,0.7780989081567117,0.766859344894027,0.815028901734104,0.8474630700064226,0.9473346178548491,0.9971098265895953,1.016377649325626,1.018625561978163,1.048811817597945,1.080603725112396,1.065831727681439,1.090237636480411,1.093127809890816],[0.6370857299370036,0.6296904957545878,0.6299643933168995,0.631333881128458,0.6242125445083538,0.6261298274445357,0.6280471103807176,0.6384552177485621,0.6644754861681732,0.6847439057792386,0.7022733497671871,0.7063818132018626,0.7044645302656807,0.6902218570254725,0.6831005204053685,0.6795398520953163,0.7009038619556286,0.7189811010682006,0.7343193645576555,0.7474664475486168,0.764448096411942,0.7817036428375788,0.7871815940838126,0.7882771843330595,0.7880032867707478,0.8132018625034237,0.8299096138044372,0.8551081895371131,0.8863325116406464,0.9252259654889072,0.95152013147083,0.9687756778964667,0.9843878389482333,1.001095590249247,1.029854834291975,1.061900849082443,1.070939468638729,1.087373322377431,1.100520405368392,1.10818953711312,1.103533278553821,1.076143522322651,1.049027663653793,1.007121336620104,0.9485072582854014,0.8972884141331142,0.8583949602848535,0.8321007943029307,0.831826896740619,0.8159408381265407,0.8025198575732677,0.8137496576280472,0.8044371405094496,0.8145713503149822,0.8205970966858396,0.8186798137496577,0.8222404820597097,0.8227882771843331,0.8323746918652425,0.8542864968501781,0.8685291700903862,0.8811284579567242,0.8772938920843605,0.8855108189537113,0.8915365653245686,0.898384004382361,0.9167351410572446,0.9334428923582581,0.9342645850451932,0.9663105998356616,1,1.052862229526157,1.07915639550808,1.078882497945768,1.077239112571898,1.052314434401534,1.038345658723637,1.029854834291975,1.017255546425637,1.009860312243221,1.015338263489455,1.027663653793481,1.035058887975897,1.039715146535196,1.030402629416598,1.029854834291975,1.027937551355793,1.034237195288962,1.026020268419611,0.9950698438783895,0.9991783073130649,1.010955902492468,1.023281292796494,1.024376883045741,1.009312517118598,1.006573541495481,1.008490824431663,1.010408107367845,1.017529443987949,1.061626951520132,1.064092029580937,1.019994522048754],[1.102706453851492,1.093684941013185,1.09646079111728,1.095072866065232,1.093684941013185,1.105482303955586,1.119361554476058,1.129077029840388,1.128383067314365,1.140180430256766,1.154753643303262,1.163081193615545,1.163081193615545,1.156835530881333,1.149895905621096,1.11380985426787,1.095766828591256,1.065232477446218,1.048577376821652,1.042331714087439,1.032616238723109,1.043719639139486,1.048577376821652,1.074253990284525,1.076335877862595,1.081887578070784,1.073560027758501,1.070090215128383,1.070784177654407,1.065232477446218,1.069396252602359,1.066620402498265,1.066620402498265,1.072172102706454,1.082581540596808,1.082581540596808,1.079805690492713,1.080499653018737,1.069396252602359,1.063150589868147,1.063150589868147,1.068008327550312,1.043025676613463,1.011103400416377,0.9875086745315753,0.9666897987508675,0.9555863983344899,0.9444829979181124,0.9306037473976405,0.9104788341429563,0.9090909090909091,0.9215822345593337,0.9319916724496877,0.9375433726578765,0.9479528105482304,0.9500346981263011,0.9451769604441359,0.9306037473976405,0.9410131852879945,0.9479528105482304,0.9514226231783485,0.9555863983344899,0.9646079111727967,0.9687716863289383,0.9653018736988203,0.9715475364330326,0.9993060374739764,1,0.9979181124219293,0.9930603747397641,1,1.011103400416377,1.001387925052047,1.005551700208189,1.011103400416377,1.007633587786259,1.002775850104094,1.020124913254684,1.022900763358779,1.029840388619015,1.027758501040944,1.012491325468425,0.996530187369882,0.9916724496877168,0.989590562109646,0.9833448993754337,0.9736294240111033,0.9639139486467732,0.9597501734906315,0.7793199167244969,0.7966689798750868,0.8084663428174879,0.8133240804996531,0.8327550312283136,0.8598195697432339,0.8639833448993753,0.8598195697432339,0.8667591950034699,0.8778625954198473,0.878556557945871,0.886884108258154,0.8959056210964608]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[],\"jsHooks\":[]} {\"x\":{\"attrs\":{\"title\":\"Growth\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\"],\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"legend\":\"auto\",\"labelsDivWidth\":810,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"hideOverlayOnMouseOut\":true,\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"black\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false,\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\"},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[null,null,null,null,-3.08354248834708,-1.543431442928933,-0.144927536231898,2.159590043923876,3.440621531631516,2.551950419249005,3.047895500725684,2.938015048369769,3.934191702432033,3.803768218983294,2.85211267605634,-7.379046293073444,-10.8052305574673,-9.86301369863013,-8.661417322834652,1.052236001503193,5.246913580246915,1.86170212765957,0.4872563718140821,-0.1859427296392768,-0.513196480938416,5.893323386795979,7.161506900410308,8.867362146050661,9.285187914517312,9.263825290595285,10.4768534632788,7.357973990417532,8.024275118004031,6.769825918762074,6.710775047258966,5.419190309212629,3.08988764044944,-0.3623188405797007,-2.627694124594038,0.1511944360447437,-2.240387526491072,-8.424242424242422,-13.49302607640993,-16.243961352657,-15.26788479405389,-10.32428855062871,-6.168944970206802,-5.155010814708005,-3.618421052631571,-1.992619926199268,0,2.926643861649558,2.882062950322339,1.957831325301207,1.830407172207704,2.14180206794683,2.801326944342053,4.542097488921715,5.759354365370495,5.061460592913947,4.732879168160631,4.662663369833986,3.815469996531395,3.544390915347551,3.320780554604585,2.463719203509962,1.002338790511192,1.827849783981383,2.518223989396962,2.371541501976271,3.010254713860405,1.827676240208875,1.260504201680668,1.866151866151866,3.307642903018637,4.230769230769238,4.500478774337702,3.158559696778251,3.232825613926016,2.521525215252152,1.832620647525962,3.674219228413977,2.137910267991572,1.349730053989195,1.55968806238751,5.552274069698759,7.193396226415083,7.990529742527386,7.678676904902537,-32.20481253497483,-34.32343234323433,-30.44669772540423,-27.61930883159627,21.74989682212134,30.0251256281407,24.70449172576832,20.19704433497536,10.71186440677965,8.373590982286627,4.865718799368079,7.030264817150078,4.225352112676073],[null,null,null,null,-2.020636285468624,-0.5654632448890751,-0.3043478260869592,1.127982646420822,6.450197455024154,9.361329833770782,11.81857828172699,10.63921063921065,6.018136850783162,0.8000000000000007,-2.73010920436817,-3.799922450562232,-0.5054432348367,4.166666666666674,7.497995188452267,9.99596936719065,9.066041422430636,8.723809523809511,7.198806415516601,5.459875412238913,3.081332855607299,4.029432375613173,5.427974947807934,8.478109798471145,12.47827598192561,13.77568204782755,14.65346534653467,13.29276105060857,11.06304079110012,8.20011841326227,8.232584916522745,9.612666101215739,8.792431830829162,8.618331053351591,6.861702127659575,4.359040495228261,3.04347826086957,-1.032745591939555,-4.678944748631164,-9.120118635689566,-14.04815090593199,-16.62000509035379,-18.17232375979112,-17.37829752515638,-12.30147271152181,-9.065934065934067,-6.509253350350985,-2.205398288347593,-3.292723081988802,-0.167841557569659,2.252559726962455,0.6058566139347077,2.213142662580858,1.008742434431742,1.435246995994666,4.349280695884916,5.629580279813462,7.090545938748338,5.396512010529775,3.655017633857005,2.649006622516548,1.958346285359025,4.495785201373703,5.41292916795546,4.792626728110605,7.560975609756104,9.082760681207059,12.79342723004695,15.50864849017883,11.64965986394557,7.723911257189808,-0.05202913631632278,-3.781725888324883,-4.544300583904537,-5.568268497330275,-4.034357105674136,-2.215774202057497,-0.2127659574468033,1.750134625740429,2.956333062110117,1.483679525222548,0.2132196162046851,-0.6880127017729554,-0.5268703898840932,-0.4253056884635731,-3.377659574468095,-2.797761790567554,-2.251059322033899,-0.2669514148424978,2.945224332507568,1.014254385964919,-0.4334868599295438,-1.445396145610278,-1.363636363636356,0.8141112618724522,5.46938775510204,5.513307984790883,0.9487666034155628],[null,null,null,null,-0.8181246066708669,1.07868020304569,2.088607594936698,3.105196451204062,3.172588832487322,3.138731952291285,3.161810291382516,3.011677934849422,3.075030750307506,1.460742544126603,-0.4206730769230838,-4.236276849642007,-5.7875894988067,-7.918416316736665,-8.811104405552205,-6.417445482866047,-5.763141228625701,-2.019543973941373,0,3.062583222370185,4.233870967741926,3.656914893617036,2.382528127068184,-0.3875968992248069,-0.5157962604771082,-1.539448364336116,-0.3878474466709747,-0.3242542153048089,-0.3888528839922301,0.6514657980456029,1.232965606748859,1.496421600520503,1.23617436564738,0.7766990291262266,-1.217948717948714,-1.794871794871788,-1.542416452442164,-1.156069364161849,-2.46593121349773,-4.895561357702349,-7.114882506527409,-9.48667966211827,-8.383233532934131,-6.588881262868918,-5.762473647224176,-5.814788226848533,-4.865649963689178,-2.424687729610586,0.1491424310216205,2.972560975609762,4.274809160305337,3.087349397590367,1.414743112434835,-0.7401924500370027,-0.7320644216691097,-0.2191380569758872,0.6607929515418665,2.684563758389258,2.507374631268444,2.196193265007329,1.458789204959876,1.670297748729133,3.597122302158273,3.22349570200573,3.378864126527681,2.214285714285724,0.0694444444444331,1.110340041637747,0.347705146036148,1.257861635220126,1.110340041637747,-0.3431708991077587,0.1386001386001423,1.449275362318825,1.166781056966371,2.203856749311295,2.491349480968874,-0.7482993197278853,-2.578018995929454,-3.706199460916448,-3.713706954760299,-2.878684030157641,-2.298050139275765,-2.799160251924415,-3.015427769985968,-20.74805928016937,-18.17533856022807,-16.12670986321094,-15.25668835864064,6.856634016028496,7.92682926829269,6.866952789699554,5.716723549488045,4.083333333333328,2.098466505246166,1.686746987951815,3.147699757869238,3.362690152121695]],\"fixedtz\":false,\"tzone\":\"UTC\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}"},{"path":"https://uhero.github.io/fcutils/reference/plot_fc.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive plot with level and growth rate for forecast series — plot_fc","title":"Interactive plot with level and growth rate for forecast series — plot_fc","text":"Interactive plot level growth rate forecast series","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_fc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive plot with level and growth rate for forecast series — plot_fc","text":"","code":"plot_fc(   x,   rng_start = as.character(Sys.Date() - lubridate::years(10)),   rng_end = as.character(Sys.Date() + lubridate::years(2)),   add_table = TRUE,   table_start = rng_start,   table_end = rng_end,   height = 300,   width = 900,   yoy_gr = TRUE )"},{"path":"https://uhero.github.io/fcutils/reference/plot_fc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive plot with level and growth rate for forecast series — plot_fc","text":"x ts-boxable object plot (min 1, max 3 time series) (e.g. current fcst, old fcst, history) rng_start start zoom range (\"YYYY-MM-DD\") rng_end end zoom range (\"YYYY-MM-DD\") add_table data table appended plot? (default = TRUE) table_start start table range (\"YYYY-MM-DD\") (data = NULL, default = rng_start) table_end end table range (\"YYYY-MM-DD\") (data = NULL, default = rng_end) height height single panel (px) width width single panel (px) yoy_gr year--year (default) annualized growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_fc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive plot with level and growth rate for forecast series — plot_fc","text":"dygraph plot","code":""},{"path":"https://uhero.github.io/fcutils/reference/plot_fc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive plot with level and growth rate for forecast series — plot_fc","text":"","code":"monthly_data_example |>   plot_fc()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"axisLabelFormatter\":\"function(d) {\\n      d = d || new Date();\\n      var n = [1,2,3,4];\\n      var qr = \\\"Q\\\" + n[Math.floor(d.getMonth() / 3)];\\n//      var twoDigitsYear = parseInt(d.getFullYear().toString().substr(2,2), 10);\\n      var Year = parseInt(d.getFullYear().toString(), 10);\\n//     return [twoDigits+qr];\\n      return [Year+qr];\\n}\"},\"y\":[],\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"VISNS_HI\",\"labels\":[\"month\",\"VISNS_HI\",\"VAPNS_HI\",\"VISNS_HI%\"],\"retainDateWindow\":false,\"ylabel\":\"level\",\"y2label\":\"% Chg\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#1D667F\"],\"series\":{\"VISNS_HI\":{\"axis\":\"y\",\"strokeWidth\":2},\"VAPNS_HI\":{\"axis\":\"y\",\"strokeWidth\":2,\"strokePattern\":[7,3]},\"VISNS_HI%\":{\"axis\":\"y2\",\"stepPlot\":true,\"fillGraph\":true}},\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\",\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true},\"scale\":\"monthly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2000-09-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2000-11-01T00:00:00.000Z\",\"2000-12-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-02-01T00:00:00.000Z\",\"2001-03-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-05-01T00:00:00.000Z\",\"2001-06-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-08-01T00:00:00.000Z\",\"2001-09-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2001-11-01T00:00:00.000Z\",\"2001-12-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-02-01T00:00:00.000Z\",\"2002-03-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-05-01T00:00:00.000Z\",\"2002-06-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-08-01T00:00:00.000Z\",\"2002-09-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2002-11-01T00:00:00.000Z\",\"2002-12-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-02-01T00:00:00.000Z\",\"2003-03-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-05-01T00:00:00.000Z\",\"2003-06-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-08-01T00:00:00.000Z\",\"2003-09-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2003-11-01T00:00:00.000Z\",\"2003-12-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-02-01T00:00:00.000Z\",\"2004-03-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-05-01T00:00:00.000Z\",\"2004-06-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-08-01T00:00:00.000Z\",\"2004-09-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2004-11-01T00:00:00.000Z\",\"2004-12-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-02-01T00:00:00.000Z\",\"2005-03-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-05-01T00:00:00.000Z\",\"2005-06-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-08-01T00:00:00.000Z\",\"2005-09-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2005-11-01T00:00:00.000Z\",\"2005-12-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-02-01T00:00:00.000Z\",\"2006-03-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-05-01T00:00:00.000Z\",\"2006-06-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-08-01T00:00:00.000Z\",\"2006-09-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2006-11-01T00:00:00.000Z\",\"2006-12-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-02-01T00:00:00.000Z\",\"2007-03-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-05-01T00:00:00.000Z\",\"2007-06-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-08-01T00:00:00.000Z\",\"2007-09-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2007-11-01T00:00:00.000Z\",\"2007-12-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-02-01T00:00:00.000Z\",\"2008-03-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-05-01T00:00:00.000Z\",\"2008-06-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-08-01T00:00:00.000Z\",\"2008-09-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2008-11-01T00:00:00.000Z\",\"2008-12-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-02-01T00:00:00.000Z\",\"2009-03-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-05-01T00:00:00.000Z\",\"2009-06-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-08-01T00:00:00.000Z\",\"2009-09-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2009-11-01T00:00:00.000Z\",\"2009-12-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-02-01T00:00:00.000Z\",\"2010-03-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-05-01T00:00:00.000Z\",\"2010-06-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-08-01T00:00:00.000Z\",\"2010-09-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2010-11-01T00:00:00.000Z\",\"2010-12-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-02-01T00:00:00.000Z\",\"2011-03-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-05-01T00:00:00.000Z\",\"2011-06-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-08-01T00:00:00.000Z\",\"2011-09-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2011-11-01T00:00:00.000Z\",\"2011-12-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-02-01T00:00:00.000Z\",\"2012-03-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-05-01T00:00:00.000Z\",\"2012-06-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-08-01T00:00:00.000Z\",\"2012-09-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2012-11-01T00:00:00.000Z\",\"2012-12-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-02-01T00:00:00.000Z\",\"2013-03-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-05-01T00:00:00.000Z\",\"2013-06-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-08-01T00:00:00.000Z\",\"2013-09-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2013-11-01T00:00:00.000Z\",\"2013-12-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-02-01T00:00:00.000Z\",\"2014-03-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-05-01T00:00:00.000Z\",\"2014-06-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-08-01T00:00:00.000Z\",\"2014-09-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2014-11-01T00:00:00.000Z\",\"2014-12-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-02-01T00:00:00.000Z\",\"2015-03-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-05-01T00:00:00.000Z\",\"2015-06-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-08-01T00:00:00.000Z\",\"2015-09-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2015-11-01T00:00:00.000Z\",\"2015-12-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-02-01T00:00:00.000Z\",\"2016-03-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-05-01T00:00:00.000Z\",\"2016-06-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-08-01T00:00:00.000Z\",\"2016-09-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2016-11-01T00:00:00.000Z\",\"2016-12-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-02-01T00:00:00.000Z\",\"2017-03-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-05-01T00:00:00.000Z\",\"2017-06-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-08-01T00:00:00.000Z\",\"2017-09-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2017-11-01T00:00:00.000Z\",\"2017-12-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-02-01T00:00:00.000Z\",\"2018-03-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-05-01T00:00:00.000Z\",\"2018-06-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-08-01T00:00:00.000Z\",\"2018-09-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2018-11-01T00:00:00.000Z\",\"2018-12-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-02-01T00:00:00.000Z\",\"2019-03-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-05-01T00:00:00.000Z\",\"2019-06-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-08-01T00:00:00.000Z\",\"2019-09-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2019-11-01T00:00:00.000Z\",\"2019-12-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-02-01T00:00:00.000Z\",\"2020-03-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-08-01T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-11-01T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-05-01T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-08-01T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-05-01T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\",\"2023-05-01T00:00:00.000Z\",\"2023-06-01T00:00:00.000Z\",\"2023-07-01T00:00:00.000Z\"],[538.8,566.9,534.7,583.9,557.8,554,618.4,558.4,527.9,596.8,641.2,645.7,363.2,398.8,395.4,492.9,467.7,509.6,580.3,488,517.7,594.5,611.9,617.9,471.1,523,499.3,571.8,522.2,506.5,551.2,494.5,480.4,549.2,616.9,627.3,479.6,517,506.8,590.5,522.9,545.3,588.5,557,554.6,619.8,684.2,647.3,528.1,576.3,542.5,625.5,584.6,581,678.3,557.4,581.6,662.7,740.2,696.9,565.8,609,571.5,665.2,618.4,594.7,660.4,618.2,587.4,679.1,733.3,697.8,574.2,591.1,587.5,686,589.2,583.6,688.2,609.2,599.8,676.8,715,736.3,572.6,591.6,590.9,674.6,600.3,606,671.5,549.6,554.7,580.6,614.7,608.4,461,514.4,497.6,564.1,523.5,527.6,556.5,542.5,516.3,550.6,624.3,608.5,494.4,505.8,488.6,578.4,532.8,531.2,607.9,557.6,550.3,607.8,680.9,649.5,539.3,574.5,552.5,633.9,597.9,593.4,633.6,581.4,553.7,607.6,668.3,653.6,560.8,590.1,568.6,690.1,646.5,627.5,710.4,647.3,622.6,679.5,724.8,730.7,600.4,646.6,656.2,736.1,667.9,664.3,756.8,659.8,637.5,711.3,753.3,740.6,597.7,640.3,624.1,720.8,690.5,651.3,732.5,667,650.8,725.4,774.5,735.8,624.4,662.6,639,767,685.5,665.4,782.7,680.1,712.1,777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],[546,603.6,577,616.8,578.3,559.3,636.4,594.1,586.3,672.5,713.7,707.7,413.3,457.9,443.1,539.5,512.6,533.2,609.7,532.8,577.4,662.4,683.6,691.4,525.5,585.9,548.9,630.3,578.6,545.5,605.9,531.7,544.1,631.4,704.5,710.4,553.2,597.4,567.3,668.5,600.9,591.2,666.9,623.3,630.5,719.3,785,743.2,604.4,651.5,614,690.9,646.9,615.9,726,622.8,683.4,789.9,843.1,801.4,642.5,688.6,648.4,739.9,667.1,617.9,704.5,671.8,682.6,783.7,842.4,785.1,631.9,681.7,663.4,738.1,661.6,614.5,740.8,673.2,686.1,773.6,837.3,803.9,647.8,686,661.5,732.8,670.3,634.8,730.8,597.3,629.1,671.3,709.8,683,528.7,592.1,551.4,621.8,585.1,552,619.1,599.2,611.4,649.6,725.7,691.3,565,598,555.9,642.6,587.1,559.4,660.8,584.7,633.2,738.8,789.8,740.2,616.2,664.6,607.8,688.8,647.6,603.9,669.9,602.7,634.6,725.5,781.9,740.1,641.4,669.4,634.4,724.6,689.6,641.4,735.1,656,710.5,791.5,844.1,819.9,675.8,730.4,712.6,787.4,724.1,688.1,804,701.4,736.6,832.9,869.8,832,675.3,717.6,679.5,787.2,735.1,673.1,777.5,689.9,739.1,834.8,897.2,836.2,702.6,756.3,705.8,823.3,741,691.7,825.4,716.5,797.8,890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2],[null,null,null,null,null,null,null,null,null,null,null,null,-32.59094283593169,-29.65249603104604,-26.0519917710866,-15.58486042130501,-16.15274291860882,-8.014440433212988,-6.161060802069862,-12.60744985673352,-1.932184125781389,-0.3853887399463685,-4.569557080474118,-4.305404986836003,29.70814977973571,31.14343029087261,26.27718765806779,16.00730371272063,11.65276886893309,-0.6083202511773966,-5.014647596070986,1.331967213114749,-7.204944948812065,-7.619848612279223,0.8171269815329341,1.521281760802706,1.804287836977281,-1.147227533460804,1.502102944121764,3.270374256733133,0.1340482573726431,7.6604146100691,6.767053701015957,12.63902932254803,15.44546211490425,12.85506190823014,10.90938563786676,3.188267176789417,10.11259382819016,11.47001934235976,7.044198895027631,5.927180355630823,11.7995792694588,6.546854942233638,15.25913338997451,0.07181328545780019,4.868373602596465,6.92158760890611,8.184741303712361,7.662598486018846,7.138799469797363,5.674128058302985,5.345622119815663,6.346922462030391,5.781731098186782,2.358003442340806,-2.638950316968891,10.90778614998207,0.9972489683631292,2.474724611438051,-0.9321804917589938,0.1291433491175109,1.484623541887609,-2.93924466338259,2.799650043744539,3.126879134094995,-4.72186287192754,-1.86648730452329,4.209569957601467,-1.455839534131353,2.110997616615595,-0.3386835517596887,-2.495567980362734,5.517340212095156,-0.2786485545106299,0.08458805616646803,0.5787234042553102,-1.661807580174923,1.88391038696536,3.838245373543514,-2.42662016855566,-9.7833223900197,-7.51917305768588,-14.21394799054373,-14.02797202797202,-17.37063696862692,-19.49004540691582,-13.04935767410413,-15.78947368421052,-16.38007708271568,-12.79360319840079,-12.93729372937293,-17.12583767684289,-1.291848617176128,-6.922660897782606,-5.167068549776088,1.561737432894073,0.01643655489809159,7.245119305856829,-1.671850699844468,-1.808681672025725,2.53501152277964,1.776504297994252,0.6823351023502733,9.236298292902067,2.783410138248854,6.585318613209368,10.38866690882672,9.066154092583689,6.737880032867705,9.081715210355989,13.58244365361803,13.07818256242324,9.595435684647313,12.21846846846848,11.70933734939759,4.227669024510616,4.268292682926811,0.617844811920798,-0.03290556103980879,-1.850491995887804,0.6312548113933891,3.986649360281858,2.715404699738899,2.914027149321274,8.865751695851088,8.128449573507289,5.746545331985176,12.12121212121211,11.33470932232541,12.44356149539461,11.8334430546412,8.454286996857707,11.79620563035495,7.06134094151214,9.574648364683958,15.40626099190996,6.665700623098103,3.310131477184841,5.864541832669312,6.53153153153152,1.931098408774901,2.393189849020239,4.679911699779238,3.932119205298013,1.354865197755584,-0.4497001998667427,-0.9743272502319877,-4.89180128009753,-2.078521939953815,3.383740080850428,-1.956947162426614,-3.210887949260033,1.091239769627173,2.08627450980392,1.982285955293128,2.814283817868057,-0.6481231433972501,4.467123975238407,3.482742464469801,2.387437910591239,6.409544950055501,-0.7241129616220143,2.164900967296179,6.85324232081912,1.964017991004496,9.419176398279049,7.182244279018479,5.681084570690764,2.949170970372395,3.651505445227432,3.788107455478418,4.209702660406878,4.237288135593231,5.543398978847547,3.757138563270224,0.02555257442187209,2.955447728275251,0.6459766886673268,2.855305466237956,1.820403176542462,2.64026402640265,3.152039555006181,4.260578740729959,4.685388196425899,3.589743589743599,4.892881824464412,2.563731170336037,3.142163750159677,8.197657812053706,5.274173294265383,4.464174065274462,7.487401007919359,5.363344051446961,4.928100659077295,2.873082287308226,7.516855544398227,6.218304757305004,4.743707998418767,9.65965259144188,11.03405572755418,5.055438225976761,5.60636182902583,6.655494373952608,4.375976780531365,2.978515625,2.226980728051386,3.538503253796099,3.869246164109397,2.330339888598387,2.855705120140906,0.5537669027688263,3.591345081418695,6.721949993717802,6.350401606425704,6.296296296296289,6.438502673796798,9.815078236130859,2.80687054880604,4.255597747806728,3.930635838150298,5.798711397467216,4.8312133072407,5.519979508196715,-53.35917312661498,-99.41134918766188,-98.81991975454331,-98.1311371555274,-97.72909967845659,-97.47409326424871,-97.50067916327086,-90.36674202461693,-77.28340131009763,-75.157496850063,-79.93232994983083,-71.4407088238864,1.523545706371188,9590,6198,4371.751412429378,3792.035398230088,2989.74358974359,2642.391304347826,618.1225554106909,234.0587595212187,218.174133558749,233.7790697674419,163.4934126646834,80.10459299681673,68.87512899896802,23.19784058431249,6.405559065066346,4.43383356070941,14.77178423236514,39.45699564011098,37.72694262890344,18.71335504885994,15.82093517534537,37.92022295767286,21.58064516129032,13.72301477086226,1.136641407968697,3.312282510632825,5.592495844217504,1.534944480731548]]},\"evals\":[\"attrs.axes.x.axisLabelFormatter\",\"attrs.interactionModel\"],\"jsHooks\":[]} {\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"time\":[\"2015-06-01\",\"2015-07-01\",\"2015-08-01\",\"2015-09-01\",\"2015-10-01\",\"2015-11-01\",\"2015-12-01\",\"2016-01-01\",\"2016-02-01\",\"2016-03-01\",\"2016-04-01\",\"2016-05-01\",\"2016-06-01\",\"2016-07-01\",\"2016-08-01\",\"2016-09-01\",\"2016-10-01\",\"2016-11-01\",\"2016-12-01\",\"2017-01-01\",\"2017-02-01\",\"2017-03-01\",\"2017-04-01\",\"2017-05-01\",\"2017-06-01\",\"2017-07-01\",\"2017-08-01\",\"2017-09-01\",\"2017-10-01\",\"2017-11-01\",\"2017-12-01\",\"2018-01-01\",\"2018-02-01\",\"2018-03-01\",\"2018-04-01\",\"2018-05-01\",\"2018-06-01\",\"2018-07-01\",\"2018-08-01\",\"2018-09-01\",\"2018-10-01\",\"2018-11-01\",\"2018-12-01\",\"2019-01-01\",\"2019-02-01\",\"2019-03-01\",\"2019-04-01\",\"2019-05-01\",\"2019-06-01\",\"2019-07-01\",\"2019-08-01\",\"2019-09-01\",\"2019-10-01\",\"2019-11-01\",\"2019-12-01\",\"2020-01-01\",\"2020-02-01\",\"2020-03-01\",\"2020-04-01\",\"2020-05-01\",\"2020-06-01\",\"2020-07-01\",\"2020-08-01\",\"2020-09-01\",\"2020-10-01\",\"2020-11-01\",\"2020-12-01\",\"2021-01-01\",\"2021-02-01\",\"2021-03-01\",\"2021-04-01\",\"2021-05-01\",\"2021-06-01\",\"2021-07-01\",\"2021-08-01\",\"2021-09-01\",\"2021-10-01\",\"2021-11-01\",\"2021-12-01\",\"2022-01-01\",\"2022-02-01\",\"2022-03-01\",\"2022-04-01\",\"2022-05-01\",\"2022-06-01\",\"2022-07-01\",\"2022-08-01\",\"2022-09-01\",\"2022-10-01\",\"2022-11-01\",\"2022-12-01\",\"2023-01-01\",\"2023-02-01\",\"2023-03-01\",\"2023-04-01\",\"2023-05-01\",\"2023-06-01\",\"2023-07-01\"],\"VISNS_HI\":[777.5,818.5,757.5,647.2,687.7,665.9,799.5,723.5,690.4,782.9,700.2,716.7,799.7,833.4,777.5,667.6,717,697.1,828.2,758.9,708.1,807.5,757.6,754.5,835.4,895.8,819.2,700.5,737.6,749.5,879.7,794.9,776.5,896.6,795.9,796.8,891,935,843.6,716.1,763.7,778.5,900.2,817.6,780.8,928.8,849.4,847.4,947.1,995.2,926.4,736.2,796.2,809.1,952.4,857.1,823.9,433.2,5,10,17.7,22.6,23.4,18.4,76.7,183.8,236.6,172,235.3,439.8,484.5,629.8,791.5,879.6,723,504.6,550.8,614,752.8,574.1,620,792.1,818.2,775.9,842.2,918.6,829.8,703.7,758.6,728.9,871.9,791.8,753.8,900.8,827.5,801.6,889.3,932.7],\"VAPNS_HI\":[890.9,931.8,854.5,721.2,786.7,741.9,866.6,782.8,729,835.1,739.4,816.2,923,963.4,883.3,761.5,815.7,771.5,889.3,812.5,728.9,868.7,797,843.6,951.6,1005.2,930.8,797.6,849.9,814.9,951.3,852.6,802.5,951.8,857.2,919.5,1007.7,1067.2,950.8,820.3,869.9,845.8,959.6,874.2,797.8,982,881.7,958.8,1071.2,1133.6,1034.4,839.2,914.6,874.4,1053.8,937.8,857.7,494.4,11.6,24.5,43.6,63.4,63.1,51,117.2,226.4,289.3,227.3,271.7,491.8,537.8,705,883.1,1005.9,827.8,596.9,659.8,713.8,837.6,661.9,676.1,874.5,882.7,893.7,963.9,1046.6,946,801.1,851.6,827.6,960.5,878.2,791.7,982.4,883.2,929.6,1020.6,1090.2],\"VISNS_HI%\":[7.18,5.68,2.95,3.65,3.79,4.21,4.24,5.54,3.76,0.03,2.96,0.65,2.86,1.82,2.64,3.15,4.26,4.69,3.59,4.89,2.56,3.14,8.2,5.27,4.46,7.49,5.36,4.93,2.87,7.52,6.22,4.74,9.66,11.03,5.06,5.61,6.66,4.38,2.98,2.23,3.54,3.87,2.33,2.86,0.55,3.59,6.72,6.35,6.3,6.44,9.82,2.81,4.26,3.93,5.8,4.83,5.52,-53.36,-99.41,-98.82,-98.13,-97.73,-97.47,-97.5,-90.37,-77.28,-75.16,-79.93,-71.44,1.52,9590,6198,4371.75,3792.04,2989.74,2642.39,618.12,234.06,218.17,233.78,163.49,80.1,68.88,23.2,6.41,4.43,14.77,39.46,37.73,18.71,15.82,37.92,21.58,13.72,1.14,3.31,5.59,1.53]},\"columns\":[{\"id\":\"time\",\"name\":\"time\",\"type\":\"Date\"},{\"id\":\"VISNS_HI\",\"name\":\"VISNS_HI\",\"type\":\"numeric\"},{\"id\":\"VAPNS_HI\",\"name\":\"VAPNS_HI\",\"type\":\"numeric\"},{\"id\":\"VISNS_HI%\",\"name\":\"VISNS_HI%\",\"type\":\"numeric\"}],\"defaultPageSize\":1000,\"highlight\":true,\"compact\":true,\"width\":\"900px\",\"height\":\"300px\",\"dataKey\":\"ee7c3085dd7b41bb8c5a841480260cf7\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}quarterly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"E_TU_HI\", \"ECT_HI\", \"EMN_HI\") |>   plot_fc()  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"axisLabelFormatter\":\"function(d) {\\n      d = d || new Date();\\n      var n = [1,2,3,4];\\n      var qr = \\\"Q\\\" + n[Math.floor(d.getMonth() / 3)];\\n//      var twoDigitsYear = parseInt(d.getFullYear().toString().substr(2,2), 10);\\n      var Year = parseInt(d.getFullYear().toString(), 10);\\n//     return [twoDigits+qr];\\n      return [Year+qr];\\n}\"},\"y\":[],\"y2\":{\"drawGrid\":false,\"independentTicks\":true}},\"title\":\"E_TU_HI\",\"labels\":[\"quarter\",\"E_TU_HI\",\"ECT_HI\",\"EMN_HI\",\"E_TU_HI%\"],\"retainDateWindow\":false,\"ylabel\":\"level\",\"y2label\":\"% Chg\",\"colors\":[\"#1D667F\",\"#F6A01B\",\"#9BBB59\",\"#1D667F\"],\"series\":{\"E_TU_HI\":{\"axis\":\"y\",\"strokeWidth\":2},\"ECT_HI\":{\"axis\":\"y\",\"strokeWidth\":2,\"strokePattern\":[7,3]},\"EMN_HI\":{\"axis\":\"y\",\"strokeWidth\":2,\"strokePattern\":[7,3]},\"E_TU_HI%\":{\"axis\":\"y2\",\"stepPlot\":true,\"fillGraph\":true}},\"showRangeSelector\":true,\"dateWindow\":[\"2015-05-20T00:00:00.000Z\",\"2027-05-20T00:00:00.000Z\"],\"rangeSelectorHeight\":30,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"red\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\",\"legend\":\"follow\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":true,\"hideOverlayOnMouseOut\":true},\"scale\":\"quarterly\",\"group\":\"comp\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1998-01-01T00:00:00.000Z\",\"1998-04-01T00:00:00.000Z\",\"1998-07-01T00:00:00.000Z\",\"1998-10-01T00:00:00.000Z\",\"1999-01-01T00:00:00.000Z\",\"1999-04-01T00:00:00.000Z\",\"1999-07-01T00:00:00.000Z\",\"1999-10-01T00:00:00.000Z\",\"2000-01-01T00:00:00.000Z\",\"2000-04-01T00:00:00.000Z\",\"2000-07-01T00:00:00.000Z\",\"2000-10-01T00:00:00.000Z\",\"2001-01-01T00:00:00.000Z\",\"2001-04-01T00:00:00.000Z\",\"2001-07-01T00:00:00.000Z\",\"2001-10-01T00:00:00.000Z\",\"2002-01-01T00:00:00.000Z\",\"2002-04-01T00:00:00.000Z\",\"2002-07-01T00:00:00.000Z\",\"2002-10-01T00:00:00.000Z\",\"2003-01-01T00:00:00.000Z\",\"2003-04-01T00:00:00.000Z\",\"2003-07-01T00:00:00.000Z\",\"2003-10-01T00:00:00.000Z\",\"2004-01-01T00:00:00.000Z\",\"2004-04-01T00:00:00.000Z\",\"2004-07-01T00:00:00.000Z\",\"2004-10-01T00:00:00.000Z\",\"2005-01-01T00:00:00.000Z\",\"2005-04-01T00:00:00.000Z\",\"2005-07-01T00:00:00.000Z\",\"2005-10-01T00:00:00.000Z\",\"2006-01-01T00:00:00.000Z\",\"2006-04-01T00:00:00.000Z\",\"2006-07-01T00:00:00.000Z\",\"2006-10-01T00:00:00.000Z\",\"2007-01-01T00:00:00.000Z\",\"2007-04-01T00:00:00.000Z\",\"2007-07-01T00:00:00.000Z\",\"2007-10-01T00:00:00.000Z\",\"2008-01-01T00:00:00.000Z\",\"2008-04-01T00:00:00.000Z\",\"2008-07-01T00:00:00.000Z\",\"2008-10-01T00:00:00.000Z\",\"2009-01-01T00:00:00.000Z\",\"2009-04-01T00:00:00.000Z\",\"2009-07-01T00:00:00.000Z\",\"2009-10-01T00:00:00.000Z\",\"2010-01-01T00:00:00.000Z\",\"2010-04-01T00:00:00.000Z\",\"2010-07-01T00:00:00.000Z\",\"2010-10-01T00:00:00.000Z\",\"2011-01-01T00:00:00.000Z\",\"2011-04-01T00:00:00.000Z\",\"2011-07-01T00:00:00.000Z\",\"2011-10-01T00:00:00.000Z\",\"2012-01-01T00:00:00.000Z\",\"2012-04-01T00:00:00.000Z\",\"2012-07-01T00:00:00.000Z\",\"2012-10-01T00:00:00.000Z\",\"2013-01-01T00:00:00.000Z\",\"2013-04-01T00:00:00.000Z\",\"2013-07-01T00:00:00.000Z\",\"2013-10-01T00:00:00.000Z\",\"2014-01-01T00:00:00.000Z\",\"2014-04-01T00:00:00.000Z\",\"2014-07-01T00:00:00.000Z\",\"2014-10-01T00:00:00.000Z\",\"2015-01-01T00:00:00.000Z\",\"2015-04-01T00:00:00.000Z\",\"2015-07-01T00:00:00.000Z\",\"2015-10-01T00:00:00.000Z\",\"2016-01-01T00:00:00.000Z\",\"2016-04-01T00:00:00.000Z\",\"2016-07-01T00:00:00.000Z\",\"2016-10-01T00:00:00.000Z\",\"2017-01-01T00:00:00.000Z\",\"2017-04-01T00:00:00.000Z\",\"2017-07-01T00:00:00.000Z\",\"2017-10-01T00:00:00.000Z\",\"2018-01-01T00:00:00.000Z\",\"2018-04-01T00:00:00.000Z\",\"2018-07-01T00:00:00.000Z\",\"2018-10-01T00:00:00.000Z\",\"2019-01-01T00:00:00.000Z\",\"2019-04-01T00:00:00.000Z\",\"2019-07-01T00:00:00.000Z\",\"2019-10-01T00:00:00.000Z\",\"2020-01-01T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2021-01-01T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2022-01-01T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-10-01T00:00:00.000Z\",\"2023-01-01T00:00:00.000Z\",\"2023-04-01T00:00:00.000Z\"],[27.89,27.86,27.6,27.32,27.03,27.43,27.56,27.91,27.96,28.13,28.4,28.73,29.06,29.2,29.21,26.61,25.92,26.32,26.68,26.89,27.28,26.81,26.81,26.84,27.14,28.39,28.73,29.22,29.66,31.02,31.74,31.37,32.04,33.12,33.87,33.07,33.03,33,32.98,33.12,32.29,30.22,28.53,27.74,27.36,27.1,26.77,26.31,26.37,26.56,26.77,27.08,27.13,27.08,27.26,27.66,27.89,28.31,28.83,29.06,29.21,29.63,29.93,30.09,30.18,30.36,30.23,30.64,30.94,31.08,31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],[23.26,22.99,23,23.05,22.79,22.86,22.93,23.31,24.26,25,25.64,25.79,25.72,25.2,24.94,24.81,25.59,26.25,26.81,27.29,27.91,28.54,28.74,28.78,28.77,29.69,30.3,31.22,32.36,33.78,34.74,35.37,35.94,36.55,37.6,38.77,39.1,39.7,40.18,40.46,40.29,39.29,38.3,36.77,34.63,32.76,31.34,30.38,30.37,29.79,29.3,29.71,29.37,29.74,29.96,29.89,30.02,30.04,30.39,31.19,31.71,32.17,32.03,32.33,32.55,32.8,33.47,34.08,34.11,35.28,36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],[15.89,15.76,15.8,15.78,15.76,15.93,16.13,16.27,16.26,16.43,16.64,16.76,16.76,16.67,16.57,16.05,15.79,15.35,15.11,15.02,14.88,15.04,15.11,15.48,15.51,15.59,15.47,15.42,15.43,15.35,15.41,15.37,15.37,15.45,15.6,15.6,15.56,15.57,15.41,15.32,15.32,15.39,15.03,14.57,14.23,13.93,13.77,13.61,13.41,13.12,13.1,13.28,13.43,13.51,13.66,13.69,13.62,13.41,13.56,13.66,13.71,13.77,13.9,13.96,13.91,14,14.4,14.41,14.38,14.31,14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91],[null,null,null,null,-3.08354248834708,-1.543431442928933,-0.144927536231898,2.159590043923876,3.440621531631516,2.551950419249005,3.047895500725684,2.938015048369769,3.934191702432033,3.803768218983294,2.85211267605634,-7.379046293073444,-10.8052305574673,-9.86301369863013,-8.661417322834652,1.052236001503193,5.246913580246915,1.86170212765957,0.4872563718140821,-0.1859427296392768,-0.513196480938416,5.893323386795979,7.161506900410308,8.867362146050661,9.285187914517312,9.263825290595285,10.4768534632788,7.357973990417532,8.024275118004031,6.769825918762074,6.710775047258966,5.419190309212629,3.08988764044944,-0.3623188405797007,-2.627694124594038,0.1511944360447437,-2.240387526491072,-8.424242424242422,-13.49302607640993,-16.243961352657,-15.26788479405389,-10.32428855062871,-6.168944970206802,-5.155010814708005,-3.618421052631571,-1.992619926199268,0,2.926643861649558,2.882062950322339,1.957831325301207,1.830407172207704,2.14180206794683,2.801326944342053,4.542097488921715,5.759354365370495,5.061460592913947,4.732879168160631,4.662663369833986,3.815469996531395,3.544390915347551,3.320780554604585,2.463719203509962,1.002338790511192,1.827849783981383,2.518223989396962,2.371541501976271,3.010254713860405,1.827676240208875,1.260504201680668,1.866151866151866,3.307642903018637,4.230769230769238,4.500478774337702,3.158559696778251,3.232825613926016,2.521525215252152,1.832620647525962,3.674219228413977,2.137910267991572,1.349730053989195,1.55968806238751,5.552274069698759,7.193396226415083,7.990529742527386,7.678676904902537,-32.20481253497483,-34.32343234323433,-30.44669772540423,-27.61930883159627,21.74989682212134,30.0251256281407,24.70449172576832,20.19704433497536,10.71186440677965,8.373590982286627,4.865718799368079,7.030264817150078,4.225352112676073]]},\"evals\":[\"attrs.axes.x.axisLabelFormatter\",\"attrs.interactionModel\"],\"jsHooks\":[]} {\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"time\":[\"2015-07-01\",\"2015-10-01\",\"2016-01-01\",\"2016-04-01\",\"2016-07-01\",\"2016-10-01\",\"2017-01-01\",\"2017-04-01\",\"2017-07-01\",\"2017-10-01\",\"2018-01-01\",\"2018-04-01\",\"2018-07-01\",\"2018-10-01\",\"2019-01-01\",\"2019-04-01\",\"2019-07-01\",\"2019-10-01\",\"2020-01-01\",\"2020-04-01\",\"2020-07-01\",\"2020-10-01\",\"2021-01-01\",\"2021-04-01\",\"2021-07-01\",\"2021-10-01\",\"2022-01-01\",\"2022-04-01\",\"2022-07-01\",\"2022-10-01\",\"2023-01-01\",\"2023-04-01\"],\"E_TU_HI\":[31.14,31.2,31.33,31.66,32.17,32.52,32.74,32.66,33.21,33.34,33.34,33.86,33.92,33.79,33.86,35.74,36.36,36.49,36.46,24.23,23.88,25.38,26.39,29.5,31.05,31.65,31.72,32.66,33.65,33.19,33.95,34.04],\"ECT_HI\":[36.51,38.44,39.4,39.39,39.33,38.42,37.91,37.6,37.14,36.87,37.07,37.52,37.79,37.96,37.62,37.6,37.53,37.76,37.46,36.33,36.48,36.91,37.36,37.4,36.85,36.75,36.82,36.89,37.15,38.76,38.85,37.24],\"EMN_HI\":[14.41,14.57,14.43,14.49,14.57,14.52,14.45,14.7,14.74,14.84,14.81,14.59,14.36,14.29,14.26,14.17,14.03,13.89,13.83,11.23,11.48,11.65,11.72,12,12.39,12.45,12.39,12.49,12.65,12.66,12.78,12.91],\"E_TU_HI%\":[3.01,1.83,1.26,1.87,3.31,4.23,4.5,3.16,3.23,2.52,1.83,3.67,2.14,1.35,1.56,5.55,7.19,7.99,7.68,-32.2,-34.32,-30.45,-27.62,21.75,30.03,24.7,20.2,10.71,8.37,4.87,7.03,4.23]},\"columns\":[{\"id\":\"time\",\"name\":\"time\",\"type\":\"Date\"},{\"id\":\"E_TU_HI\",\"name\":\"E_TU_HI\",\"type\":\"numeric\"},{\"id\":\"ECT_HI\",\"name\":\"ECT_HI\",\"type\":\"numeric\"},{\"id\":\"EMN_HI\",\"name\":\"EMN_HI\",\"type\":\"numeric\"},{\"id\":\"E_TU_HI%\",\"name\":\"E_TU_HI%\",\"type\":\"numeric\"}],\"defaultPageSize\":1000,\"highlight\":true,\"compact\":true,\"width\":\"900px\",\"height\":\"300px\",\"dataKey\":\"d5d9af010ef1f5bc236177a63036cfdf\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://uhero.github.io/fcutils/reference/pm.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","title":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","text":"Concatenate dates formatted yyyyMm yyyy.m obtain period","code":""},{"path":"https://uhero.github.io/fcutils/reference/pm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","text":"","code":"pm(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/pm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","text":"dat1 date period start (string: yyyyMm yyyy.m) dat2 date period end (string: yyyyMm yyyy.m)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","text":"string containing date range","code":""},{"path":"https://uhero.github.io/fcutils/reference/pm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate dates formatted as yyyyMm or yyyy.m to obtain period — pm","text":"","code":"pm(\"2010M1\", \"2020M4\") #> [1] \"2010-01-01/2020-04-01\" pm(2010.1, 2020.4) #> [1] \"2010-01-01/2020-04-01\" pm(2010.1, ) #> [1] \"2010-01-01/\" pm(, 2010.1) #> [1] \"/2010-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/pq.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","title":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","text":"Concatenate dates formatted yyyyQq yyyy.q obtain period","code":""},{"path":"https://uhero.github.io/fcutils/reference/pq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","text":"","code":"pq(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/pq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","text":"dat1 date period start (string: yyyyQq yyyy.q) dat2 date period end (string: yyyyQq yyyy.q)","code":""},{"path":"https://uhero.github.io/fcutils/reference/pq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","text":"string containing date range","code":""},{"path":"https://uhero.github.io/fcutils/reference/pq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate dates formatted as yyyyQq or yyyy.q to obtain period — pq","text":"","code":"pq(\"2010Q1\", \"2020Q4\") #> [1] \"2010-01-01/2020-10-01\" pq(2010.1, 2020.4) #> [1] \"2010-01-01/2020-10-01\" pq(2010.1, ) #> [1] \"2010-01-01/\" pq(, 2010.1) #> [1] \"/2010-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/ptd_cum.html","id":null,"dir":"Reference","previous_headings":"","what":"Period to date sum or average — ptd_cum","title":"Period to date sum or average — ptd_cum","text":"Period date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_cum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Period to date sum or average — ptd_cum","text":"","code":"ptd_cum(x, per = \"year\", avg = TRUE)"},{"path":"https://uhero.github.io/fcutils/reference/ptd_cum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Period to date sum or average — ptd_cum","text":"x ts-boxable object per period sum average higher frequency series x calculated (unit time aggregation performed: ytd per = \"year\" (default), mtd per = \"month\") avg TRUE (default), retorn period date average, FALSE, return period date sum","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_cum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Period to date sum or average — ptd_cum","text":"object type input containing period date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_cum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Period to date sum or average — ptd_cum","text":"","code":"daily_data_example |>   ptd_cum(\"week\") #> # A tibble: 571 × 3 #>    time       VISPNS_HI VAPNS_HI #>    <date>         <dbl>    <dbl> #>  1 2020-09-01      783      2.52 #>  2 2020-09-02      726.     2.32 #>  3 2020-09-03      749      2.27 #>  4 2020-09-04      760.     2.06 #>  5 2020-09-05      752.     1.98 #>  6 2020-09-06      513      1.44 #>  7 2020-09-07      633      1.66 #>  8 2020-09-08      648.     1.61 #>  9 2020-09-09      631.     1.62 #> 10 2020-09-10      661.     1.66 #> # ℹ 561 more rows test <- daily_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"VAPNS_HI\") |>   ptd_cum(\"week\") tsbox::`%ts/%`(test, tsbox::ts_lag(test, \"4 weeks\")) |>   tsbox::`%ts-%`(1) |>   tsbox::`%ts*%`(100) |>   tail() #> # A tibble: 6 × 3 #>   id       time       value #>   <chr>    <date>     <dbl> #> 1 VAPNS_HI 2022-03-20  8.55 #> 2 VAPNS_HI 2022-03-21 10.5  #> 3 VAPNS_HI 2022-03-22 10.7  #> 4 VAPNS_HI 2022-03-23 13.6  #> 5 VAPNS_HI 2022-03-24 15.4  #> 6 VAPNS_HI 2022-03-25 17.2"},{"path":"https://uhero.github.io/fcutils/reference/ptd_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Period to date growth rate — ptd_gr","title":"Period to date growth rate — ptd_gr","text":"Period date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Period to date growth rate — ptd_gr","text":"","code":"ptd_gr(x, per = \"year\", lag_length = \"1 year\")"},{"path":"https://uhero.github.io/fcutils/reference/ptd_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Period to date growth rate — ptd_gr","text":"x ts-boxable object per period sum average higher frequency series x calculated (unit time aggregation performed: ytd per = \"year\" (default), mtd per = \"month\") lag_length lag growth calculated time difference relative base period (e.g. \"1 year\" (default), \"3 years\", etc. See ?ts_lag() options)","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_gr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Period to date growth rate — ptd_gr","text":"object type input containing period date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/ptd_gr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Period to date growth rate — ptd_gr","text":"","code":"monthly_data_example |>   ptd_gr() |>   tail() #> # A tibble: 6 × 3 #>   time       VISNS_HI VAPNS_HI #>   <date>        <dbl>    <dbl> #> 1 2023-02-01     29.4    24.8  #> 2 2023-03-01     23.2    19.9  #> 3 2023-04-01     16.7    14.2  #> 4 2023-05-01     13.8    11.9  #> 5 2023-06-01     12.3    10.8  #> 6 2023-07-01     10.4     9.61 monthly_data_example |>   dplyr::select(time, \"VAPNS_HI\") |>   ptd_gr(per = \"month\", lag_length = \"3 years\") |>   tail() #> # A tibble: 6 × 2 #>   time       VAPNS_HI #>   <date>        <dbl> #> 1 2023-02-01    -7.69 #> 2 2023-03-01    98.7  #> 3 2023-04-01  7514.   #> 4 2023-05-01  3694.   #> 5 2023-06-01  2241.   #> 6 2023-07-01  1620.   # don't use lag_length = \"1 year\" with weekly data daily_data_example |>   ptd_gr(\"week\") #> # A tibble: 206 × 3 #>    time       VISPNS_HI VAPNS_HI #>    <date>         <dbl>    <dbl> #>  1 2021-09-01     1848.     657. #>  2 2021-09-02     2200.     772. #>  3 2021-09-03     2280.     830. #>  4 2021-09-04     2330.     947. #>  5 2021-09-05     1946.     863. #>  6 2021-09-06     2696.    1217. #>  7 2021-09-07     2147.    1043. #>  8 2021-09-08     2137.    1064. #>  9 2021-09-09     2287.    1076. #> 10 2021-09-10     2242.    1055. #> # ℹ 196 more rows # lag_length = \"52 weeks\" instead daily_data_example |>   ptd_gr(\"week\", \"52 weeks\") #> # A tibble: 207 × 3 #>    time       VISPNS_HI VAPNS_HI #>    <date>         <dbl>    <dbl> #>  1 2021-08-31     1558.     601. #>  2 2021-09-01     1999.     720. #>  3 2021-09-02     2131.     794. #>  4 2021-09-03     2244.     925. #>  5 2021-09-04     2358.     986. #>  6 2021-09-05     2898.    1220. #>  7 2021-09-06     2166.    1045. #>  8 2021-09-07     2096.    1077. #>  9 2021-09-08     2195.    1062. #> 10 2021-09-09     2180.    1043. #> # ℹ 197 more rows # and use lag_length = \"364 days\" with daily data daily_data_example |>   ptd_gr(\"day\", \"364 days\") #> # A tibble: 207 × 3 #>    time       VISPNS_HI VAPNS_HI #>    <date>         <dbl>    <dbl> #>  1 2021-08-31     1536.     572. #>  2 2021-09-01     3190      995. #>  3 2021-09-02     2741.    1063. #>  4 2021-09-03     2844.    1663. #>  5 2021-09-04     3025.    1342. #>  6 2021-09-05     2898.    1220. #>  7 2021-09-06     1666.     910. #>  8 2021-09-07     1967.    1147. #>  9 2021-09-08     2526.    1016. #> 10 2021-09-09     2132.     979. #> # ℹ 197 more rows daily_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"VAPNS_HI\") |>   ptd_gr(\"week\", \"4 weeks\") %>%   tail() #> # A tibble: 6 × 3 #>   id       time       value #>   <chr>    <date>     <dbl> #> 1 VAPNS_HI 2022-03-20  8.55 #> 2 VAPNS_HI 2022-03-21 10.5  #> 3 VAPNS_HI 2022-03-22 10.7  #> 4 VAPNS_HI 2022-03-23 13.6  #> 5 VAPNS_HI 2022-03-24 15.4  #> 6 VAPNS_HI 2022-03-25 17.2"},{"path":"https://uhero.github.io/fcutils/reference/py.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate dates formatted as yyyy to obtain period — py","title":"Concatenate dates formatted as yyyy to obtain period — py","text":"Concatenate dates formatted yyyy obtain period","code":""},{"path":"https://uhero.github.io/fcutils/reference/py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate dates formatted as yyyy to obtain period — py","text":"","code":"py(dat1 = \"\", dat2 = \"\")"},{"path":"https://uhero.github.io/fcutils/reference/py.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate dates formatted as yyyy to obtain period — py","text":"dat1 year period start (string numeric: yyyy) dat2 year period end (string numeric: yyyy)","code":""},{"path":"https://uhero.github.io/fcutils/reference/py.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate dates formatted as yyyy to obtain period — py","text":"string containing date range","code":""},{"path":"https://uhero.github.io/fcutils/reference/py.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate dates formatted as yyyy to obtain period — py","text":"","code":"py(\"2010\", \"2020\") #> [1] \"2010-01-01/2020-01-01\" py(2010, 2020) #> [1] \"2010-01-01/2020-01-01\" py(2010, ) #> [1] \"2010-01-01/\" py(, 2010) #> [1] \"/2010-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/qtrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert period in quarters to period in months — qtrs","title":"Convert period in quarters to period in months — qtrs","text":"Convert period quarters period months","code":""},{"path":"https://uhero.github.io/fcutils/reference/qtrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert period in quarters to period in months — qtrs","text":"","code":"qtrs(nr_quarters)"},{"path":"https://uhero.github.io/fcutils/reference/qtrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert period in quarters to period in months — qtrs","text":"nr_quarters number quarters period (integer)","code":""},{"path":"https://uhero.github.io/fcutils/reference/qtrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert period in quarters to period in months — qtrs","text":"number months period","code":""},{"path":"https://uhero.github.io/fcutils/reference/qtrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert period in quarters to period in months — qtrs","text":"","code":"qtrs(3) #> [1] \"9m 0d 0H 0M 0S\" lubridate::ymd(\"2020-01-01\") + qtrs(3) #> [1] \"2020-10-01\""},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":null,"dir":"Reference","previous_headings":"","what":"quarterly data for examples — quarterly_data_example","title":"quarterly data for examples — quarterly_data_example","text":"quarterly data examples","code":""},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quarterly data for examples — quarterly_data_example","text":"","code":"quarterly_data_example"},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"quarterly data for examples — quarterly_data_example","text":"tibble quarterly data","code":""},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"quarterly data for examples — quarterly_data_example","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"quarterly data for examples — quarterly_data_example","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/quarterly_data_example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"quarterly data for examples — quarterly_data_example","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/rename_udaman.html","id":null,"dir":"Reference","previous_headings":"","what":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","title":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","text":"Format series names udaman format (mnemonic@loc.freq)","code":""},{"path":"https://uhero.github.io/fcutils/reference/rename_udaman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","text":"","code":"rename_udaman(ser_in, freq = NULL)"},{"path":"https://uhero.github.io/fcutils/reference/rename_udaman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","text":"ser_in series names (character \"mnemonic_loc\", \"mnemonic_AT_loc_freq\", \"mnemonic__loc_freq\", mnemonic@loc.freq\") freq frequency series, required contained series name (character \"D\", \"W\", \"M\", \"Q\", \"S\", \"\")","code":""},{"path":"https://uhero.github.io/fcutils/reference/rename_udaman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","text":"series names following udaman convention \"mnemonic@loc.freq\"","code":""},{"path":"https://uhero.github.io/fcutils/reference/rename_udaman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format series names to udaman format (mnemonic@loc.freq) — rename_udaman","text":"","code":"rename_udaman(c(\"E_NF_HI\", \"ECT_HI\", \"E_TU_HAW\"), freq = \"M\") #> [1] \"E_NF@HI.M\"  \"ECT@HI.M\"   \"E_TU@HAW.M\" rename_udaman(c(\"E_NF__HI_M\", \"ECT__HI_M\", \"VAP__HAW_W\")) #> [1] \"E_NF@HI.M\" \"ECT@HI.M\"  \"VAP@HAW.W\" rename_udaman(c(\"E_NF_AT_HI_M\", \"ECT_AT_HI_M\", \"VAP_AT_HAW_W\")) #> [1] \"E_NF@HI.M\" \"ECT@HI.M\"  \"VAP@HAW.W\" rename_udaman(c(\"E_NF@HI.M\", \"ECT@HI.M\", \"VAP@HAW.W\")) #> [1] \"E_NF@HI.M\" \"ECT@HI.M\"  \"VAP@HAW.W\" rename_udaman(c(\"SH_US@HI.M\", \"SH_JP__HON_M\")) #> [1] \"SH_US@HI.M\" \"SH_JP@JP.M\" rename_udaman(c(\"E_NF_HI5\", \"ECT__HIALL\", \"E_TU@CNTY\"), freq = \"M\") #>  [1] \"E_NF@HI.M\"  \"E_NF@HON.M\" \"E_NF@HAW.M\" \"E_NF@MAU.M\" \"E_NF@KAU.M\" #>  [6] \"ECT@HI.M\"   \"ECT@HON.M\"  \"ECT@HAW.M\"  \"ECT@MAU.M\"  \"ECT@KAU.M\"  #> [11] \"ECT@MAUI.M\" \"ECT@MOL.M\"  \"ECT@LAN.M\"  \"E_TU@HON.M\" \"E_TU@HAW.M\" #> [16] \"E_TU@MAU.M\" \"E_TU@KAU.M\" rename_udaman(c(\"E_NF_HI5 , ECT__HIALL  E_TU@CNTY\", \"VAP_HAW ; ECT_HON\"), freq = \"M\") #>  [1] \"E_NF@HI.M\"  \"E_NF@HON.M\" \"E_NF@HAW.M\" \"E_NF@MAU.M\" \"E_NF@KAU.M\" #>  [6] \"ECT@HI.M\"   \"ECT@HON.M\"  \"ECT@HAW.M\"  \"ECT@MAU.M\"  \"ECT@KAU.M\"  #> [11] \"ECT@MAUI.M\" \"ECT@MOL.M\"  \"ECT@LAN.M\"  \"E_TU@HON.M\" \"E_TU@HAW.M\" #> [16] \"E_TU@MAU.M\" \"E_TU@KAU.M\" \"VAP@HAW.M\"  \"ECT@HON.M\"  quarterly_data_example |> dplyr::rename_with(~ rename_udaman(., freq = \"M\"), .cols = -1) #> # A tibble: 102 × 31 #>    time       `E_NF@HI.M` `ECT@HI.M` `EMN@HI.M` `EWT@HI.M` `ERT@HI.M` #>    <date>           <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #>  1 1998-01-01        531.       23.3       15.9       15.9       65.2 #>  2 1998-04-01        531.       23.0       15.8       15.9       64.6 #>  3 1998-07-01        533.       23         15.8       15.9       64.2 #>  4 1998-10-01        531.       23.0       15.8       16         64.2 #>  5 1999-01-01        530.       22.8       15.8       15.8       64.1 #>  6 1999-04-01        533.       22.9       15.9       15.8       64.8 #>  7 1999-07-01        537.       22.9       16.1       15.8       65.1 #>  8 1999-10-01        541.       23.3       16.3       16.0       65.9 #>  9 2000-01-01        544.       24.3       16.3       16.2       66.0 #> 10 2000-04-01        551.       25         16.4       16.2       66.0 #> # ℹ 92 more rows #> # ℹ 25 more variables: `E_TRADE@HI.M` <dbl>, `E_TU@HI.M` <dbl>, #> #   `ETWTANS@HI.M` <dbl>, `ETWNS@HI.M` <dbl>, `EUT@HI.M` <dbl>, #> #   `EIF@HI.M` <dbl>, `EFI@HI.M` <dbl>, `E_FIR@HI.M` <dbl>, `ERE@HI.M` <dbl>, #> #   `EPS@HI.M` <dbl>, `E_PBS@HI.M` <dbl>, `E_ELSE@HI.M` <dbl>, #> #   `EMA@HI.M` <dbl>, `EAD@HI.M` <dbl>, `EED@HI.M` <dbl>, `EHC@HI.M` <dbl>, #> #   `EAF@HI.M` <dbl>, `EAFAC@HI.M` <dbl>, `EAFFD@HI.M` <dbl>, … quarterly_data_example |> dplyr::rename_with(rename_udaman, freq = \"M\", .cols = !time) #> # A tibble: 102 × 31 #>    time       `E_NF@HI.M` `ECT@HI.M` `EMN@HI.M` `EWT@HI.M` `ERT@HI.M` #>    <date>           <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #>  1 1998-01-01        531.       23.3       15.9       15.9       65.2 #>  2 1998-04-01        531.       23.0       15.8       15.9       64.6 #>  3 1998-07-01        533.       23         15.8       15.9       64.2 #>  4 1998-10-01        531.       23.0       15.8       16         64.2 #>  5 1999-01-01        530.       22.8       15.8       15.8       64.1 #>  6 1999-04-01        533.       22.9       15.9       15.8       64.8 #>  7 1999-07-01        537.       22.9       16.1       15.8       65.1 #>  8 1999-10-01        541.       23.3       16.3       16.0       65.9 #>  9 2000-01-01        544.       24.3       16.3       16.2       66.0 #> 10 2000-04-01        551.       25         16.4       16.2       66.0 #> # ℹ 92 more rows #> # ℹ 25 more variables: `E_TRADE@HI.M` <dbl>, `E_TU@HI.M` <dbl>, #> #   `ETWTANS@HI.M` <dbl>, `ETWNS@HI.M` <dbl>, `EUT@HI.M` <dbl>, #> #   `EIF@HI.M` <dbl>, `EFI@HI.M` <dbl>, `E_FIR@HI.M` <dbl>, `ERE@HI.M` <dbl>, #> #   `EPS@HI.M` <dbl>, `E_PBS@HI.M` <dbl>, `E_ELSE@HI.M` <dbl>, #> #   `EMA@HI.M` <dbl>, `EAD@HI.M` <dbl>, `EED@HI.M` <dbl>, `EHC@HI.M` <dbl>, #> #   `EAF@HI.M` <dbl>, `EAFAC@HI.M` <dbl>, `EAFFD@HI.M` <dbl>, … quarterly_data_example |>   tsbox::ts_long() |>   dplyr::mutate(id = rename_udaman(id, freq = \"M\")) |>   tsbox::ts_xts() #>            E_NF.HI.M ECT.HI.M EMN.HI.M EWT.HI.M ERT.HI.M E_TRADE.HI.M E_TU.HI.M #> 1998-01-01    530.51    23.26    15.89    15.87    65.17        81.03     27.89 #> 1998-04-01    531.21    22.99    15.76    15.93    64.63        80.56     27.86 #> 1998-07-01    532.70    23.00    15.80    15.90    64.23        80.14     27.60 #> 1998-10-01    531.48    23.05    15.78    16.00    64.20        80.22     27.32 #> 1999-01-01    529.51    22.79    15.76    15.77    64.07        79.83     27.03 #> 1999-04-01    533.21    22.86    15.93    15.83    64.80        80.63     27.43 #> 1999-07-01    537.34    22.93    16.13    15.83    65.13        80.96     27.56 #> 1999-10-01    541.26    23.31    16.27    16.03    65.93        81.97     27.91 #> 2000-01-01    544.44    24.26    16.26    16.23    66.03        82.26     27.96 #> 2000-04-01    551.10    25.00    16.43    16.23    66.03        82.27     28.13 #>        ...                                                                      #> 2021-01-01    559.18    37.36    11.72    16.03    61.80        77.82     26.39 #> 2021-04-01    583.66    37.40    12.00    16.33    63.07        79.40     29.50 #> 2021-07-01    601.51    36.85    12.39    16.67    63.97        80.65     31.05 #> 2021-10-01    603.71    36.75    12.45    16.93    64.53        81.45     31.65 #> 2022-01-01    607.64    36.82    12.39    17.10    64.40        81.49     31.72 #> 2022-04-01    612.17    36.89    12.49    17.30    64.63        81.93     32.66 #> 2022-07-01    624.58    37.15    12.65    17.43    65.37        82.82     33.65 #> 2022-10-01    627.67    38.76    12.66    17.40    65.17        82.56     33.19 #> 2023-01-01    631.39    38.85    12.78    17.40    64.97        82.38     33.95 #> 2023-04-01    630.92    37.24    12.91    17.33    65.03        82.38     34.04 #>            ETWTANS.HI.M ETWNS.HI.M EUT.HI.M EIF.HI.M EFI.HI.M E_FIR.HI.M #> 1998-01-01         10.0       25.0     2.79    11.27    17.83      29.99 #> 1998-04-01         10.0       25.1     2.79    11.47    17.79      29.99 #> 1998-07-01         10.1       24.9     2.76    11.53    18.24      30.37 #> 1998-10-01         10.0       24.7     2.73    11.67    18.15      30.32 #> 1999-01-01          9.7       24.2     2.66    11.40    17.83      29.99 #> 1999-04-01         10.0       24.7     2.69    11.30    17.59      29.86 #> 1999-07-01         10.2       24.9     2.71    11.63    17.33      29.46 #> 1999-10-01         10.3       25.3     2.74    11.70    17.17      29.31 #> 2000-01-01         10.4       25.2     2.64    11.70    16.36      28.89 #> 2000-04-01         10.6       25.5     2.66    12.50    16.10      28.73 #>        ...                                                               #> 2021-01-01          7.7       22.9     3.20     7.83    16.16      26.59 #> 2021-04-01          8.1       25.8     3.58     7.83    16.10      27.14 #> 2021-07-01          8.6       27.2     3.77     7.97    16.09      27.59 #> 2021-10-01          9.0       28.3     3.84     8.30    16.09      27.75 #> 2022-01-01          8.9       28.3     3.48     8.23    15.82      27.52 #> 2022-04-01          9.2       28.9     3.59     7.97    15.69      27.69 #> 2022-07-01          9.5       29.7     3.70     8.57    15.62      27.95 #> 2022-10-01          9.6       30.0     3.65     8.70    15.46      27.86 #> 2023-01-01          9.7       30.1     3.71     8.90    15.35      27.65 #> 2023-04-01          9.8       30.1     3.70     9.03    15.11      27.28 #>            ERE.HI.M EPS.HI.M E_PBS.HI.M E_ELSE.HI.M EMA.HI.M EAD.HI.M EED.HI.M #> 1998-01-01    12.17    19.13       54.4      108.27     6.30    29.00    10.50 #> 1998-04-01    12.20    19.03       54.5      109.01     6.30    29.13    10.77 #> 1998-07-01    12.13    19.10       54.6      109.34     6.30    29.17    10.90 #> 1998-10-01    12.17    19.00       54.2      109.26     6.20    29.03    10.90 #> 1999-01-01    12.17    18.87       54.5      109.24     6.13    29.47    10.97 #> 1999-04-01    12.27    19.10       55.2      109.98     6.10    30.00    10.90 #> 1999-07-01    12.13    18.97       55.7      111.11     6.00    30.73    11.10 #> 1999-10-01    12.13    19.27       57.0      112.83     6.03    31.73    11.07 #> 2000-01-01    12.53    19.70       57.5      114.25     5.83    32.00    11.40 #> 2000-04-01    12.63    20.10       58.5      115.96     5.93    32.43    11.23 #>        ...                                                                     #> 2021-01-01    10.43    24.87       66.3      117.66     8.17    33.23    12.23 #> 2021-04-01    11.03    25.47       68.6      122.08     8.37    34.73    12.67 #> 2021-07-01    11.50    25.63       69.1      125.21     8.47    35.03    13.07 #> 2021-10-01    11.67    25.80       70.1      128.01     8.40    35.90    13.53 #> 2022-01-01    11.70    25.73       70.9      129.57     8.70    36.50    13.67 #> 2022-04-01    12.00    25.83       71.1      130.58     8.63    36.67    13.73 #> 2022-07-01    12.33    26.17       72.0      133.06     8.60    37.20    13.93 #> 2022-10-01    12.40    26.47       71.5      133.75     8.73    36.33    14.43 #> 2023-01-01    12.30    26.53       71.9      134.98     8.70    36.63    14.63 #> 2023-04-01    12.17    26.73       72.7      136.48     8.67    37.30    15.17 #>            EHC.HI.M EAF.HI.M EAFAC.HI.M EAFFD.HI.M EOS.HI.M EGV.HI.M EGVFD.HI.M #> 1998-01-01    46.36    86.16      38.51      47.66    21.77   111.63      30.49 #> 1998-04-01    47.03    86.23      38.01      48.22    21.87   111.77      30.36 #> 1998-07-01    47.74    85.77      37.44      48.33    21.87   112.93      30.31 #> 1998-10-01    47.95    85.95      37.57      48.38    21.90   111.67      30.35 #> 1999-01-01    47.53    85.93      37.67      48.26    21.83   111.40      30.26 #> 1999-04-01    48.23    86.63      37.58      49.05    21.97   111.67      30.13 #> 1999-07-01    48.46    86.36      36.86      49.51    22.00   114.33      30.43 #> 1999-10-01    48.61    87.81      38.15      49.66    22.37   113.27      30.47 #> 2000-01-01    48.79    88.12      38.05      50.08    22.67   113.63      30.69 #> 2000-04-01    49.23    89.70      38.72      50.99    22.87   115.63      31.93 #>        ...                                                                      #> 2021-01-01    71.69    71.12      20.62      50.50    23.53   118.80      34.72 #> 2021-04-01    72.20    84.47      27.90      56.57    23.87   119.47      34.87 #> 2021-07-01    72.22    92.62      33.06      59.57    24.87   122.97      34.79 #> 2021-10-01    71.95    93.85      33.81      60.05    25.33   119.80      34.52 #> 2022-01-01    72.49    96.29      35.26      61.02    25.63   119.33      34.49 #> 2022-04-01    72.13    98.93      36.38      62.54    25.97   118.87      34.63 #> 2022-07-01    72.15   101.55      37.35      64.20    26.43   123.63      34.85 #> 2022-10-01    72.76   105.09      38.81      66.28    26.73   121.03      34.79 #> 2023-01-01    72.55   107.28      39.27      68.01    27.07   121.00      34.88 #> 2023-04-01    72.21   105.98      38.96      67.02    27.00   122.43      35.18 #>            EGVST.HI.M EGVSTEDNS.HI.M EGVLC.HI.M #> 1998-01-01      64.40           43.0      16.73 #> 1998-04-01      64.60           44.5      16.80 #> 1998-07-01      65.43           35.9      17.20 #> 1998-10-01      64.60           43.1      16.73 #> 1999-01-01      64.43           43.1      16.70 #> 1999-04-01      64.93           44.7      16.60 #> 1999-07-01      67.13           36.9      16.77 #> 1999-10-01      66.17           44.5      16.63 #> 2000-01-01      66.33           43.9      16.60 #> 2000-04-01      67.03           46.0      16.67 #>        ...                                      #> 2021-01-01      65.30           44.5      18.77 #> 2021-04-01      65.90           46.1      18.70 #> 2021-07-01      69.73           42.2      18.47 #> 2021-10-01      66.83           46.7      18.43 #> 2022-01-01      66.40           46.0      18.43 #> 2022-04-01      65.73           47.1      18.50 #> 2022-07-01      70.37           42.7      18.43 #> 2022-10-01      67.70           48.3      18.53 #> 2023-01-01      67.43           47.1      18.70 #> 2023-04-01      68.47           49.1      18.80"},{"path":"https://uhero.github.io/fcutils/reference/save_plot_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a list of interactive plots to html — save_plot_list","title":"Save a list of interactive plots to html — save_plot_list","text":"Save list interactive plots html","code":""},{"path":"https://uhero.github.io/fcutils/reference/save_plot_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a list of interactive plots to html — save_plot_list","text":"","code":"save_plot_list(plot_list, save_loc)"},{"path":"https://uhero.github.io/fcutils/reference/save_plot_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a list of interactive plots to html — save_plot_list","text":"plot_list list plots generated fcutils::plot_xxxx() functions save_loc location save plots , including file name","code":""},{"path":"https://uhero.github.io/fcutils/reference/save_plot_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a list of interactive plots to html — save_plot_list","text":"nothing (silently save html user defined location)","code":""},{"path":"https://uhero.github.io/fcutils/reference/save_plot_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a list of interactive plots to html — save_plot_list","text":"","code":"# hold the plots in a list plot_out <- list() for (i in monthly_data_example[2:3] |> names()) {   plot_out[[i]] <- plot_1(     monthly_data_example |> tsbox::ts_long() |>       dplyr::filter(stringr::str_detect(id, i)),     rng_start = as.character(Sys.Date() - lubridate::years(5)),     rng_end = as.character(Sys.Date() + lubridate::years(7)),     width = 1500, height = 650, yoy_gr = TRUE   ) } # specify location of the output save_loc <- stringr::str_c(\"~/Downloads/plots_\", Sys.Date(), \".html\") # combine a list of plots into a single html if (FALSE) { # interactive() plot_out |> save_plot_list(save_loc) }"},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":null,"dir":"Reference","previous_headings":"","what":"Set class attribute to tslist — set_attr_tslist","title":"Set class attribute to tslist — set_attr_tslist","text":"Set class attribute tslist","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set class attribute to tslist — set_attr_tslist","text":"","code":"set_attr_tslist(x)"},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set class attribute to tslist — set_attr_tslist","text":"x list, typically result purrr::map() applied tslist","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set class attribute to tslist — set_attr_tslist","text":"list class attributes set list tslist","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set class attribute to tslist — set_attr_tslist","text":"purrr::map() function applied tslist (obtained tsbox::ts_tslist()) drops tslist class attribute. function resets attribute.","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_attr_tslist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set class attribute to tslist — set_attr_tslist","text":"","code":"monthly_data_example |>   tsbox::ts_long() |>   tsbox::ts_tslist() |>   purrr::map(~ .x / 1000) |>   set_attr_tslist() |>   tsbox::ts_tbl() |>   tsbox::ts_wide() #> # A tibble: 275 × 3 #>    time       VISNS_HI VAPNS_HI #>    <date>        <dbl>    <dbl> #>  1 2000-09-01    0.539    0.546 #>  2 2000-10-01    0.567    0.604 #>  3 2000-11-01    0.535    0.577 #>  4 2000-12-01    0.584    0.617 #>  5 2001-01-01    0.558    0.578 #>  6 2001-02-01    0.554    0.559 #>  7 2001-03-01    0.618    0.636 #>  8 2001-04-01    0.558    0.594 #>  9 2001-05-01    0.528    0.586 #> 10 2001-06-01    0.597    0.672 #> # ℹ 265 more rows"},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Set tsrange for behavioral equations to available data range — set_tsrange","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"Set tsrange behavioral equations available data range","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"","code":"set_tsrange(model_w_dat, max_lag = 4, eqns = NULL)"},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"model_w_dat bimets model (data) estimated max_lag largest lag (default = 4) model (offset starting point estimation) eqns names behavioral equations set tsrange (default = NULL: equations)","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"bimets model tsrange set estimation","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"Find periods variables equation available. Shift beginning sample max_lag periods. Set tsrange equation (used estimation).","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_tsrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set tsrange for behavioral equations to available data range — set_tsrange","text":"","code":"if (FALSE) { # interactive() set_tsrange(scen_model_dat, 4) }"},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set udaman token for API access — set_udaman_token","title":"Set udaman token for API access — set_udaman_token","text":"Set udaman token API access","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set udaman token for API access — set_udaman_token","text":"","code":"set_udaman_token(key)"},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set udaman token for API access — set_udaman_token","text":"key string containing 44 characters","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set udaman token for API access — set_udaman_token","text":"true setting token .Renviron succeeded","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set udaman token for API access — set_udaman_token","text":"Save token .Renviron udaman_token = key.","code":""},{"path":"https://uhero.github.io/fcutils/reference/set_udaman_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set udaman token for API access — set_udaman_token","text":"","code":"if (FALSE) { # interactive() set_udaman_token(\"-ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890=\") }"},{"path":"https://uhero.github.io/fcutils/reference/span.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify span of time series (wrapper around tsbox::ts_span()) — span","title":"Specify span of time series (wrapper around tsbox::ts_span()) — span","text":"Specify span time series (wrapper around tsbox::ts_span())","code":""},{"path":"https://uhero.github.io/fcutils/reference/span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify span of time series (wrapper around tsbox::ts_span()) — span","text":"","code":"span(x, start = NULL, end = NULL, template = NULL, extend = FALSE)"},{"path":"https://uhero.github.io/fcutils/reference/span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify span of time series (wrapper around tsbox::ts_span()) — span","text":"x ts-boxable object filter span start start date (see examples) end end date (see examples) template ts-boxable time series (see tsbox::ts_span) extend logical. true, start end values allowed extend series (adding NA values).","code":""},{"path":"https://uhero.github.io/fcutils/reference/span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify span of time series (wrapper around tsbox::ts_span()) — span","text":"filtered object type input","code":""},{"path":"https://uhero.github.io/fcutils/reference/span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify span of time series (wrapper around tsbox::ts_span()) — span","text":"","code":"quarterly_data_example |>   span(2010.1) #> # A tibble: 54 × 31 #>    time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>    <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #>  1 2010-01-01    586.   30.4   13.4   17.9   66.2       84.1    26.4        7   #>  2 2010-04-01    587.   29.8   13.1   18.0   66.4       84.3    26.6        7.1 #>  3 2010-07-01    588.   29.3   13.1   17.9   66.4       84.3    26.8        7.1 #>  4 2010-10-01    591.   29.7   13.3   17.9   66.4       84.3    27.1        7.2 #>  5 2011-01-01    592.   29.4   13.4   17.7   67.0       84.7    27.1        7.2 #>  6 2011-04-01    592.   29.7   13.5   17.7   67.1       84.8    27.1        7   #>  7 2011-07-01    596.   30.0   13.7   17.8   67.4       85.2    27.3        7.1 #>  8 2011-10-01    599.   29.9   13.7   17.9   68.0       85.9    27.7        7.2 #>  9 2012-01-01    598.   30.0   13.6   17.9   68.6       86.6    27.9        7.3 #> 10 2012-04-01    606.   30.0   13.4   17.9   69.1       87.0    28.3        7.7 #> # ℹ 44 more rows #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   span(2010.1, 2010.4) #> # A tibble: 4 × 31 #>   time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 2010-01-01    586.   30.4   13.4   17.9   66.2       84.1    26.4        7   #> 2 2010-04-01    587.   29.8   13.1   18.0   66.4       84.3    26.6        7.1 #> 3 2010-07-01    588.   29.3   13.1   17.9   66.4       84.3    26.8        7.1 #> 4 2010-10-01    591.   29.7   13.3   17.9   66.4       84.3    27.1        7.2 #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl> quarterly_data_example |>   span(\"2010-01-01\", \"2010-12-31\") #> # A tibble: 4 × 31 #>   time       E_NF_HI ECT_HI EMN_HI EWT_HI ERT_HI E_TRADE_HI E_TU_HI ETWTANS_HI #>   <date>       <dbl>  <dbl>  <dbl>  <dbl>  <dbl>      <dbl>   <dbl>      <dbl> #> 1 2010-01-01    586.   30.4   13.4   17.9   66.2       84.1    26.4        7   #> 2 2010-04-01    587.   29.8   13.1   18.0   66.4       84.3    26.6        7.1 #> 3 2010-07-01    588.   29.3   13.1   17.9   66.4       84.3    26.8        7.1 #> 4 2010-10-01    591.   29.7   13.3   17.9   66.4       84.3    27.1        7.2 #> # ℹ 22 more variables: ETWNS_HI <dbl>, EUT_HI <dbl>, EIF_HI <dbl>, #> #   EFI_HI <dbl>, E_FIR_HI <dbl>, ERE_HI <dbl>, EPS_HI <dbl>, E_PBS_HI <dbl>, #> #   E_ELSE_HI <dbl>, EMA_HI <dbl>, EAD_HI <dbl>, EED_HI <dbl>, EHC_HI <dbl>, #> #   EAF_HI <dbl>, EAFAC_HI <dbl>, EAFFD_HI <dbl>, EOS_HI <dbl>, EGV_HI <dbl>, #> #   EGVFD_HI <dbl>, EGVST_HI <dbl>, EGVSTEDNS_HI <dbl>, EGVLC_HI <dbl>"},{"path":"https://uhero.github.io/fcutils/reference/to_ymd.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse strings into dates in yyyy-mm-dd format — to_ymd","title":"Parse strings into dates in yyyy-mm-dd format — to_ymd","text":"Parse strings dates yyyy-mm-dd format","code":""},{"path":"https://uhero.github.io/fcutils/reference/to_ymd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse strings into dates in yyyy-mm-dd format — to_ymd","text":"","code":"to_ymd(x)"},{"path":"https://uhero.github.io/fcutils/reference/to_ymd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse strings into dates in yyyy-mm-dd format — to_ymd","text":"x string (string: yyyymmdd, yyyyqq, yyyy.q, yyyy)","code":""},{"path":"https://uhero.github.io/fcutils/reference/to_ymd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse strings into dates in yyyy-mm-dd format — to_ymd","text":"formatted dates (yyyy-mm-dd)","code":""},{"path":"https://uhero.github.io/fcutils/reference/to_ymd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse strings into dates in yyyy-mm-dd format — to_ymd","text":"","code":"to_ymd(c(\"2010.0211\", 202002, 2020.2, \"2020\")) #> [1] \"2010-02-11\" \"2020-04-01\" \"2020-04-01\" \"2020-01-01\""},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":null,"dir":"Reference","previous_headings":"","what":"colors defined in the UHERO Style Guide — uhcolors","title":"colors defined in the UHERO Style Guide — uhcolors","text":"colors defined UHERO Style Guide","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colors defined in the UHERO Style Guide — uhcolors","text":"","code":"uhcolors"},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"colors defined in the UHERO Style Guide — uhcolors","text":"vector hex color codes","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"colors defined in the UHERO Style Guide — uhcolors","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"colors defined in the UHERO Style Guide — uhcolors","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhcolors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"colors defined in the UHERO Style Guide — uhcolors","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"colors defined in the UHERO Style Guide — uhero_colors","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"colors defined UHERO Style Guide","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"","code":"uhero_colors"},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"vector hex color codes","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"colors defined in the UHERO Style Guide — uhero_colors","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":null,"dir":"Reference","previous_headings":"","what":"transparent versions of UHERO colors — uhero_colors_50","title":"transparent versions of UHERO colors — uhero_colors_50","text":"transparent versions UHERO colors","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transparent versions of UHERO colors — uhero_colors_50","text":"","code":"uhero_colors_50"},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"transparent versions of UHERO colors — uhero_colors_50","text":"vector hex color codes","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"transparent versions of UHERO colors — uhero_colors_50","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"transparent versions of UHERO colors — uhero_colors_50","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_50.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"transparent versions of UHERO colors — uhero_colors_50","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":null,"dir":"Reference","previous_headings":"","what":"lighter versions of UHERO colors — uhero_colors_light","title":"lighter versions of UHERO colors — uhero_colors_light","text":"lighter versions UHERO colors","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lighter versions of UHERO colors — uhero_colors_light","text":"","code":"uhero_colors_light"},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lighter versions of UHERO colors — uhero_colors_light","text":"vector hex color codes","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"lighter versions of UHERO colors — uhero_colors_light","text":"author","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"lighter versions of UHERO colors — uhero_colors_light","text":"uhero.hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/uhero_colors_light.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lighter versions of UHERO colors — uhero_colors_light","text":"Peter Fuleky fuleky@hawaii.edu","code":""},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a bimets model with new/modified equations — update_eqs","title":"Update a bimets model with new/modified equations — update_eqs","text":"Update bimets model new/modified equations","code":""},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a bimets model with new/modified equations — update_eqs","text":"","code":"update_eqs(model_1, model_2, eqList)"},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a bimets model with new/modified equations — update_eqs","text":"model_1 original estimated bimets model model_2 estimated bimets model containing updates (updated equations need estimated) eqList names updated behavioral equations (vector strings), others taken model_1 (equations missing model_2 removed)","code":""},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a bimets model with new/modified equations — update_eqs","text":"estimated bimets model containing updates","code":""},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a bimets model with new/modified equations — update_eqs","text":"Start making copy original model's equations (txt file). Re-specify equations, add new equations, remove needed equations. Load new model model_2 estimate modified/new equations (ok estimate ). Replace equations model_2 remain model_1 estimated equations model_1. Equations remain unchanged present model_1 model_2, present eqList.","code":""},{"path":"https://uhero.github.io/fcutils/reference/update_eqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a bimets model with new/modified equations — update_eqs","text":"","code":"if (FALSE) { # interactive() update_eqs(scen_model_1_est, scen_model_2_est, c(\"E_NF_AT_HI_Q\", \"Y_R_AT_HI_Q\")) }"},{"path":"https://uhero.github.io/fcutils/reference/write_tsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ts-boxable object in tsd format — write_tsd","title":"Save a ts-boxable object in tsd format — write_tsd","text":"Save ts-boxable object tsd format","code":""},{"path":"https://uhero.github.io/fcutils/reference/write_tsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ts-boxable object in tsd format — write_tsd","text":"","code":"write_tsd(x, file)"},{"path":"https://uhero.github.io/fcutils/reference/write_tsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ts-boxable object in tsd format — write_tsd","text":"x ts-boxable object (M, Q, frequency) file character string denoting location name output file","code":""},{"path":"https://uhero.github.io/fcutils/reference/write_tsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a ts-boxable object in tsd format — write_tsd","text":"nothing (silently save contents tsd file user defined location)","code":""},{"path":"https://uhero.github.io/fcutils/reference/write_tsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a ts-boxable object in tsd format — write_tsd","text":"","code":"if (FALSE) { # interactive() quarterly_data_example |> write_tsd(\"out.tsd\") }"},{"path":"https://uhero.github.io/fcutils/reference/ymd_to_yQq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","title":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","text":"Convert dates yyyy-mm-dd yyyyQqq format","code":""},{"path":"https://uhero.github.io/fcutils/reference/ymd_to_yQq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","text":"","code":"ymd_to_yQq(x)"},{"path":"https://uhero.github.io/fcutils/reference/ymd_to_yQq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","text":"x dates (string: yyyy-mm-dd)","code":""},{"path":"https://uhero.github.io/fcutils/reference/ymd_to_yQq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","text":"formatted dates (string: yyyyQqq)","code":""},{"path":"https://uhero.github.io/fcutils/reference/ymd_to_yQq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert dates from yyyy-mm-dd to yyyyQqq format — ymd_to_yQq","text":"","code":"ymd_to_yQq(c(\"2010-01-01\", \"2020-10-01\")) #> [1] \"2010Q1\" \"2020Q4\" ymd_to_yQq(c(\"2010-01-01\", \"2020-10-01\")) |> lubridate::yq() #> [1] \"2010-01-01\" \"2020-10-01\""},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend a series using year over year growth — yoy_to_lev","title":"Extend a series using year over year growth — yoy_to_lev","text":"Extend series using year year growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend a series using year over year growth — yoy_to_lev","text":"","code":"yoy_to_lev(yoy_gr, hist_lev, smooth_span = 0)"},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend a series using year over year growth — yoy_to_lev","text":"yoy_gr ts-boxable object containing year year growth rates hist_lev ts-boxable object containing history levels forecast least one year history (percent) smooth_span extent smoothing 0-1 (default: 0, smoothing). Effect depends length time series. Low smooth_span value may trigger warning, time series short.","code":""},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend a series using year over year growth — yoy_to_lev","text":"object type hist_lev extended year year growth","code":""},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extend a series using year over year growth — yoy_to_lev","text":"function works univariate time series requires growth rates available least last year history. Year--year growth rates propagate fluctuations base period extension period. can mitigated smoothing extension. inputs contain missing values.","code":""},{"path":"https://uhero.github.io/fcutils/reference/yoy_to_lev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend a series using year over year growth — yoy_to_lev","text":"","code":"gr <- quarterly_data_example |>   tsbox::ts_long() |>   dplyr::filter(id == \"E_NF_HI\") |>   tsbox::ts_pcy() lev <- quarterly_data_example |>   tsbox::ts_long() |>   dplyr::filter(id == \"ECT_HI\") res1 <- yoy_to_lev(gr, lev |> dplyr::filter(time <= \"2010-01-01\")) res2 <- yoy_to_lev(gr, lev |> dplyr::filter(time <= \"2010-01-01\"), 1/8) tsbox::ts_plot(lev, res1, res2)"},{"path":"https://uhero.github.io/fcutils/reference/ytd_cum.html","id":null,"dir":"Reference","previous_headings":"","what":"Year to date sum or average — ytd_cum","title":"Year to date sum or average — ytd_cum","text":"Year date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_cum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Year to date sum or average — ytd_cum","text":"","code":"ytd_cum(x, avg = TRUE)"},{"path":"https://uhero.github.io/fcutils/reference/ytd_cum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Year to date sum or average — ytd_cum","text":"x ts-boxable object avg TRUE (default), return year date average, FALSE, return year date sum","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_cum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Year to date sum or average — ytd_cum","text":"object type input containing year date sum average","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_cum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Year to date sum or average — ytd_cum","text":"","code":"monthly_data_example |>   ytd_cum() #> # A tibble: 275 × 3 #>    time       VISNS_HI VAPNS_HI #>    <date>        <dbl>    <dbl> #>  1 2000-09-01     539.     546  #>  2 2000-10-01     553.     575. #>  3 2000-11-01     547.     576. #>  4 2000-12-01     556.     586. #>  5 2001-01-01     558.     578. #>  6 2001-02-01     556.     569. #>  7 2001-03-01     577.     591. #>  8 2001-04-01     572.     592. #>  9 2001-05-01     563.     591. #> 10 2001-06-01     569.     604. #> # ℹ 265 more rows monthly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"VISNS_HI\") |>   tsbox::ts_xts() |>   ytd_cum(avg = FALSE) |>   tsbox::ts_plot()"},{"path":"https://uhero.github.io/fcutils/reference/ytd_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Year to date growth rate — ytd_gr","title":"Year to date growth rate — ytd_gr","text":"Year date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Year to date growth rate — ytd_gr","text":"","code":"ytd_gr(x)"},{"path":"https://uhero.github.io/fcutils/reference/ytd_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Year to date growth rate — ytd_gr","text":"x ts-boxable object","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_gr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Year to date growth rate — ytd_gr","text":"object type input containing year date growth rate","code":""},{"path":"https://uhero.github.io/fcutils/reference/ytd_gr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Year to date growth rate — ytd_gr","text":"","code":"monthly_data_example |>   tsbox::ts_long() |>   tsbox::ts_pick(\"VISNS_HI\") |>   tsbox::ts_xts() |>   ytd_gr() |>   tail() #>            VISNS_HI #> 2023-02-01 29.43640 #> 2023-03-01 23.16987 #> 2023-04-01 16.74155 #> 2023-05-01 13.83124 #> 2023-06-01 12.26230 #> 2023-07-01 10.41733"}]
